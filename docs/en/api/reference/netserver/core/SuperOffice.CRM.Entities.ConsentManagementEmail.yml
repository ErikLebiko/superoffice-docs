### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail
  commentId: T:SuperOffice.CRM.Entities.ConsentManagementEmail
  id: ConsentManagementEmail
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(SuperOffice.CRM.Entities.Person)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.Int32,System.Int32)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.Int32,System.String[],System.Int32,System.Int32)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.String[],System.Int32)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge(System.Int32)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate(System.String)
  - SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables
  - SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate
  - SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail
  - SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists
  langs:
  - csharp
  - vb
  name: ConsentManagementEmail
  nameWithType: ConsentManagementEmail
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public class ConsentManagementEmail
    content.vb: Public Class ConsentManagementEmail
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Entities.ConsentManagementEmail.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Entities.ConsentManagementEmail.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String)
  id: '#ctor(System.Int32,System.Int32,System.Int32,System.Int32,System.String)'
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: ConsentManagementEmail(int, int, int, int, string)
  nameWithType: ConsentManagementEmail.ConsentManagementEmail(int, int, int, int, string)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.ConsentManagementEmail(int, int, int, int, string)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public ConsentManagementEmail(int personId, int emailAddressId, int emailTemplateId, int cultureLcidId, string subject)
    parameters:
    - id: personId
      type: System.Int32
    - id: emailAddressId
      type: System.Int32
    - id: emailTemplateId
      type: System.Int32
    - id: cultureLcidId
      type: System.Int32
    - id: subject
      type: System.String
    content.vb: Public Sub New(personId As Integer, emailAddressId As Integer, emailTemplateId As Integer, cultureLcidId As Integer, subject As String)
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor*
  nameWithType.vb: ConsentManagementEmail.New(Integer, Integer, Integer, Integer, String)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.New(Integer, Integer, Integer, Integer, String)
  name.vb: New(Integer, Integer, Integer, Integer, String)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String)
  id: '#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String)'
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: ConsentManagementEmail(int, string, int, int, string)
  nameWithType: ConsentManagementEmail.ConsentManagementEmail(int, string, int, int, string)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.ConsentManagementEmail(int, string, int, int, string)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public ConsentManagementEmail(int personId, string emailAddress, int emailTemplateId, int cultureLcidId, string subject)
    parameters:
    - id: personId
      type: System.Int32
    - id: emailAddress
      type: System.String
    - id: emailTemplateId
      type: System.Int32
    - id: cultureLcidId
      type: System.Int32
    - id: subject
      type: System.String
    content.vb: Public Sub New(personId As Integer, emailAddress As String, emailTemplateId As Integer, cultureLcidId As Integer, subject As String)
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor*
  nameWithType.vb: ConsentManagementEmail.New(Integer, String, Integer, Integer, String)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.New(Integer, String, Integer, Integer, String)
  name.vb: New(Integer, String, Integer, Integer, String)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String)
  id: '#ctor(System.Int32,System.String,System.Int32,System.Int32,System.String,System.String,System.String)'
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: ConsentManagementEmail(int, string, int, int, string, string, string)
  nameWithType: ConsentManagementEmail.ConsentManagementEmail(int, string, int, int, string, string, string)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.ConsentManagementEmail(int, string, int, int, string, string, string)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public ConsentManagementEmail(int personId, string emailAddress, int emailTemplateId, int cultureLcidId, string subject, string smtpHost, string defaultAddress)
    parameters:
    - id: personId
      type: System.Int32
    - id: emailAddress
      type: System.String
    - id: emailTemplateId
      type: System.Int32
    - id: cultureLcidId
      type: System.Int32
    - id: subject
      type: System.String
    - id: smtpHost
      type: System.String
    - id: defaultAddress
      type: System.String
    content.vb: Public Sub New(personId As Integer, emailAddress As String, emailTemplateId As Integer, cultureLcidId As Integer, subject As String, smtpHost As String, defaultAddress As String)
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor*
  nameWithType.vb: ConsentManagementEmail.New(Integer, String, Integer, Integer, String, String, String)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.New(Integer, String, Integer, Integer, String, String, String)
  name.vb: New(Integer, String, Integer, Integer, String, String, String)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(SuperOffice.CRM.Entities.Person)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor(SuperOffice.CRM.Entities.Person)
  id: '#ctor(SuperOffice.CRM.Entities.Person)'
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: ConsentManagementEmail(Person)
  nameWithType: ConsentManagementEmail.ConsentManagementEmail(Person)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.ConsentManagementEmail(SuperOffice.CRM.Entities.Person)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public ConsentManagementEmail(Person person)
    parameters:
    - id: person
      type: SuperOffice.CRM.Entities.Person
    content.vb: Public Sub New(person As Person)
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor*
  nameWithType.vb: ConsentManagementEmail.New(Person)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.New(SuperOffice.CRM.Entities.Person)
  name.vb: New(Person)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate(System.String)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate(System.String)
  id: GetSupportedLanguagesForDocTmplate(System.String)
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetSupportedLanguagesForDocTmplate(string)
  nameWithType: ConsentManagementEmail.GetSupportedLanguagesForDocTmplate(string)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Gets template languages for a given document template filename
  example: []
  syntax:
    content: public static string[] GetSupportedLanguagesForDocTmplate(string tmplName)
    parameters:
    - id: tmplName
      type: System.String
      description: Template filename
    return:
      type: System.String[]
      description: 'SuperOffice language codes: ["US", "SW", "GE"] or empty array if no language-specific variant exists'
    content.vb: Public Shared Function GetSupportedLanguagesForDocTmplate(tmplName As String) As String()
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate*
  nameWithType.vb: ConsentManagementEmail.GetSupportedLanguagesForDocTmplate(String)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate(String)
  name.vb: GetSupportedLanguagesForDocTmplate(String)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.Int32,System.Int32)
  id: GetBestLanguageForPerson(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetBestLanguageForPerson(int, int)
  nameWithType: ConsentManagementEmail.GetBestLanguageForPerson(int, int)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static string GetBestLanguageForPerson(int personId, int templateId)
    parameters:
    - id: personId
      type: System.Int32
    - id: templateId
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetBestLanguageForPerson(personId As Integer, templateId As Integer) As String
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson*
  nameWithType.vb: ConsentManagementEmail.GetBestLanguageForPerson(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(Integer, Integer)
  name.vb: GetBestLanguageForPerson(Integer, Integer)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.String[],System.Int32)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.String[],System.Int32)
  id: GetBestLanguageForPerson(System.String[],System.Int32)
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetBestLanguageForPerson(string[], int)
  nameWithType: ConsentManagementEmail.GetBestLanguageForPerson(string[], int)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(string[], int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static string GetBestLanguageForPerson(string[] supportedLanguages, int personId)
    parameters:
    - id: supportedLanguages
      type: System.String[]
    - id: personId
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetBestLanguageForPerson(supportedLanguages As String(), personId As Integer) As String
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson*
  nameWithType.vb: ConsentManagementEmail.GetBestLanguageForPerson(String(), Integer)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(String(), Integer)
  name.vb: GetBestLanguageForPerson(String(), Integer)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.Int32,System.String[],System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(System.Int32,System.String[],System.Int32,System.Int32)
  id: GetBestLanguageForPerson(System.Int32,System.String[],System.Int32,System.Int32)
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetBestLanguageForPerson(int, string[], int, int)
  nameWithType: ConsentManagementEmail.GetBestLanguageForPerson(int, string[], int, int)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(int, string[], int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static string GetBestLanguageForPerson(int supportLangId, string[] supportedLanguages, int countryId, int overrideLcid)
    parameters:
    - id: supportLangId
      type: System.Int32
    - id: supportedLanguages
      type: System.String[]
    - id: countryId
      type: System.Int32
    - id: overrideLcid
      type: System.Int32
    return:
      type: System.String
    content.vb: Public Shared Function GetBestLanguageForPerson(supportLangId As Integer, supportedLanguages As String(), countryId As Integer, overrideLcid As Integer) As String
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson*
  nameWithType.vb: ConsentManagementEmail.GetBestLanguageForPerson(Integer, String(), Integer, Integer)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson(Integer, String(), Integer, Integer)
  name.vb: GetBestLanguageForPerson(Integer, String(), Integer, Integer)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail
  id: SendNewPersonConfirmationEmail
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: SendNewPersonConfirmationEmail()
  nameWithType: ConsentManagementEmail.SendNewPersonConfirmationEmail()
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Send email to the new person and archive as a document on the newly created person.
  example: []
  syntax:
    content: public void SendNewPersonConfirmationEmail()
    content.vb: Public Sub SendNewPersonConfirmationEmail()
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail*
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge(System.Int32)
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge(System.Int32)
  id: GetCurrentPrincipalPreferredLangauge(System.Int32)
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetCurrentPrincipalPreferredLangauge(int)
  nameWithType: ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge(int)
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge(int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Get the SO language code to use when translating email and subject
  example: []
  syntax:
    content: public static string GetCurrentPrincipalPreferredLangauge(int overrideCultureLcidId)
    parameters:
    - id: overrideCultureLcidId
      type: System.Int32
    return:
      type: System.String
      description: ''
    content.vb: Public Shared Function GetCurrentPrincipalPreferredLangauge(overrideCultureLcidId As Integer) As String
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge*
  nameWithType.vb: ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge(Integer)
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge(Integer)
  name.vb: GetCurrentPrincipalPreferredLangauge(Integer)
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress
  id: GetFromAddress
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetFromAddress()
  nameWithType: ConsentManagementEmail.GetFromAddress()
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    Get the From: address to use.


    1. Get the default email address (first) of the logged in user
       If in a context without logged in user:
    2. If override address is provided, use this (default sender adress from smtp config is provided here)


    returns empty string otherwise.
  example: []
  syntax:
    content: public string GetFromAddress()
    return:
      type: System.String
      description: From address to use or empty string
    content.vb: Public Function GetFromAddress() As String
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress*
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists
  id: SmtpConnectionExists
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: SmtpConnectionExists()
  nameWithType: ConsentManagementEmail.SmtpConnectionExists()
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public bool SmtpConnectionExists()
    return:
      type: System.Boolean
    content.vb: Public Function SmtpConnectionExists() As Boolean
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists*
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail
  id: GetPersonEmail
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetPersonEmail()
  nameWithType: ConsentManagementEmail.GetPersonEmail()
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public string GetPersonEmail()
    return:
      type: System.String
    content.vb: Public Function GetPersonEmail() As String
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail*
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables
  commentId: M:SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables
  id: GetTemplateVariables
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: GetTemplateVariables()
  nameWithType: ConsentManagementEmail.GetTemplateVariables()
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public TemplateVariables GetTemplateVariables()
    return:
      type: SuperOffice.CRM.Globalization.TemplateVariables
    content.vb: Public Function GetTemplateVariables() As TemplateVariables
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables*
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate
  commentId: P:SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate
  id: HasTemplate
  parent: SuperOffice.CRM.Entities.ConsentManagementEmail
  langs:
  - csharp
  - vb
  name: HasTemplate
  nameWithType: ConsentManagementEmail.HasTemplate
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public bool HasTemplate { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasTemplate As Boolean
  overload: SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate*
references:
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<ConsentManagementEmail, To>(ConsentManagementEmail)
  nameWithType: EnumUtil.MapEnums<ConsentManagementEmail, To>(ConsentManagementEmail)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.ConsentManagementEmail, To>(SuperOffice.CRM.Entities.ConsentManagementEmail)
  nameWithType.vb: EnumUtil.MapEnums(Of ConsentManagementEmail, To)(ConsentManagementEmail)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.ConsentManagementEmail, To)(SuperOffice.CRM.Entities.ConsentManagementEmail)
  name.vb: MapEnums(Of ConsentManagementEmail, To)(ConsentManagementEmail)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Entities.ConsentManagementEmail)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Entities.ConsentManagementEmail)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: )
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<ConsentManagementEmail, To>(ConsentManagementEmail)
  nameWithType: Converters.MapEnums<ConsentManagementEmail, To>(ConsentManagementEmail)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.ConsentManagementEmail, To>(SuperOffice.CRM.Entities.ConsentManagementEmail)
  nameWithType.vb: Converters.MapEnums(Of ConsentManagementEmail, To)(ConsentManagementEmail)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.ConsentManagementEmail, To)(SuperOffice.CRM.Entities.ConsentManagementEmail)
  name.vb: MapEnums(Of ConsentManagementEmail, To)(ConsentManagementEmail)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Entities.ConsentManagementEmail)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Entities.ConsentManagementEmail)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.ConsentManagementEmail
    name: ConsentManagementEmail
    isExternal: true
    href: SuperOffice.CRM.Entities.ConsentManagementEmail.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.#ctor
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail__ctor_System_Int32_System_Int32_System_Int32_System_Int32_System_String_
  name: ConsentManagementEmail
  nameWithType: ConsentManagementEmail.ConsentManagementEmail
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.ConsentManagementEmail
  nameWithType.vb: ConsentManagementEmail.New
  fullName.vb: SuperOffice.CRM.Entities.ConsentManagementEmail.New
  name.vb: New
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Entities.Person
  commentId: T:SuperOffice.CRM.Entities.Person
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.Person.html
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Entities.Person
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_GetSupportedLanguagesForDocTmplate_System_String_
  name: GetSupportedLanguagesForDocTmplate
  nameWithType: ConsentManagementEmail.GetSupportedLanguagesForDocTmplate
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetSupportedLanguagesForDocTmplate
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_GetBestLanguageForPerson_System_Int32_System_Int32_
  name: GetBestLanguageForPerson
  nameWithType: ConsentManagementEmail.GetBestLanguageForPerson
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetBestLanguageForPerson
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_SendNewPersonConfirmationEmail
  name: SendNewPersonConfirmationEmail
  nameWithType: ConsentManagementEmail.SendNewPersonConfirmationEmail
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.SendNewPersonConfirmationEmail
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_GetCurrentPrincipalPreferredLangauge_System_Int32_
  name: GetCurrentPrincipalPreferredLangauge
  nameWithType: ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetCurrentPrincipalPreferredLangauge
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_GetFromAddress
  name: GetFromAddress
  nameWithType: ConsentManagementEmail.GetFromAddress
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetFromAddress
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_SmtpConnectionExists
  name: SmtpConnectionExists
  nameWithType: ConsentManagementEmail.SmtpConnectionExists
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.SmtpConnectionExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_GetPersonEmail
  name: GetPersonEmail
  nameWithType: ConsentManagementEmail.GetPersonEmail
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetPersonEmail
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_GetTemplateVariables
  name: GetTemplateVariables
  nameWithType: ConsentManagementEmail.GetTemplateVariables
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.GetTemplateVariables
- uid: SuperOffice.CRM.Globalization.TemplateVariables
  commentId: T:SuperOffice.CRM.Globalization.TemplateVariables
  parent: SuperOffice.CRM.Globalization
  isExternal: true
  href: SuperOffice.CRM.Globalization.TemplateVariables.html
  name: TemplateVariables
  nameWithType: TemplateVariables
  fullName: SuperOffice.CRM.Globalization.TemplateVariables
- uid: SuperOffice.CRM.Globalization
  commentId: N:SuperOffice.CRM.Globalization
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Globalization
  nameWithType: SuperOffice.CRM.Globalization
  fullName: SuperOffice.CRM.Globalization
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Globalization
    name: Globalization
    isExternal: true
    href: SuperOffice.CRM.Globalization.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Globalization
    name: Globalization
    isExternal: true
    href: SuperOffice.CRM.Globalization.html
- uid: SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate*
  commentId: Overload:SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate
  isExternal: true
  href: SuperOffice.CRM.Entities.ConsentManagementEmail.html#SuperOffice_CRM_Entities_ConsentManagementEmail_HasTemplate
  name: HasTemplate
  nameWithType: ConsentManagementEmail.HasTemplate
  fullName: SuperOffice.CRM.Entities.ConsentManagementEmail.HasTemplate
