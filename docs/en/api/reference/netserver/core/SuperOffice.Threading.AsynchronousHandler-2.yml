### YamlMime:ManagedReference
items:
- uid: SuperOffice.Threading.AsynchronousHandler`2
  commentId: T:SuperOffice.Threading.AsynchronousHandler`2
  id: AsynchronousHandler`2
  parent: SuperOffice.Threading
  children:
  - SuperOffice.Threading.AsynchronousHandler`2.#ctor
  - SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
  - SuperOffice.Threading.AsynchronousHandler`2.ExecuteWork
  - SuperOffice.Threading.AsynchronousHandler`2.HasWorkToDo
  - SuperOffice.Threading.AsynchronousHandler`2.OnSetup(`1)
  - SuperOffice.Threading.AsynchronousHandler`2.Processor
  - SuperOffice.Threading.AsynchronousHandler`2.ScheduleNewWork
  - SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup(`1)
  - SuperOffice.Threading.AsynchronousHandler`2.ThreadName
  - SuperOffice.Threading.AsynchronousHandler`2.ToString
  - SuperOffice.Threading.AsynchronousHandler`2.WasSetupCalled
  langs:
  - csharp
  - vb
  name: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: Base class for services that have an asynchronous part. Knowledge about processing is held by a separate processor.
  remarks: >-
    See design documentation

    in //crm/Documents/CRM Web Spec and Design Documents/NetServer/Core Services.doc
  example: []
  syntax:
    content: 'public abstract class AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument> where TAsynchronousHandlerProcessor : AsynchronousHandlerProcessor<TAsynchronousArgument>, new() where TAsynchronousArgument : class'
    typeParameters:
    - id: TAsynchronousHandlerProcessor
      description: Processor used for actually carrying out the work.  This class is instantiated with the AsynchronousHandler
    - id: TAsynchronousArgument
      description: Type of object used as argument for processing asynchronous.
    content.vb: Public MustInherit Class AsynchronousHandler(Of TAsynchronousHandlerProcessor As {AsynchronousHandlerProcessor(Of TAsynchronousArgument), New}, TAsynchronousArgument As Class)
  inheritance:
  - System.Object
  derivedClasses:
  - SuperOffice.Threading.QueueAsyncChunkHandler`2
  - SuperOffice.Threading.QueuedThreadBase`2
  - SuperOffice.Threading.ThreadPerOperationBase`2
  inheritedMembers:
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Threading.AsynchronousHandler`2.EnumUtil.MapEnums``2
  - SuperOffice.Threading.AsynchronousHandler`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument)
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument)
  name.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument)
- uid: SuperOffice.Threading.AsynchronousHandler`2.#ctor
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.#ctor
  id: '#ctor'
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: AsynchronousHandler()
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousHandler()
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousHandler()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: Constructor, only called from derived classes
  example: []
  syntax:
    content: protected AsynchronousHandler()
    content.vb: Protected Sub New()
  overload: SuperOffice.Threading.AsynchronousHandler`2.#ctor*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).New()
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).New()
  name.vb: New()
- uid: SuperOffice.Threading.AsynchronousHandler`2.ToString
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.ToString
  id: ToString
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ToString()
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ToString()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: Returns value of <xref href="SuperOffice.Threading.AsynchronousHandler%602.ThreadName" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
      description: Value of <xref href="SuperOffice.Threading.AsynchronousHandler%602.ThreadName" data-throw-if-not-resolved="false"></xref>.
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.Threading.AsynchronousHandler`2.ToString*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ToString()
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ToString()
- uid: SuperOffice.Threading.AsynchronousHandler`2.OnSetup(`1)
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.OnSetup(`1)
  id: OnSetup(`1)
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: OnSetup(TAsynchronousArgument)
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.OnSetup(TAsynchronousArgument)
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.OnSetup(TAsynchronousArgument)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    Derived classes that need other behaviour than simply copying the ArgumentParameterCollection

    and PrimaryKey information from the incoming query should override this method.
  example: []
  syntax:
    content: protected virtual bool OnSetup(TAsynchronousArgument inputQuery)
    parameters:
    - id: inputQuery
      type: '{TAsynchronousArgument}'
      description: Incoming query to be copied
    return:
      type: System.Boolean
      description: true - this default implementation signals that there IS something to do in the main routine
    content.vb: Protected Overridable Function OnSetup(inputQuery As TAsynchronousArgument) As Boolean
  overload: SuperOffice.Threading.AsynchronousHandler`2.OnSetup*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).OnSetup(TAsynchronousArgument)
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).OnSetup(TAsynchronousArgument)
- uid: SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup(`1)
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup(`1)
  id: SynchronousSetup(`1)
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: SynchronousSetup(TAsynchronousArgument)
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.SynchronousSetup(TAsynchronousArgument)
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.SynchronousSetup(TAsynchronousArgument)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    Public interface for the synchronous part of the operation. The query to be

    processed must be a parameter to this operation.
  example: []
  syntax:
    content: public bool SynchronousSetup(TAsynchronousArgument inputQuery)
    parameters:
    - id: inputQuery
      type: '{TAsynchronousArgument}'
      description: Query to be processed by the actual service
    return:
      type: System.Boolean
      description: TRUE if there is something to do, i.e., if AsynchronousOperation should be called
    content.vb: Public Function SynchronousSetup(inputQuery As TAsynchronousArgument) As Boolean
  overload: SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).SynchronousSetup(TAsynchronousArgument)
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).SynchronousSetup(TAsynchronousArgument)
- uid: SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
  id: AsynchronousOperation
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: AsynchronousOperation()
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousOperation()
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousOperation()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    Public interface for the asynchronous part of the operation. Any data needed

    for its execution has to be copied by the <xref href="SuperOffice.Threading.AsynchronousHandler%602.SynchronousSetup(%601)" data-throw-if-not-resolved="false"></xref>, because

    you DO NOT KNOW when the OnOperation method will actually be called.
  remarks: >-
    You should not really call this method if the <xref href="SuperOffice.Threading.AsynchronousHandler%602.SynchronousSetup(%601)" data-throw-if-not-resolved="false"></xref> returned false, which can be checked

    by accessing the WorkToDo property. However, it is not an error to call

    this method anyway, as it will check the workToDo variable before actually doing anything.

    <p></p>

    However, if you forget to call <xref href="SuperOffice.Threading.AsynchronousHandler%602.SynchronousSetup(%601)" data-throw-if-not-resolved="false"></xref>, you will get an exception here.
  example:
  - >-
    <pre><code class="lang-csharp">AsynchronousHandler someOperation = new SomeOperation();

    someOperation.SynchronousSetup( currentQuery );

    ...

    if( someOperation.WorkToDo )
        someOperation.AsynchronousOperation();
    // we're done, async thread will sooner or later do the work</code></pre>
  syntax:
    content: public void AsynchronousOperation()
    content.vb: Public Sub AsynchronousOperation()
  overload: SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).AsynchronousOperation()
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).AsynchronousOperation()
- uid: SuperOffice.Threading.AsynchronousHandler`2.ScheduleNewWork
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.ScheduleNewWork
  id: ScheduleNewWork
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: ScheduleNewWork()
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ScheduleNewWork()
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ScheduleNewWork()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: Strategy method for starting processing of new work.
  remarks: >-
    Derived classes must provide an implementation that somehow queues, spawns, executes or in other

    ways processes directly, or sets up for later processing, whatever work is in the InputQueryCopy

    (or the derived class' other unit of work storage).
  example: []
  syntax:
    content: protected abstract void ScheduleNewWork()
    content.vb: Protected MustOverride Sub ScheduleNewWork()
  overload: SuperOffice.Threading.AsynchronousHandler`2.ScheduleNewWork*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ScheduleNewWork()
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ScheduleNewWork()
- uid: SuperOffice.Threading.AsynchronousHandler`2.ExecuteWork
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.ExecuteWork
  id: ExecuteWork
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: ExecuteWork()
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ExecuteWork()
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ExecuteWork()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    Template method that executes the actual work, by calling the OnOperation

    abstract method.
  remarks: >-
    ExecuteWork is called by the thread delegates provided by the various

    execution models. It can be overridden for special needs, but overriders should note that

    they MUST call OnOperation, otherwise they may break the protocol.
  example: []
  syntax:
    content: protected virtual void ExecuteWork()
    content.vb: Protected Overridable Sub ExecuteWork()
  overload: SuperOffice.Threading.AsynchronousHandler`2.ExecuteWork*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ExecuteWork()
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ExecuteWork()
- uid: SuperOffice.Threading.AsynchronousHandler`2.Processor
  commentId: P:SuperOffice.Threading.AsynchronousHandler`2.Processor
  id: Processor
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: Processor
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.Processor
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.Processor
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: Processor executing the operation.
  example: []
  syntax:
    content: protected TAsynchronousHandlerProcessor Processor { get; }
    parameters: []
    return:
      type: '{TAsynchronousHandlerProcessor}'
    content.vb: Protected ReadOnly Property Processor As TAsynchronousHandlerProcessor
  overload: SuperOffice.Threading.AsynchronousHandler`2.Processor*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).Processor
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).Processor
- uid: SuperOffice.Threading.AsynchronousHandler`2.WasSetupCalled
  commentId: P:SuperOffice.Threading.AsynchronousHandler`2.WasSetupCalled
  id: WasSetupCalled
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: WasSetupCalled
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.WasSetupCalled
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.WasSetupCalled
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    A flag property that keeps track of whether the <xref href="SuperOffice.Threading.AsynchronousHandler%602.SynchronousSetup(%601)" data-throw-if-not-resolved="false"></xref> method

    has been called. It is illegal to call <xref href="SuperOffice.Threading.AsynchronousHandler%602.AsynchronousOperation" data-throw-if-not-resolved="false"></xref> if this flag

    is false.
  example: []
  syntax:
    content: protected bool WasSetupCalled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Protected ReadOnly Property WasSetupCalled As Boolean
  overload: SuperOffice.Threading.AsynchronousHandler`2.WasSetupCalled*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).WasSetupCalled
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).WasSetupCalled
- uid: SuperOffice.Threading.AsynchronousHandler`2.HasWorkToDo
  commentId: P:SuperOffice.Threading.AsynchronousHandler`2.HasWorkToDo
  id: HasWorkToDo
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: HasWorkToDo
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.HasWorkToDo
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.HasWorkToDo
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    A flag property that reflects the output of <xref href="SuperOffice.Threading.AsynchronousHandler%602.SynchronousSetup(%601)" data-throw-if-not-resolved="false"></xref>. It is true

    if there is work to do for the <xref href="SuperOffice.Threading.AsynchronousHandler%602.AsynchronousOperation" data-throw-if-not-resolved="false"></xref>.
  example: []
  syntax:
    content: public bool HasWorkToDo { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property HasWorkToDo As Boolean
  overload: SuperOffice.Threading.AsynchronousHandler`2.HasWorkToDo*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).HasWorkToDo
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).HasWorkToDo
- uid: SuperOffice.Threading.AsynchronousHandler`2.ThreadName
  commentId: P:SuperOffice.Threading.AsynchronousHandler`2.ThreadName
  id: ThreadName
  parent: SuperOffice.Threading.AsynchronousHandler`2
  langs:
  - csharp
  - vb
  name: ThreadName
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ThreadName
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ThreadName
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Threading
  summary: >-
    Thread name. The default implementation returns the query type and the table/record of the

    first query in the batch. Subclasses can override and add their content.
  example: []
  syntax:
    content: public virtual string ThreadName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public Overridable ReadOnly Property ThreadName As String
  overload: SuperOffice.Threading.AsynchronousHandler`2.ThreadName*
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ThreadName
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ThreadName
references:
- uid: SuperOffice.Threading
  commentId: N:SuperOffice.Threading
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Threading
  nameWithType: SuperOffice.Threading
  fullName: SuperOffice.Threading
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Threading
    name: Threading
    isExternal: true
    href: SuperOffice.Threading.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Threading
    name: Threading
    isExternal: true
    href: SuperOffice.Threading.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Threading.AsynchronousHandler`2.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>, To>(AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>)
  nameWithType: EnumUtil.MapEnums<AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>, To>(AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>)
  fullName: EnumUtil.MapEnums<SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>, To>(SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>)
  nameWithType.vb: EnumUtil.MapEnums(Of AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument), To)(AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument))
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument), To)(SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument))
  name.vb: MapEnums(Of AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument), To)(AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument))
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Threading.AsynchronousHandler{`0,`1})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: <
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: <
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: '>'
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Threading.AsynchronousHandler{`0,`1})
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: )
  - name: )
- uid: SuperOffice.Threading.AsynchronousHandler`2.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>, To>(AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>)
  nameWithType: Converters.MapEnums<AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>, To>(AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>, To>(SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>)
  nameWithType.vb: Converters.MapEnums(Of AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument), To)(AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument))
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument), To)(SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument))
  name.vb: MapEnums(Of AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument), To)(AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument))
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Threading.AsynchronousHandler{`0,`1})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: <
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: '>'
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: <
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: '>'
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Threading.AsynchronousHandler{`0,`1})
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: )
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Threading.AsynchronousHandler`2
    name: AsynchronousHandler
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html
  - name: (
  - name: Of
  - name: " "
  - name: TAsynchronousHandlerProcessor
  - name: ','
  - name: " "
  - name: TAsynchronousArgument
  - name: )
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Threading.AsynchronousHandler`2.#ctor*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.#ctor
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2__ctor
  name: AsynchronousHandler
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousHandler
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousHandler
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).New
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).New
  name.vb: New
- uid: SuperOffice.Threading.AsynchronousHandler`2.ThreadName
  commentId: P:SuperOffice.Threading.AsynchronousHandler`2.ThreadName
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_ThreadName
  name: ThreadName
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ThreadName
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ThreadName
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ThreadName
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ThreadName
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.Threading.AsynchronousHandler`2.ToString*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.ToString
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_ToString
  name: ToString
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ToString
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ToString
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ToString
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ToString
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Threading.AsynchronousHandler`2.OnSetup*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.OnSetup
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_OnSetup__1_
  name: OnSetup
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.OnSetup
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.OnSetup
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).OnSetup
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).OnSetup
- uid: '{TAsynchronousArgument}'
  commentId: '!:TAsynchronousArgument'
  definition: TAsynchronousArgument
  name: TAsynchronousArgument
  nameWithType: TAsynchronousArgument
  fullName: TAsynchronousArgument
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: TAsynchronousArgument
  name: TAsynchronousArgument
  nameWithType: TAsynchronousArgument
  fullName: TAsynchronousArgument
- uid: SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_SynchronousSetup__1_
  name: SynchronousSetup
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.SynchronousSetup
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.SynchronousSetup
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).SynchronousSetup
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).SynchronousSetup
- uid: SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup(`1)
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup(`1)
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_SynchronousSetup__1_
  name: SynchronousSetup(TAsynchronousArgument)
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.SynchronousSetup(TAsynchronousArgument)
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.SynchronousSetup(TAsynchronousArgument)
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).SynchronousSetup(TAsynchronousArgument)
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).SynchronousSetup(TAsynchronousArgument)
  spec.csharp:
  - uid: SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup(`1)
    name: SynchronousSetup
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_SynchronousSetup__1_
  - name: (
  - name: TAsynchronousArgument
  - name: )
  spec.vb:
  - uid: SuperOffice.Threading.AsynchronousHandler`2.SynchronousSetup(`1)
    name: SynchronousSetup
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_SynchronousSetup__1_
  - name: (
  - name: TAsynchronousArgument
  - name: )
- uid: SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_AsynchronousOperation
  name: AsynchronousOperation
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousOperation
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousOperation
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).AsynchronousOperation
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).AsynchronousOperation
- uid: SuperOffice.Threading.AsynchronousHandler`2.ScheduleNewWork*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.ScheduleNewWork
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_ScheduleNewWork
  name: ScheduleNewWork
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ScheduleNewWork
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ScheduleNewWork
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ScheduleNewWork
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ScheduleNewWork
- uid: SuperOffice.Threading.AsynchronousHandler`2.ExecuteWork*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.ExecuteWork
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_ExecuteWork
  name: ExecuteWork
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ExecuteWork
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ExecuteWork
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ExecuteWork
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ExecuteWork
- uid: SuperOffice.Threading.AsynchronousHandler`2.Processor*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.Processor
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_Processor
  name: Processor
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.Processor
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.Processor
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).Processor
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).Processor
- uid: '{TAsynchronousHandlerProcessor}'
  commentId: '!:TAsynchronousHandlerProcessor'
  definition: TAsynchronousHandlerProcessor
  name: TAsynchronousHandlerProcessor
  nameWithType: TAsynchronousHandlerProcessor
  fullName: TAsynchronousHandlerProcessor
- uid: TAsynchronousHandlerProcessor
  commentId: '!:TAsynchronousHandlerProcessor'
  name: TAsynchronousHandlerProcessor
  nameWithType: TAsynchronousHandlerProcessor
  fullName: TAsynchronousHandlerProcessor
- uid: SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
  commentId: M:SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_AsynchronousOperation
  name: AsynchronousOperation()
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousOperation()
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.AsynchronousOperation()
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).AsynchronousOperation()
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).AsynchronousOperation()
  spec.csharp:
  - uid: SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
    name: AsynchronousOperation
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_AsynchronousOperation
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Threading.AsynchronousHandler`2.AsynchronousOperation
    name: AsynchronousOperation
    isExternal: true
    href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_AsynchronousOperation
  - name: (
  - name: )
- uid: SuperOffice.Threading.AsynchronousHandler`2.WasSetupCalled*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.WasSetupCalled
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_WasSetupCalled
  name: WasSetupCalled
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.WasSetupCalled
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.WasSetupCalled
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).WasSetupCalled
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).WasSetupCalled
- uid: SuperOffice.Threading.AsynchronousHandler`2.HasWorkToDo*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.HasWorkToDo
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_HasWorkToDo
  name: HasWorkToDo
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.HasWorkToDo
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.HasWorkToDo
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).HasWorkToDo
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).HasWorkToDo
- uid: SuperOffice.Threading.AsynchronousHandler`2.ThreadName*
  commentId: Overload:SuperOffice.Threading.AsynchronousHandler`2.ThreadName
  isExternal: true
  href: SuperOffice.Threading.AsynchronousHandler-2.html#SuperOffice_Threading_AsynchronousHandler_2_ThreadName
  name: ThreadName
  nameWithType: AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ThreadName
  fullName: SuperOffice.Threading.AsynchronousHandler<TAsynchronousHandlerProcessor, TAsynchronousArgument>.ThreadName
  nameWithType.vb: AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ThreadName
  fullName.vb: SuperOffice.Threading.AsynchronousHandler(Of TAsynchronousHandlerProcessor, TAsynchronousArgument).ThreadName
