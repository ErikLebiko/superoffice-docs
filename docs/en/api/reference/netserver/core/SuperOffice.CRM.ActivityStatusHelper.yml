### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.ActivityStatusHelper
  commentId: T:SuperOffice.CRM.ActivityStatusHelper
  id: ActivityStatusHelper
  parent: SuperOffice.CRM
  children:
  - SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue(System.String,System.String@,System.Int32@)
  - SuperOffice.CRM.ActivityStatusHelper.SetCompleted(System.String,SuperOffice.Data.ActivityStatus)
  - SuperOffice.CRM.ActivityStatusHelper.SetCompleted(System.String,System.Int32,SuperOffice.Data.ActivityStatus)
  - SuperOffice.CRM.ActivityStatusHelper.ToggleActivity(System.String,System.Boolean,System.Boolean@)
  - SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)
  - SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Boolean)
  - SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Int32)
  - SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Int32,System.Boolean)
  langs:
  - csharp
  - vb
  name: ActivityStatusHelper
  nameWithType: ActivityStatusHelper
  fullName: SuperOffice.CRM.ActivityStatusHelper
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: >-
    This class implements the logic behind the "toggle completed" checkboxes for activities. The public

    entrypoint <xref href="SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)" data-throw-if-not-resolved="false"></xref> will toggle the completed status for an activity, i.e., 

    a document, appointment or sale. Appointments may have three state logic enabled through a preference.

    The changes are saved immediately.
  example: []
  syntax:
    content: public static class ActivityStatusHelper
    content.vb: Public Module ActivityStatusHelper
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)
  id: ToggleCompleted(System.String)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: ToggleCompleted(string)
  nameWithType: ActivityStatusHelper.ToggleCompleted(string)
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: >-
    Toggle the completed status for an activity, i.e., 

    a document, appointment or sale. Appointments may have three state logic enabled through a preference.

    The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be

    made and the value NotStarted will be returned. If there is no write access to the record being changed,

    a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: public static ActivityStatus ToggleCompleted(string keyAndValue)
    parameters:
    - id: keyAndValue
      type: System.String
      description: >-
        Activity identifier, in the form &lt;key&gt;=&lt;value&gt;, where the key is
                    one of sale_id, appointment_id or document_id; and the value is an integer primary key.
    return:
      type: SuperOffice.Data.ActivityStatus
      description: New status
    content.vb: Public Shared Function ToggleCompleted(keyAndValue As String) As ActivityStatus
  overload: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if an unknown key string is passed in.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if you do not have WRITE access to the record you're trying to update
  nameWithType.vb: ActivityStatusHelper.ToggleCompleted(String)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(String)
  name.vb: ToggleCompleted(String)
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Boolean)
  id: ToggleCompleted(System.String,System.Boolean)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: ToggleCompleted(string, bool)
  nameWithType: ActivityStatusHelper.ToggleCompleted(string, bool)
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(string, bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: >-
    Toggle the completed status for an activity, i.e., 

    a document, appointment or sale. Appointments may have three state logic enabled through a preference.

    The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be

    made and the value NotStarted will be returned. If there is no write access to the record being changed,

    a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: public static ActivityStatus ToggleCompleted(string keyAndValue, bool canSetComplete)
    parameters:
    - id: keyAndValue
      type: System.String
      description: >-
        Activity identifier, in the form &lt;key&gt;=&lt;value&gt;, where the key is
                    one of sale_id, appointment_id or document_id; and the value is an integer primary key.
    - id: canSetComplete
      type: System.Boolean
      description: >-
        Specifies whether or not we should check if the activity you want to toggle
                    triggers a suggestion. If the activity triggers a suggestion, and the toggle action is from an un-complete
                    to a complete state, this action is not executed. If you are unsure what value this parameter should have, 
                    use the ToggleCompleted method without this parameter. The default value is true.
    return:
      type: SuperOffice.Data.ActivityStatus
      description: The new status
    content.vb: Public Shared Function ToggleCompleted(keyAndValue As String, canSetComplete As Boolean) As ActivityStatus
  overload: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if an unknown key string is passed in.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if you do not have WRITE access to the record you're trying to update
  nameWithType.vb: ActivityStatusHelper.ToggleCompleted(String, Boolean)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(String, Boolean)
  name.vb: ToggleCompleted(String, Boolean)
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Int32)
  id: ToggleCompleted(System.String,System.Int32)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: ToggleCompleted(string, int)
  nameWithType: ActivityStatusHelper.ToggleCompleted(string, int)
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(string, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: >-
    Toggle the completed status for an activity, i.e., 

    a document, appointment or sale. Appointments may have three state logic enabled through a preference.

    The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be

    made and the value NotStarted will be returned. If there is no write access to the record being changed,

    a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: public static ActivityStatus ToggleCompleted(string keyName, int id)
    parameters:
    - id: keyName
      type: System.String
      description: One of appointment_id, sale_id or document_id
    - id: id
      type: System.Int32
      description: Integer primary key of record to toggle
    return:
      type: SuperOffice.Data.ActivityStatus
      description: New status
    content.vb: Public Shared Function ToggleCompleted(keyName As String, id As Integer) As ActivityStatus
  overload: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if an unknown key string is passed in.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if you do not have WRITE access to the record you're trying to update
  nameWithType.vb: ActivityStatusHelper.ToggleCompleted(String, Integer)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(String, Integer)
  name.vb: ToggleCompleted(String, Integer)
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String,System.Int32,System.Boolean)
  id: ToggleCompleted(System.String,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: ToggleCompleted(string, int, bool)
  nameWithType: ActivityStatusHelper.ToggleCompleted(string, int, bool)
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(string, int, bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: >-
    Toggle the completed status for an activity, i.e., 

    a document, appointment or sale. Appointments may have three state logic enabled through a preference.

    The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be

    made and the value NotStarted will be returned. If there is no write access to the record being changed,

    a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: public static ActivityStatus ToggleCompleted(string keyName, int id, bool canSetComplete)
    parameters:
    - id: keyName
      type: System.String
      description: One of appointment_id, sale_id or document_id
    - id: id
      type: System.Int32
      description: Integer primary key of record to toggle
    - id: canSetComplete
      type: System.Boolean
      description: >-
        Specifies whether or not we should check if the activity you want to toggle
                    triggers a suggestion. If the activity triggers a suggestion, and the toggle action is from an un-complete
                    to a complete state, this action is not executed. If you are unsure what value this parameter should have, 
                    use the ToggleCompleted method without this parameter. The default value is true.
    return:
      type: SuperOffice.Data.ActivityStatus
      description: New status
    content.vb: Public Shared Function ToggleCompleted(keyName As String, id As Integer, canSetComplete As Boolean) As ActivityStatus
  overload: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if an unknown key string is passed in.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if you do not have WRITE access to the record you're trying to update
  nameWithType.vb: ActivityStatusHelper.ToggleCompleted(String, Integer, Boolean)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(String, Integer, Boolean)
  name.vb: ToggleCompleted(String, Integer, Boolean)
- uid: SuperOffice.CRM.ActivityStatusHelper.SetCompleted(System.String,SuperOffice.Data.ActivityStatus)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.SetCompleted(System.String,SuperOffice.Data.ActivityStatus)
  id: SetCompleted(System.String,SuperOffice.Data.ActivityStatus)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: SetCompleted(string, ActivityStatus)
  nameWithType: ActivityStatusHelper.SetCompleted(string, ActivityStatus)
  fullName: SuperOffice.CRM.ActivityStatusHelper.SetCompleted(string, SuperOffice.Data.ActivityStatus)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: >-
    Sets the completed status for an activity, i.e., 

    a document, appointment or sale. Appointments may have three state logic enabled through a preference.

    The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be

    made. If there is no write access to the record being changed,

    a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: public static void SetCompleted(string keyAndValue, ActivityStatus activityStatus)
    parameters:
    - id: keyAndValue
      type: System.String
      description: >-
        Activity identifier, in the form &lt;key&gt;=&lt;value&gt;, where the key is
                    one of sale_id, appointment_id or document_id; and the value is an integer primary key.
    - id: activityStatus
      type: SuperOffice.Data.ActivityStatus
      description: The status to apply.
    content.vb: Public Shared Sub SetCompleted(keyAndValue As String, activityStatus As ActivityStatus)
  overload: SuperOffice.CRM.ActivityStatusHelper.SetCompleted*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if an unknown key string is passed in.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if you do not have WRITE access to the record you're trying to update
  nameWithType.vb: ActivityStatusHelper.SetCompleted(String, ActivityStatus)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.SetCompleted(String, SuperOffice.Data.ActivityStatus)
  name.vb: SetCompleted(String, ActivityStatus)
- uid: SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue(System.String,System.String@,System.Int32@)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue(System.String,System.String@,System.Int32@)
  id: ExtractKeyAndValue(System.String,System.String@,System.Int32@)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: ExtractKeyAndValue(string, out string, out int)
  nameWithType: ActivityStatusHelper.ExtractKeyAndValue(string, out string, out int)
  fullName: SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue(string, out string, out int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public static void ExtractKeyAndValue(string keyAndValue, out string key, out int value)
    parameters:
    - id: keyAndValue
      type: System.String
    - id: key
      type: System.String
    - id: value
      type: System.Int32
    content.vb: Public Shared Sub ExtractKeyAndValue(keyAndValue As String, key As String, value As Integer)
  overload: SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue*
  nameWithType.vb: ActivityStatusHelper.ExtractKeyAndValue(String, String, Integer)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue(String, String, Integer)
  name.vb: ExtractKeyAndValue(String, String, Integer)
- uid: SuperOffice.CRM.ActivityStatusHelper.SetCompleted(System.String,System.Int32,SuperOffice.Data.ActivityStatus)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.SetCompleted(System.String,System.Int32,SuperOffice.Data.ActivityStatus)
  id: SetCompleted(System.String,System.Int32,SuperOffice.Data.ActivityStatus)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: SetCompleted(string, int, ActivityStatus)
  nameWithType: ActivityStatusHelper.SetCompleted(string, int, ActivityStatus)
  fullName: SuperOffice.CRM.ActivityStatusHelper.SetCompleted(string, int, SuperOffice.Data.ActivityStatus)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  summary: >-
    Sets the completed status for an activity, i.e., 

    a document, appointment or sale. Appointments may have three state logic enabled through a preference.

    The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be

    made. If there is no write access to the record being changed,

    a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: public static void SetCompleted(string keyName, int id, ActivityStatus activityStatus)
    parameters:
    - id: keyName
      type: System.String
      description: One of appointment_id, sale_id or document_id
    - id: id
      type: System.Int32
      description: Integer primary key of record to toggle
    - id: activityStatus
      type: SuperOffice.Data.ActivityStatus
      description: The status to apply
    content.vb: Public Shared Sub SetCompleted(keyName As String, id As Integer, activityStatus As ActivityStatus)
  overload: SuperOffice.CRM.ActivityStatusHelper.SetCompleted*
  exceptions:
  - type: SuperOffice.Exceptions.SoIllegalOperationException
    commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
    description: Thrown if an unknown key string is passed in.
  - type: SuperOffice.Exceptions.SoSentryException
    commentId: T:SuperOffice.Exceptions.SoSentryException
    description: Thrown if you do not have WRITE access to the record you're trying to update
  nameWithType.vb: ActivityStatusHelper.SetCompleted(String, Integer, ActivityStatus)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.SetCompleted(String, Integer, SuperOffice.Data.ActivityStatus)
  name.vb: SetCompleted(String, Integer, ActivityStatus)
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleActivity(System.String,System.Boolean,System.Boolean@)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.ToggleActivity(System.String,System.Boolean,System.Boolean@)
  id: ToggleActivity(System.String,System.Boolean,System.Boolean@)
  parent: SuperOffice.CRM.ActivityStatusHelper
  langs:
  - csharp
  - vb
  name: ToggleActivity(string, bool, ref bool)
  nameWithType: ActivityStatusHelper.ToggleActivity(string, bool, ref bool)
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleActivity(string, bool, ref bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM
  syntax:
    content: public static ActivityStatus ToggleActivity(string activityIdentifier, bool canSetComplete, ref bool hasChanged)
    parameters:
    - id: activityIdentifier
      type: System.String
    - id: canSetComplete
      type: System.Boolean
    - id: hasChanged
      type: System.Boolean
    return:
      type: SuperOffice.Data.ActivityStatus
    content.vb: Public Shared Function ToggleActivity(activityIdentifier As String, canSetComplete As Boolean, hasChanged As Boolean) As ActivityStatus
  overload: SuperOffice.CRM.ActivityStatusHelper.ToggleActivity*
  nameWithType.vb: ActivityStatusHelper.ToggleActivity(String, Boolean, Boolean)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.ToggleActivity(String, Boolean, Boolean)
  name.vb: ToggleActivity(String, Boolean, Boolean)
references:
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)
  commentId: M:SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)
  isExternal: true
  href: SuperOffice.CRM.ActivityStatusHelper.html#SuperOffice_CRM_ActivityStatusHelper_ToggleCompleted_System_String_
  name: ToggleCompleted(string)
  nameWithType: ActivityStatusHelper.ToggleCompleted(string)
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(string)
  nameWithType.vb: ActivityStatusHelper.ToggleCompleted(String)
  fullName.vb: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(String)
  name.vb: ToggleCompleted(String)
  spec.csharp:
  - uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)
    name: ToggleCompleted
    isExternal: true
    href: SuperOffice.CRM.ActivityStatusHelper.html#SuperOffice_CRM_ActivityStatusHelper_ToggleCompleted_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted(System.String)
    name: ToggleCompleted
    isExternal: true
    href: SuperOffice.CRM.ActivityStatusHelper.html#SuperOffice_CRM_ActivityStatusHelper_ToggleCompleted_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM
  commentId: N:SuperOffice.CRM
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM
  nameWithType: SuperOffice.CRM
  fullName: SuperOffice.CRM
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.Exceptions.SoIllegalOperationException
  commentId: T:SuperOffice.Exceptions.SoIllegalOperationException
  isExternal: true
  href: SuperOffice.Exceptions.SoIllegalOperationException.html
  name: SoIllegalOperationException
  nameWithType: SoIllegalOperationException
  fullName: SuperOffice.Exceptions.SoIllegalOperationException
- uid: SuperOffice.Exceptions.SoSentryException
  commentId: T:SuperOffice.Exceptions.SoSentryException
  isExternal: true
  href: SuperOffice.Exceptions.SoSentryException.html
  name: SoSentryException
  nameWithType: SoSentryException
  fullName: SuperOffice.Exceptions.SoSentryException
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted*
  commentId: Overload:SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted
  isExternal: true
  href: SuperOffice.CRM.ActivityStatusHelper.html#SuperOffice_CRM_ActivityStatusHelper_ToggleCompleted_System_String_
  name: ToggleCompleted
  nameWithType: ActivityStatusHelper.ToggleCompleted
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleCompleted
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.ActivityStatus
  commentId: T:SuperOffice.Data.ActivityStatus
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.ActivityStatus.html
  name: ActivityStatus
  nameWithType: ActivityStatus
  fullName: SuperOffice.Data.ActivityStatus
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.ActivityStatusHelper.SetCompleted*
  commentId: Overload:SuperOffice.CRM.ActivityStatusHelper.SetCompleted
  isExternal: true
  href: SuperOffice.CRM.ActivityStatusHelper.html#SuperOffice_CRM_ActivityStatusHelper_SetCompleted_System_String_SuperOffice_Data_ActivityStatus_
  name: SetCompleted
  nameWithType: ActivityStatusHelper.SetCompleted
  fullName: SuperOffice.CRM.ActivityStatusHelper.SetCompleted
- uid: SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue*
  commentId: Overload:SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue
  isExternal: true
  href: SuperOffice.CRM.ActivityStatusHelper.html#SuperOffice_CRM_ActivityStatusHelper_ExtractKeyAndValue_System_String_System_String__System_Int32__
  name: ExtractKeyAndValue
  nameWithType: ActivityStatusHelper.ExtractKeyAndValue
  fullName: SuperOffice.CRM.ActivityStatusHelper.ExtractKeyAndValue
- uid: SuperOffice.CRM.ActivityStatusHelper.ToggleActivity*
  commentId: Overload:SuperOffice.CRM.ActivityStatusHelper.ToggleActivity
  isExternal: true
  href: SuperOffice.CRM.ActivityStatusHelper.html#SuperOffice_CRM_ActivityStatusHelper_ToggleActivity_System_String_System_Boolean_System_Boolean__
  name: ToggleActivity
  nameWithType: ActivityStatusHelper.ToggleActivity
  fullName: SuperOffice.CRM.ActivityStatusHelper.ToggleActivity
