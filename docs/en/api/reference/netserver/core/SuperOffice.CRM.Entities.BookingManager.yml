### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Entities.BookingManager
  commentId: T:SuperOffice.CRM.Entities.BookingManager
  id: BookingManager
  parent: SuperOffice.CRM.Entities
  children:
  - SuperOffice.CRM.Entities.BookingManager.#ctor(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  - SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Services.ParticipantInfo)
  - SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  - SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus(SuperOffice.Data.AppointmentStatus)
  - SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus(SuperOffice.CRM.Services.ParticipantInfo)
  - SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant(SuperOffice.CRM.Services.ParticipantInfo)
  - SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Entities.Appointment,SuperOffice.Data.InvitationStatus)
  - SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.Data.InvitationStatus)
  - SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Entities.Appointment)
  - SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.GetBookingType(System.Int32,System.Int32)
  - SuperOffice.CRM.Entities.BookingManager.HasAccepted(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Entities.Appointment)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Entities.Appointment)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Entities.Appointment)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Entities.Appointment)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar(SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentStatus)
  - SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.IsExternalPerson(SuperOffice.CRM.Services.ParticipantInfo)
  - SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
  - SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow,System.Int32)
  - SuperOffice.CRM.Entities.BookingManager.SetSeen(SuperOffice.CRM.Rows.AppointmentRow)
  - SuperOffice.CRM.Entities.BookingManager.SholdParticipate(SuperOffice.CRM.Services.ParticipantInfo)
  - SuperOffice.CRM.Entities.BookingManager.ValidateAppointment(System.Boolean,System.Boolean,SuperOffice.CRM.Rows.AppointmentRow)
  langs:
  - csharp
  - vb
  name: BookingManager
  nameWithType: BookingManager
  fullName: SuperOffice.CRM.Entities.BookingManager
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    The booking manager is mainly used by the 

    <xref href="SuperOffice.CRM.Entities.AppointmentMatrix" data-throw-if-not-resolved="false"></xref> to maintain booking related 

    information.
  remarks: >-
    The <xref href="SuperOffice.CRM.Entities.AppointmentMatrix" data-throw-if-not-resolved="false"></xref> is responsible for database 

    updates of appointment records, but the knowledge about how these 

    records are modified lies in the BookinManager.  The booking manager 

    also handles information about Participants.  Participants are 

    represented both by individual appointment records and the 

    <xref href="SuperOffice.CRM.Services.ParticipantInfo" data-throw-if-not-resolved="false"></xref> object.

    <example>

    <pre><code class="lang-csharp"></code></pre>

    </example>
  example: []
  syntax:
    content: public class BookingManager
    content.vb: Public Class BookingManager
  inheritance:
  - System.Object
  inheritedMembers:
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.CRM.Entities.BookingManager.EnumUtil.MapEnums``2
  - SuperOffice.CRM.Entities.BookingManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.CRM.Entities.BookingManager.#ctor(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.#ctor(SuperOffice.CRM.Rows.AppointmentRow)
  id: '#ctor(SuperOffice.CRM.Rows.AppointmentRow)'
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: BookingManager(AppointmentRow)
  nameWithType: BookingManager.BookingManager(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.BookingManager(SuperOffice.CRM.Rows.AppointmentRow)
  type: Constructor
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: ''
  example: []
  syntax:
    content: public BookingManager(AppointmentRow mainBooking)
    parameters:
    - id: mainBooking
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    content.vb: Public Sub New(mainBooking As AppointmentRow)
  overload: SuperOffice.CRM.Entities.BookingManager.#ctor*
  nameWithType.vb: BookingManager.New(AppointmentRow)
  fullName.vb: SuperOffice.CRM.Entities.BookingManager.New(SuperOffice.CRM.Rows.AppointmentRow)
  name.vb: New(AppointmentRow)
- uid: SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant(SuperOffice.CRM.Services.ParticipantInfo)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant(SuperOffice.CRM.Services.ParticipantInfo)
  id: CreateAppointmentForParticipant(SuperOffice.CRM.Services.ParticipantInfo)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: CreateAppointmentForParticipant(ParticipantInfo)
  nameWithType: BookingManager.CreateAppointmentForParticipant(ParticipantInfo)
  fullName: SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant(SuperOffice.CRM.Services.ParticipantInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Creates a new instance of an appointment row for the participant specified
  example: []
  syntax:
    content: public AppointmentRow CreateAppointmentForParticipant(ParticipantInfo participant)
    parameters:
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
      description: Participant to create an appointment record for
    return:
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: A new instance of an appointment row for the participant specified.
    content.vb: Public Function CreateAppointmentForParticipant(participant As ParticipantInfo) As AppointmentRow
  overload: SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant*
- uid: SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus(SuperOffice.CRM.Services.ParticipantInfo)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus(SuperOffice.CRM.Services.ParticipantInfo)
  id: ConvertInvitationToAppointmentStatus(SuperOffice.CRM.Services.ParticipantInfo)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: ConvertInvitationToAppointmentStatus(ParticipantInfo)
  nameWithType: BookingManager.ConvertInvitationToAppointmentStatus(ParticipantInfo)
  fullName: SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus(SuperOffice.CRM.Services.ParticipantInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static AppointmentStatus ConvertInvitationToAppointmentStatus(ParticipantInfo participant)
    parameters:
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
    return:
      type: SuperOffice.Data.AppointmentStatus
    content.vb: Public Shared Function ConvertInvitationToAppointmentStatus(participant As ParticipantInfo) As AppointmentStatus
  overload: SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus*
- uid: SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus(SuperOffice.Data.AppointmentStatus)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus(SuperOffice.Data.AppointmentStatus)
  id: ConvertAppoinmentToInvitationStatus(SuperOffice.Data.AppointmentStatus)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: ConvertAppoinmentToInvitationStatus(AppointmentStatus)
  nameWithType: BookingManager.ConvertAppoinmentToInvitationStatus(AppointmentStatus)
  fullName: SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus(SuperOffice.Data.AppointmentStatus)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static InvitationStatus ConvertAppoinmentToInvitationStatus(AppointmentStatus appointmentStatus)
    parameters:
    - id: appointmentStatus
      type: SuperOffice.Data.AppointmentStatus
    return:
      type: SuperOffice.Data.InvitationStatus
    content.vb: Public Shared Function ConvertAppoinmentToInvitationStatus(appointmentStatus As AppointmentStatus) As InvitationStatus
  overload: SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus*
- uid: SuperOffice.CRM.Entities.BookingManager.SholdParticipate(SuperOffice.CRM.Services.ParticipantInfo)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.SholdParticipate(SuperOffice.CRM.Services.ParticipantInfo)
  id: SholdParticipate(SuperOffice.CRM.Services.ParticipantInfo)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: SholdParticipate(ParticipantInfo)
  nameWithType: BookingManager.SholdParticipate(ParticipantInfo)
  fullName: SuperOffice.CRM.Entities.BookingManager.SholdParticipate(SuperOffice.CRM.Services.ParticipantInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Check if a participant is supposed to or can be a member of the appointment.
  example: []
  syntax:
    content: public static bool SholdParticipate(ParticipantInfo participant)
    parameters:
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
      description: Participant to sheck for participation.
    return:
      type: System.Boolean
      description: True if the participant should participate.
    content.vb: Public Shared Function SholdParticipate(participant As ParticipantInfo) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.SholdParticipate*
- uid: SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  id: ModifyAppointmentForParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: ModifyAppointmentForParticipant(AppointmentRow)
  nameWithType: BookingManager.ModifyAppointmentForParticipant(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: ''
  example: []
  syntax:
    content: public BookingManagerModified ModifyAppointmentForParticipant(AppointmentRow childBooking)
    parameters:
    - id: childBooking
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    return:
      type: SuperOffice.CRM.Entities.BookingManagerModified
    content.vb: Public Function ModifyAppointmentForParticipant(childBooking As AppointmentRow) As BookingManagerModified
  overload: SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant*
- uid: SuperOffice.CRM.Entities.BookingManager.ValidateAppointment(System.Boolean,System.Boolean,SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.ValidateAppointment(System.Boolean,System.Boolean,SuperOffice.CRM.Rows.AppointmentRow)
  id: ValidateAppointment(System.Boolean,System.Boolean,SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: ValidateAppointment(bool, bool, AppointmentRow)
  nameWithType: BookingManager.ValidateAppointment(bool, bool, AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.ValidateAppointment(bool, bool, SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    This method validates the appointment row and makes sure that business rules that are special for 

    different states of an appointment are followed.
  example: []
  syntax:
    content: public static void ValidateAppointment(bool isBookingMaster, bool isBooking, AppointmentRow appointmentRow)
    parameters:
    - id: isBookingMaster
      type: System.Boolean
      description: ''
    - id: isBooking
      type: System.Boolean
      description: ''
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    content.vb: Public Shared Sub ValidateAppointment(isBookingMaster As Boolean, isBooking As Boolean, appointmentRow As AppointmentRow)
  overload: SuperOffice.CRM.Entities.BookingManager.ValidateAppointment*
  nameWithType.vb: BookingManager.ValidateAppointment(Boolean, Boolean, AppointmentRow)
  fullName.vb: SuperOffice.CRM.Entities.BookingManager.ValidateAppointment(Boolean, Boolean, SuperOffice.CRM.Rows.AppointmentRow)
  name.vb: ValidateAppointment(Boolean, Boolean, AppointmentRow)
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  id: IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentIncludedInParticipantList(AppointmentRow)
  nameWithType: BookingManager.IsAppointmentIncludedInParticipantList(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Does the appointment record represent a user that should be listed in the participant list?
  example: []
  syntax:
    content: public static bool IsAppointmentIncludedInParticipantList(AppointmentRow appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Public Shared Function IsAppointmentIncludedInParticipantList(appointment As AppointmentRow) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList*
- uid: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  id: SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: SetAppointmentToRemovedFromParticipantList(AppointmentRow)
  nameWithType: BookingManager.SetAppointmentToRemovedFromParticipantList(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Set the appointment record to a state where it is not shown in the participant list, assuming that it is the logged on users diary that is being worked on.
  remarks: >-
    The child appointment will be removed from the list if the participant in question has not seen the invitation yet. If he has
                seen the invitation, then his status is updated so he will be notified.
  example: []
  syntax:
    content: public static void SetAppointmentToRemovedFromParticipantList(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: Appointment row in question
    content.vb: Public Shared Sub SetAppointmentToRemovedFromParticipantList(appointmentRow As AppointmentRow)
  overload: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList*
- uid: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow,System.Int32)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow,System.Int32)
  id: SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow,System.Int32)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: SetAppointmentToRemovedFromParticipantList(AppointmentRow, int)
  nameWithType: BookingManager.SetAppointmentToRemovedFromParticipantList(AppointmentRow, int)
  fullName: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Set the appointment record to a state where it is not shown in the participant list.
  remarks: >-
    The child appointment will be removed from the list if the participant in question has not seen the invitation yet. If he has
                seen the invitation, then his status is updated so he will be notified.
  example: []
  syntax:
    content: public static void SetAppointmentToRemovedFromParticipantList(AppointmentRow appointmentRow, int diaryOwner)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: Appointment row in question
    - id: diaryOwner
      type: System.Int32
      description: AssociateId of the owner of the diary.
    content.vb: Public Shared Sub SetAppointmentToRemovedFromParticipantList(appointmentRow As AppointmentRow, diaryOwner As Integer)
  overload: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList*
  nameWithType.vb: BookingManager.SetAppointmentToRemovedFromParticipantList(AppointmentRow, Integer)
  fullName.vb: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList(SuperOffice.CRM.Rows.AppointmentRow, Integer)
  name.vb: SetAppointmentToRemovedFromParticipantList(AppointmentRow, Integer)
- uid: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  id: SetAppointmentToIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: SetAppointmentToIncludedInParticipantList(AppointmentRow)
  nameWithType: BookingManager.SetAppointmentToIncludedInParticipantList(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Set the appointment record to a state where it is shown in the participant list
  remarks: Nothing is modified if the participant is in the participant list (e.g. <xref href="SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)" data-throw-if-not-resolved="false"></xref> is true.
  example: []
  syntax:
    content: public static void SetAppointmentToIncludedInParticipantList(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: Appointment row in question
    content.vb: Public Shared Sub SetAppointmentToIncludedInParticipantList(appointmentRow As AppointmentRow)
  overload: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList*
- uid: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Entities.Appointment,SuperOffice.Data.InvitationStatus)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Entities.Appointment,SuperOffice.Data.InvitationStatus)
  id: GetAppointmentDeleteAction(SuperOffice.CRM.Entities.Appointment,SuperOffice.Data.InvitationStatus)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: GetAppointmentDeleteAction(Appointment, InvitationStatus)
  nameWithType: BookingManager.GetAppointmentDeleteAction(Appointment, InvitationStatus)
  fullName: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Entities.Appointment, SuperOffice.Data.InvitationStatus)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    The method analyzes the appointment given and returns what kind of delete action that 

    should be performed on this instance.
  remarks: >-
    Is it a Main booking or a child booking that is going to be deleted,

    or is the appointment not a booking at all? Is the do by date past date of today? 

    All this parameters requires different Actions to be performed and this method will

    give you the delete action you need to act upon.
  example: []
  syntax:
    content: public static AppointmentDeleteAction GetAppointmentDeleteAction(Appointment appointment, InvitationStatus invitationStatus)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
      description: Appointment appointment
    - id: invitationStatus
      type: SuperOffice.Data.InvitationStatus
    return:
      type: SuperOffice.CRM.Entities.AppointmentDeleteAction
      description: MainBookingDeleteAction, ChildBookingDeleteAction, AssignmentDeleteAction or AppointmentDeleteAction
    content.vb: Public Shared Function GetAppointmentDeleteAction(appointment As Appointment, invitationStatus As InvitationStatus) As AppointmentDeleteAction
  overload: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction*
- uid: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.Data.InvitationStatus)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.Data.InvitationStatus)
  id: GetAppointmentDeleteAction(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.Data.InvitationStatus)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: GetAppointmentDeleteAction(AppointmentRow, InvitationStatus)
  nameWithType: BookingManager.GetAppointmentDeleteAction(AppointmentRow, InvitationStatus)
  fullName: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction(SuperOffice.CRM.Rows.AppointmentRow, SuperOffice.Data.InvitationStatus)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    The method analyzes the appointment given and returns what kind of delete action that 

    should be performed on this instance.
  remarks: >-
    Is it a Main booking or a child booking that is going to be deleted,

    or is the appointment not a booking at all? Is the do by date past date of today? 

    All this parameters requires different Actions to be performed and this method will

    give you the delete action you need to act upon.
  example: []
  syntax:
    content: public static AppointmentDeleteAction GetAppointmentDeleteAction(AppointmentRow appointmentRow, InvitationStatus invitationStatus)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: AppointmentRow appointmentRow
    - id: invitationStatus
      type: SuperOffice.Data.InvitationStatus
    return:
      type: SuperOffice.CRM.Entities.AppointmentDeleteAction
      description: MainBookingDeleteAction, ChildBookingDeleteAction, AssignmentDeleteAction or AppointmentDeleteAction
    content.vb: Public Shared Function GetAppointmentDeleteAction(appointmentRow As AppointmentRow, invitationStatus As InvitationStatus) As AppointmentDeleteAction
  overload: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction*
- uid: SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Entities.Appointment)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Entities.Appointment)
  id: GetBookingType(SuperOffice.CRM.Entities.Appointment)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: GetBookingType(Appointment)
  nameWithType: BookingManager.GetBookingType(Appointment)
  fullName: SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Entities.Appointment)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Get the type of booking row this is, the Main record, a child record or not a booking at all (none)
  example: []
  syntax:
    content: public static BookingType GetBookingType(Appointment appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
      description: ''
    return:
      type: SuperOffice.Data.BookingType
      description: None, Main or Child
    content.vb: Public Shared Function GetBookingType(appointment As Appointment) As BookingType
  overload: SuperOffice.CRM.Entities.BookingManager.GetBookingType*
- uid: SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Rows.AppointmentRow)
  id: GetBookingType(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: GetBookingType(AppointmentRow)
  nameWithType: BookingManager.GetBookingType(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.GetBookingType(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Get the type of booking row this is, the Main record, a child record or not a booking at all (none)
  example: []
  syntax:
    content: public static BookingType GetBookingType(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    return:
      type: SuperOffice.Data.BookingType
      description: None, Main or Child
    content.vb: Public Shared Function GetBookingType(appointmentRow As AppointmentRow) As BookingType
  overload: SuperOffice.CRM.Entities.BookingManager.GetBookingType*
- uid: SuperOffice.CRM.Entities.BookingManager.GetBookingType(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.GetBookingType(System.Int32,System.Int32)
  id: GetBookingType(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: GetBookingType(int, int)
  nameWithType: BookingManager.GetBookingType(int, int)
  fullName: SuperOffice.CRM.Entities.BookingManager.GetBookingType(int, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Get the type of booking row this is, the Main record, a child record or not a booking at all (none)
  example: []
  syntax:
    content: public static BookingType GetBookingType(int appointmentId, int motherId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The AppointmentId of the appointment
    - id: motherId
      type: System.Int32
      description: The MotherId of the appointment
    return:
      type: SuperOffice.Data.BookingType
      description: BookingType Owner, Participant or None
    content.vb: Public Shared Function GetBookingType(appointmentId As Integer, motherId As Integer) As BookingType
  overload: SuperOffice.CRM.Entities.BookingManager.GetBookingType*
  nameWithType.vb: BookingManager.GetBookingType(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Entities.BookingManager.GetBookingType(Integer, Integer)
  name.vb: GetBookingType(Integer, Integer)
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Entities.Appointment)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Entities.Appointment)
  id: IsAppointmentBooking(SuperOffice.CRM.Entities.Appointment)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentBooking(Appointment)
  nameWithType: BookingManager.IsAppointmentBooking(Appointment)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Entities.Appointment)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is a booking appointment (MotherId != 0)
  example: []
  syntax:
    content: public static bool IsAppointmentBooking(Appointment appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
      description: ''
    return:
      type: System.Boolean
      description: True if this is a booking row
    content.vb: Public Shared Function IsAppointmentBooking(appointment As Appointment) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Rows.AppointmentRow)
  id: IsAppointmentBooking(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentBooking(AppointmentRow)
  nameWithType: BookingManager.IsAppointmentBooking(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is a booking appointment (MotherId != 0)
  example: []
  syntax:
    content: public static bool IsAppointmentBooking(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    return:
      type: System.Boolean
      description: True if this is a booking row
    content.vb: Public Shared Function IsAppointmentBooking(appointmentRow As AppointmentRow) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Entities.Appointment)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Entities.Appointment)
  id: IsAppointmentMainBooking(SuperOffice.CRM.Entities.Appointment)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentMainBooking(Appointment)
  nameWithType: BookingManager.IsAppointmentMainBooking(Appointment)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Entities.Appointment)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is a Main booking appointment (MotherId &gt; 0 and MotherId == AppointmentId)
  example: []
  syntax:
    content: public static bool IsAppointmentMainBooking(Appointment appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
      description: ''
    return:
      type: System.Boolean
      description: True if this is a Main booking row
    content.vb: Public Shared Function IsAppointmentMainBooking(appointment As Appointment) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Rows.AppointmentRow)
  id: IsAppointmentMainBooking(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentMainBooking(AppointmentRow)
  nameWithType: BookingManager.IsAppointmentMainBooking(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is a Main booking appointment (MotherId &gt; 0 and MotherId == AppointmentId)
  example: []
  syntax:
    content: public static bool IsAppointmentMainBooking(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    return:
      type: System.Boolean
      description: True if this is a Main booking row
    content.vb: Public Shared Function IsAppointmentMainBooking(appointmentRow As AppointmentRow) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Entities.Appointment)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Entities.Appointment)
  id: IsAppointmentChildBooking(SuperOffice.CRM.Entities.Appointment)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentChildBooking(Appointment)
  nameWithType: BookingManager.IsAppointmentChildBooking(Appointment)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Entities.Appointment)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is a Child booking appointment (MotherId &gt; 0 and MotherId != AppointmentId)
  example: []
  syntax:
    content: public static bool IsAppointmentChildBooking(Appointment appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
      description: ''
    return:
      type: System.Boolean
      description: True if this is a child booking row
    content.vb: Public Shared Function IsAppointmentChildBooking(appointment As Appointment) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Rows.AppointmentRow)
  id: IsAppointmentChildBooking(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentChildBooking(AppointmentRow)
  nameWithType: BookingManager.IsAppointmentChildBooking(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is a Child booking appointment (MotherId &gt; 0 and MotherId != AppointmentId)
  example: []
  syntax:
    content: public static bool IsAppointmentChildBooking(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    return:
      type: System.Boolean
      description: True if this is a child booking row
    content.vb: Public Shared Function IsAppointmentChildBooking(appointmentRow As AppointmentRow) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Entities.Appointment)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Entities.Appointment)
  id: IsAppointmentAssignment(SuperOffice.CRM.Entities.Appointment)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentAssignment(Appointment)
  nameWithType: BookingManager.IsAppointmentAssignment(Appointment)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Entities.Appointment)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is an assignment. Wii also return True if it is a booking row that is also an assignment
  example: []
  syntax:
    content: public static bool IsAppointmentAssignment(Appointment appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Entities.Appointment
      description: ''
    return:
      type: System.Boolean
      description: True if this is an assignment
    content.vb: Public Shared Function IsAppointmentAssignment(appointment As Appointment) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Rows.AppointmentRow)
  id: IsAppointmentAssignment(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentAssignment(AppointmentRow)
  nameWithType: BookingManager.IsAppointmentAssignment(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Test if this appointment row is an assignment. Wii also return True if it is a booking row that is also an assignment
  example: []
  syntax:
    content: public static bool IsAppointmentAssignment(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: ''
    return:
      type: System.Boolean
      description: True if this is an assignment
    content.vb: Public Shared Function IsAppointmentAssignment(appointmentRow As AppointmentRow) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment*
- uid: SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  id: AssignTo(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: AssignTo(AppointmentRow, ParticipantInfo)
  nameWithType: BookingManager.AssignTo(AppointmentRow, ParticipantInfo)
  fullName: SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Rows.AppointmentRow, SuperOffice.CRM.Services.ParticipantInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Assign an appointment to a participant.
  example: []
  syntax:
    content: public static void AssignTo(AppointmentRow row, ParticipantInfo participant)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: The appointment to assign to the new participant.
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
      description: Participant to assign the appointment to.  This participant needs to be an associate.
    content.vb: Public Shared Sub AssignTo(row As AppointmentRow, participant As ParticipantInfo)
  overload: SuperOffice.CRM.Entities.BookingManager.AssignTo*
- uid: SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  id: AssignToExternalOrganizer(SuperOffice.CRM.Rows.AppointmentRow,SuperOffice.CRM.Services.ParticipantInfo)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: AssignToExternalOrganizer(AppointmentRow, ParticipantInfo)
  nameWithType: BookingManager.AssignToExternalOrganizer(AppointmentRow, ParticipantInfo)
  fullName: SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer(SuperOffice.CRM.Rows.AppointmentRow, SuperOffice.CRM.Services.ParticipantInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Assign an appointment to a participant.
  example: []
  syntax:
    content: public static void AssignToExternalOrganizer(AppointmentRow row, ParticipantInfo participant)
    parameters:
    - id: row
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: The appointment to assign to the new participant.
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
      description: Participant to assign the appointment to.  This participant needs to be an associate.
    content.vb: Public Shared Sub AssignToExternalOrganizer(row As AppointmentRow, participant As ParticipantInfo)
  overload: SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer*
- uid: SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Services.ParticipantInfo)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Services.ParticipantInfo)
  id: AssignTo(SuperOffice.CRM.Services.ParticipantInfo)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: AssignTo(ParticipantInfo)
  nameWithType: BookingManager.AssignTo(ParticipantInfo)
  fullName: SuperOffice.CRM.Entities.BookingManager.AssignTo(SuperOffice.CRM.Services.ParticipantInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    Changes the owner of an Appointment and sets the associate id of the associate 

    that assigned the Appointment as Assigned By
  remarks: >-
    Also updates the GroupId, InvitedPersonId, ContactId and EmailId fields. The method

    updates the main booking AppointmentRow. The AppointmentRow given as parameter is marked

    for deletion if the new associate is already a participant in this Booking.
  example: []
  syntax:
    content: public void AssignTo(ParticipantInfo participant)
    parameters:
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
    content.vb: Public Sub AssignTo(participant As ParticipantInfo)
  overload: SuperOffice.CRM.Entities.BookingManager.AssignTo*
- uid: SuperOffice.CRM.Entities.BookingManager.HasAccepted(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.HasAccepted(SuperOffice.CRM.Rows.AppointmentRow)
  id: HasAccepted(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: HasAccepted(AppointmentRow)
  nameWithType: BookingManager.HasAccepted(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.HasAccepted(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Has the appointment been accepted?
  example: []
  syntax:
    content: public static bool HasAccepted(AppointmentRow appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Rows.AppointmentRow
    return:
      type: System.Boolean
      description: True if the status of the appointment is NotStarted or Started
    content.vb: Public Shared Function HasAccepted(appointment As AppointmentRow) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.HasAccepted*
- uid: SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  id: AcceptRejectedAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: AcceptRejectedAppointment(AppointmentRow)
  nameWithType: BookingManager.AcceptRejectedAppointment(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    The booking owner can set the appointment record to a state where it is accepted 

    that the invited participant has rejected to participate.
  example: []
  syntax:
    content: public static void AcceptRejectedAppointment(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: The appointment in question
    content.vb: Public Shared Sub AcceptRejectedAppointment(appointmentRow As AppointmentRow)
  overload: SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment*
- uid: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  id: AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: AcceptAppointment(AppointmentRow)
  nameWithType: BookingManager.AcceptAppointment(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Set the appointment record to a state where it is accepted.
  remarks: >-
    RejectReason is erased automatically when you accept. If this is a main booking
                we also zero the AssignedBy field in case the appointment was an assigned main booking record
  example: []
  syntax:
    content: public static void AcceptAppointment(AppointmentRow appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: The appointment in question
    content.vb: Public Shared Sub AcceptAppointment(appointment As AppointmentRow)
  overload: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment*
- uid: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
  id: RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: RejectAppointment(AppointmentRow, string)
  nameWithType: BookingManager.RejectAppointment(AppointmentRow, string)
  fullName: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Set the appointment record to a state where it is not accepted.
  remarks: >-
    This will set the booking invitation or assignment to rejected. If the appointment is an assignment, then the 

    appointment will be sent back to the sender by switching the AssociateId and AssignedBy values.
  example: []
  syntax:
    content: public static void RejectAppointment(AppointmentRow appointmentRow, string rejectReason)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: Appointment to be Rejected
    - id: rejectReason
      type: System.String
      description: Reject reason to show with the rejection
    content.vb: Public Shared Sub RejectAppointment(appointmentRow As AppointmentRow, rejectReason As String)
  overload: SuperOffice.CRM.Entities.BookingManager.RejectAppointment*
  nameWithType.vb: BookingManager.RejectAppointment(AppointmentRow, String)
  fullName.vb: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow, String)
  name.vb: RejectAppointment(AppointmentRow, String)
- uid: SuperOffice.CRM.Entities.BookingManager.SetSeen(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.SetSeen(SuperOffice.CRM.Rows.AppointmentRow)
  id: SetSeen(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: SetSeen(AppointmentRow)
  nameWithType: BookingManager.SetSeen(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.SetSeen(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Sets an appointment Invitation or Assignment to seen.
  remarks: >-
    Set Seen (Booking or Assignment) or MovedSeen (Booking) depending on the previous status 

    of the Appointment
  example: []
  syntax:
    content: public static void SetSeen(AppointmentRow appointmentRow)
    parameters:
    - id: appointmentRow
      type: SuperOffice.CRM.Rows.AppointmentRow
      description: AppointmentRow appointmentRow - The appointment row whos status should be set to Seen
    content.vb: Public Shared Sub SetSeen(appointmentRow As AppointmentRow)
  overload: SuperOffice.CRM.Entities.BookingManager.SetSeen*
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar(SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentStatus)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar(SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentStatus)
  id: IsAppointmentStatusSimilar(SuperOffice.Data.AppointmentStatus,SuperOffice.Data.AppointmentStatus)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsAppointmentStatusSimilar(AppointmentStatus, AppointmentStatus)
  nameWithType: BookingManager.IsAppointmentStatusSimilar(AppointmentStatus, AppointmentStatus)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar(SuperOffice.Data.AppointmentStatus, SuperOffice.Data.AppointmentStatus)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: >-
    This method compares to <xref href="SuperOffice.Data.AppointmentStatus" data-throw-if-not-resolved="false"></xref> enumerators and 

    determines if they are similar, hence; threated equally.  The typical scenario 

    is that a repeating  booking needs to determine if an action like 

    <xref href="SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)" data-throw-if-not-resolved="false"></xref>  or <xref href="SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow%2cSystem.String)" data-throw-if-not-resolved="false"></xref> should be 

    carried out on a later instance in a series.  Such operations should be carried 

    out if the status is similar.
  example: []
  syntax:
    content: public static bool IsAppointmentStatusSimilar(AppointmentStatus originalStaus, AppointmentStatus compareStatus)
    parameters:
    - id: originalStaus
      type: SuperOffice.Data.AppointmentStatus
      description: >-
        First status to compare, typically the status of 
                    the first appointment in a repeating series.
    - id: compareStatus
      type: SuperOffice.Data.AppointmentStatus
      description: >-
        Second status to compare, typically the status of
                    an appointment later on in the series.
    return:
      type: System.Boolean
      description: True if the appointment status are similar.
    content.vb: Public Shared Function IsAppointmentStatusSimilar(originalStaus As AppointmentStatus, compareStatus As AppointmentStatus) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar*
- uid: SuperOffice.CRM.Entities.BookingManager.IsExternalPerson(SuperOffice.CRM.Services.ParticipantInfo)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsExternalPerson(SuperOffice.CRM.Services.ParticipantInfo)
  id: IsExternalPerson(SuperOffice.CRM.Services.ParticipantInfo)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsExternalPerson(ParticipantInfo)
  nameWithType: BookingManager.IsExternalPerson(ParticipantInfo)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsExternalPerson(SuperOffice.CRM.Services.ParticipantInfo)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  summary: Check if the participant is an external person
  example: []
  syntax:
    content: public static bool IsExternalPerson(ParticipantInfo participantInfo)
    parameters:
    - id: participantInfo
      type: SuperOffice.CRM.Services.ParticipantInfo
      description: <xref href="SuperOffice.CRM.Services.ParticipantInfo" data-throw-if-not-resolved="false"></xref>
    return:
      type: System.Boolean
      description: true if the participant is an external person.
    content.vb: Public Shared Function IsExternalPerson(participantInfo As ParticipantInfo) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsExternalPerson*
- uid: SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  id: IsEmailParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  parent: SuperOffice.CRM.Entities.BookingManager
  langs:
  - csharp
  - vb
  name: IsEmailParticipant(AppointmentRow)
  nameWithType: BookingManager.IsEmailParticipant(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant(SuperOffice.CRM.Rows.AppointmentRow)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.CRM.Entities
  syntax:
    content: public static bool IsEmailParticipant(AppointmentRow appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Rows.AppointmentRow
    return:
      type: System.Boolean
    content.vb: Public Shared Function IsEmailParticipant(appointment As AppointmentRow) As Boolean
  overload: SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant*
references:
- uid: SuperOffice.CRM.Entities.AppointmentMatrix
  commentId: T:SuperOffice.CRM.Entities.AppointmentMatrix
  isExternal: true
  href: SuperOffice.CRM.Entities.AppointmentMatrix.html
  name: AppointmentMatrix
  nameWithType: AppointmentMatrix
  fullName: SuperOffice.CRM.Entities.AppointmentMatrix
- uid: SuperOffice.CRM.Services.ParticipantInfo
  commentId: T:SuperOffice.CRM.Services.ParticipantInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.ParticipantInfo.html
  name: ParticipantInfo
  nameWithType: ParticipantInfo
  fullName: SuperOffice.CRM.Services.ParticipantInfo
- uid: SuperOffice.CRM.Entities
  commentId: N:SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Entities
  nameWithType: SuperOffice.CRM.Entities
  fullName: SuperOffice.CRM.Entities
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Entities
    name: Entities
    isExternal: true
    href: SuperOffice.CRM.Entities.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.CRM.Entities.BookingManager.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<BookingManager, To>(BookingManager)
  nameWithType: EnumUtil.MapEnums<BookingManager, To>(BookingManager)
  fullName: EnumUtil.MapEnums<SuperOffice.CRM.Entities.BookingManager, To>(SuperOffice.CRM.Entities.BookingManager)
  nameWithType.vb: EnumUtil.MapEnums(Of BookingManager, To)(BookingManager)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.CRM.Entities.BookingManager, To)(SuperOffice.CRM.Entities.BookingManager)
  name.vb: MapEnums(Of BookingManager, To)(BookingManager)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Entities.BookingManager)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.CRM.Entities.BookingManager)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: )
- uid: SuperOffice.CRM.Entities.BookingManager.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<BookingManager, To>(BookingManager)
  nameWithType: Converters.MapEnums<BookingManager, To>(BookingManager)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.CRM.Entities.BookingManager, To>(SuperOffice.CRM.Entities.BookingManager)
  nameWithType.vb: Converters.MapEnums(Of BookingManager, To)(BookingManager)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.CRM.Entities.BookingManager, To)(SuperOffice.CRM.Entities.BookingManager)
  name.vb: MapEnums(Of BookingManager, To)(BookingManager)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Entities.BookingManager)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.CRM.Entities.BookingManager)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.CRM.Entities.BookingManager
    name: BookingManager
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html
  - name: )
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.CRM.Entities.BookingManager.#ctor*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.#ctor
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager__ctor_SuperOffice_CRM_Rows_AppointmentRow_
  name: BookingManager
  nameWithType: BookingManager.BookingManager
  fullName: SuperOffice.CRM.Entities.BookingManager.BookingManager
  nameWithType.vb: BookingManager.New
  fullName.vb: SuperOffice.CRM.Entities.BookingManager.New
  name.vb: New
- uid: SuperOffice.CRM.Rows.AppointmentRow
  commentId: T:SuperOffice.CRM.Rows.AppointmentRow
  parent: SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.CRM.Rows.AppointmentRow.html
  name: AppointmentRow
  nameWithType: AppointmentRow
  fullName: SuperOffice.CRM.Rows.AppointmentRow
- uid: SuperOffice.CRM.Rows
  commentId: N:SuperOffice.CRM.Rows
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Rows
  nameWithType: SuperOffice.CRM.Rows
  fullName: SuperOffice.CRM.Rows
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Rows
    name: Rows
    isExternal: true
    href: SuperOffice.CRM.Rows.html
- uid: SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_CreateAppointmentForParticipant_SuperOffice_CRM_Services_ParticipantInfo_
  name: CreateAppointmentForParticipant
  nameWithType: BookingManager.CreateAppointmentForParticipant
  fullName: SuperOffice.CRM.Entities.BookingManager.CreateAppointmentForParticipant
- uid: SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_ConvertInvitationToAppointmentStatus_SuperOffice_CRM_Services_ParticipantInfo_
  name: ConvertInvitationToAppointmentStatus
  nameWithType: BookingManager.ConvertInvitationToAppointmentStatus
  fullName: SuperOffice.CRM.Entities.BookingManager.ConvertInvitationToAppointmentStatus
- uid: SuperOffice.Data.AppointmentStatus
  commentId: T:SuperOffice.Data.AppointmentStatus
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.AppointmentStatus.html
  name: AppointmentStatus
  nameWithType: AppointmentStatus
  fullName: SuperOffice.Data.AppointmentStatus
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_ConvertAppoinmentToInvitationStatus_SuperOffice_Data_AppointmentStatus_
  name: ConvertAppoinmentToInvitationStatus
  nameWithType: BookingManager.ConvertAppoinmentToInvitationStatus
  fullName: SuperOffice.CRM.Entities.BookingManager.ConvertAppoinmentToInvitationStatus
- uid: SuperOffice.Data.InvitationStatus
  commentId: T:SuperOffice.Data.InvitationStatus
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.InvitationStatus.html
  name: InvitationStatus
  nameWithType: InvitationStatus
  fullName: SuperOffice.Data.InvitationStatus
- uid: SuperOffice.CRM.Entities.BookingManager.SholdParticipate*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.SholdParticipate
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_SholdParticipate_SuperOffice_CRM_Services_ParticipantInfo_
  name: SholdParticipate
  nameWithType: BookingManager.SholdParticipate
  fullName: SuperOffice.CRM.Entities.BookingManager.SholdParticipate
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_ModifyAppointmentForParticipant_SuperOffice_CRM_Rows_AppointmentRow_
  name: ModifyAppointmentForParticipant
  nameWithType: BookingManager.ModifyAppointmentForParticipant
  fullName: SuperOffice.CRM.Entities.BookingManager.ModifyAppointmentForParticipant
- uid: SuperOffice.CRM.Entities.BookingManagerModified
  commentId: T:SuperOffice.CRM.Entities.BookingManagerModified
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManagerModified.html
  name: BookingManagerModified
  nameWithType: BookingManagerModified
  fullName: SuperOffice.CRM.Entities.BookingManagerModified
- uid: SuperOffice.CRM.Entities.BookingManager.ValidateAppointment*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.ValidateAppointment
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_ValidateAppointment_System_Boolean_System_Boolean_SuperOffice_CRM_Rows_AppointmentRow_
  name: ValidateAppointment
  nameWithType: BookingManager.ValidateAppointment
  fullName: SuperOffice.CRM.Entities.BookingManager.ValidateAppointment
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentIncludedInParticipantList_SuperOffice_CRM_Rows_AppointmentRow_
  name: IsAppointmentIncludedInParticipantList
  nameWithType: BookingManager.IsAppointmentIncludedInParticipantList
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList
- uid: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_SetAppointmentToRemovedFromParticipantList_SuperOffice_CRM_Rows_AppointmentRow_
  name: SetAppointmentToRemovedFromParticipantList
  nameWithType: BookingManager.SetAppointmentToRemovedFromParticipantList
  fullName: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToRemovedFromParticipantList
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentIncludedInParticipantList_SuperOffice_CRM_Rows_AppointmentRow_
  name: IsAppointmentIncludedInParticipantList(AppointmentRow)
  nameWithType: BookingManager.IsAppointmentIncludedInParticipantList(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
    name: IsAppointmentIncludedInParticipantList
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentIncludedInParticipantList_SuperOffice_CRM_Rows_AppointmentRow_
  - name: (
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    isExternal: true
    href: SuperOffice.CRM.Rows.AppointmentRow.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentIncludedInParticipantList(SuperOffice.CRM.Rows.AppointmentRow)
    name: IsAppointmentIncludedInParticipantList
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentIncludedInParticipantList_SuperOffice_CRM_Rows_AppointmentRow_
  - name: (
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    isExternal: true
    href: SuperOffice.CRM.Rows.AppointmentRow.html
  - name: )
- uid: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_SetAppointmentToIncludedInParticipantList_SuperOffice_CRM_Rows_AppointmentRow_
  name: SetAppointmentToIncludedInParticipantList
  nameWithType: BookingManager.SetAppointmentToIncludedInParticipantList
  fullName: SuperOffice.CRM.Entities.BookingManager.SetAppointmentToIncludedInParticipantList
- uid: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_GetAppointmentDeleteAction_SuperOffice_CRM_Entities_Appointment_SuperOffice_Data_InvitationStatus_
  name: GetAppointmentDeleteAction
  nameWithType: BookingManager.GetAppointmentDeleteAction
  fullName: SuperOffice.CRM.Entities.BookingManager.GetAppointmentDeleteAction
- uid: SuperOffice.CRM.Entities.Appointment
  commentId: T:SuperOffice.CRM.Entities.Appointment
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.Appointment.html
  name: Appointment
  nameWithType: Appointment
  fullName: SuperOffice.CRM.Entities.Appointment
- uid: SuperOffice.CRM.Entities.AppointmentDeleteAction
  commentId: T:SuperOffice.CRM.Entities.AppointmentDeleteAction
  parent: SuperOffice.CRM.Entities
  isExternal: true
  href: SuperOffice.CRM.Entities.AppointmentDeleteAction.html
  name: AppointmentDeleteAction
  nameWithType: AppointmentDeleteAction
  fullName: SuperOffice.CRM.Entities.AppointmentDeleteAction
- uid: SuperOffice.CRM.Entities.BookingManager.GetBookingType*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.GetBookingType
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_GetBookingType_SuperOffice_CRM_Entities_Appointment_
  name: GetBookingType
  nameWithType: BookingManager.GetBookingType
  fullName: SuperOffice.CRM.Entities.BookingManager.GetBookingType
- uid: SuperOffice.Data.BookingType
  commentId: T:SuperOffice.Data.BookingType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.BookingType.html
  name: BookingType
  nameWithType: BookingType
  fullName: SuperOffice.Data.BookingType
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentBooking_SuperOffice_CRM_Entities_Appointment_
  name: IsAppointmentBooking
  nameWithType: BookingManager.IsAppointmentBooking
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentBooking
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentMainBooking_SuperOffice_CRM_Entities_Appointment_
  name: IsAppointmentMainBooking
  nameWithType: BookingManager.IsAppointmentMainBooking
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentMainBooking
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentChildBooking_SuperOffice_CRM_Entities_Appointment_
  name: IsAppointmentChildBooking
  nameWithType: BookingManager.IsAppointmentChildBooking
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentChildBooking
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentAssignment_SuperOffice_CRM_Entities_Appointment_
  name: IsAppointmentAssignment
  nameWithType: BookingManager.IsAppointmentAssignment
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentAssignment
- uid: SuperOffice.CRM.Entities.BookingManager.AssignTo*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.AssignTo
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_AssignTo_SuperOffice_CRM_Rows_AppointmentRow_SuperOffice_CRM_Services_ParticipantInfo_
  name: AssignTo
  nameWithType: BookingManager.AssignTo
  fullName: SuperOffice.CRM.Entities.BookingManager.AssignTo
- uid: SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_AssignToExternalOrganizer_SuperOffice_CRM_Rows_AppointmentRow_SuperOffice_CRM_Services_ParticipantInfo_
  name: AssignToExternalOrganizer
  nameWithType: BookingManager.AssignToExternalOrganizer
  fullName: SuperOffice.CRM.Entities.BookingManager.AssignToExternalOrganizer
- uid: SuperOffice.CRM.Entities.BookingManager.HasAccepted*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.HasAccepted
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_HasAccepted_SuperOffice_CRM_Rows_AppointmentRow_
  name: HasAccepted
  nameWithType: BookingManager.HasAccepted
  fullName: SuperOffice.CRM.Entities.BookingManager.HasAccepted
- uid: SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_AcceptRejectedAppointment_SuperOffice_CRM_Rows_AppointmentRow_
  name: AcceptRejectedAppointment
  nameWithType: BookingManager.AcceptRejectedAppointment
  fullName: SuperOffice.CRM.Entities.BookingManager.AcceptRejectedAppointment
- uid: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.AcceptAppointment
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_AcceptAppointment_SuperOffice_CRM_Rows_AppointmentRow_
  name: AcceptAppointment
  nameWithType: BookingManager.AcceptAppointment
  fullName: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment
- uid: SuperOffice.CRM.Entities.BookingManager.RejectAppointment*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.RejectAppointment
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_RejectAppointment_SuperOffice_CRM_Rows_AppointmentRow_System_String_
  name: RejectAppointment
  nameWithType: BookingManager.RejectAppointment
  fullName: SuperOffice.CRM.Entities.BookingManager.RejectAppointment
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Entities.BookingManager.SetSeen*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.SetSeen
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_SetSeen_SuperOffice_CRM_Rows_AppointmentRow_
  name: SetSeen
  nameWithType: BookingManager.SetSeen
  fullName: SuperOffice.CRM.Entities.BookingManager.SetSeen
- uid: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_AcceptAppointment_SuperOffice_CRM_Rows_AppointmentRow_
  name: AcceptAppointment(AppointmentRow)
  nameWithType: BookingManager.AcceptAppointment(AppointmentRow)
  fullName: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
    name: AcceptAppointment
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_AcceptAppointment_SuperOffice_CRM_Rows_AppointmentRow_
  - name: (
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    isExternal: true
    href: SuperOffice.CRM.Rows.AppointmentRow.html
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.BookingManager.AcceptAppointment(SuperOffice.CRM.Rows.AppointmentRow)
    name: AcceptAppointment
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_AcceptAppointment_SuperOffice_CRM_Rows_AppointmentRow_
  - name: (
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    isExternal: true
    href: SuperOffice.CRM.Rows.AppointmentRow.html
  - name: )
- uid: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
  commentId: M:SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_RejectAppointment_SuperOffice_CRM_Rows_AppointmentRow_System_String_
  name: RejectAppointment(AppointmentRow, string)
  nameWithType: BookingManager.RejectAppointment(AppointmentRow, string)
  fullName: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow, string)
  nameWithType.vb: BookingManager.RejectAppointment(AppointmentRow, String)
  fullName.vb: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow, String)
  name.vb: RejectAppointment(AppointmentRow, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
    name: RejectAppointment
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_RejectAppointment_SuperOffice_CRM_Rows_AppointmentRow_System_String_
  - name: (
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    isExternal: true
    href: SuperOffice.CRM.Rows.AppointmentRow.html
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Entities.BookingManager.RejectAppointment(SuperOffice.CRM.Rows.AppointmentRow,System.String)
    name: RejectAppointment
    isExternal: true
    href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_RejectAppointment_SuperOffice_CRM_Rows_AppointmentRow_System_String_
  - name: (
  - uid: SuperOffice.CRM.Rows.AppointmentRow
    name: AppointmentRow
    isExternal: true
    href: SuperOffice.CRM.Rows.AppointmentRow.html
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsAppointmentStatusSimilar_SuperOffice_Data_AppointmentStatus_SuperOffice_Data_AppointmentStatus_
  name: IsAppointmentStatusSimilar
  nameWithType: BookingManager.IsAppointmentStatusSimilar
  fullName: SuperOffice.CRM.Entities.BookingManager.IsAppointmentStatusSimilar
- uid: SuperOffice.CRM.Entities.BookingManager.IsExternalPerson*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsExternalPerson
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsExternalPerson_SuperOffice_CRM_Services_ParticipantInfo_
  name: IsExternalPerson
  nameWithType: BookingManager.IsExternalPerson
  fullName: SuperOffice.CRM.Entities.BookingManager.IsExternalPerson
- uid: SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant*
  commentId: Overload:SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant
  isExternal: true
  href: SuperOffice.CRM.Entities.BookingManager.html#SuperOffice_CRM_Entities_BookingManager_IsEmailParticipant_SuperOffice_CRM_Rows_AppointmentRow_
  name: IsEmailParticipant
  nameWithType: BookingManager.IsEmailParticipant
  fullName: SuperOffice.CRM.Entities.BookingManager.IsEmailParticipant
