### YamlMime:ManagedReference
items:
- uid: SuperOffice.IO.ITempFileProvider
  commentId: T:SuperOffice.IO.ITempFileProvider
  id: ITempFileProvider
  parent: SuperOffice.IO
  children:
  - SuperOffice.IO.ITempFileProvider.CheckIfFileExists(System.String)
  - SuperOffice.IO.ITempFileProvider.CreateFile(System.String)
  - SuperOffice.IO.ITempFileProvider.DeleteFile(System.String)
  - SuperOffice.IO.ITempFileProvider.ReadFileChunk(System.String,System.Int64,System.Byte[])
  - SuperOffice.IO.ITempFileProvider.ReadFileComplete(System.String)
  - SuperOffice.IO.ITempFileProvider.WriteFileChunk(System.String,System.Int64,System.Byte[])
  - SuperOffice.IO.ITempFileProvider.WriteFileComplete(System.String,System.IO.Stream)
  langs:
  - csharp
  - vb
  name: ITempFileProvider
  nameWithType: ITempFileProvider
  fullName: SuperOffice.IO.ITempFileProvider
  type: Interface
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Interface defining a provider that offers services for reading and writing temporary files.
  remarks: >-
    Temporary files are used in several contexts - when transferring documents in chunks into and out of

    NetServer; when uploading a document to be saved through the Document dialog, and when handling mails

    and attachments.

    <p></p>

    The implementation supplied with NetServer provides these services using temporary files,

    controlled by the Documents section in the config file with respect to path and impersonation. 

    <p></p>
  example: []
  syntax:
    content: public interface ITempFileProvider
    content.vb: Public Interface ITempFileProvider
  extensionMethods:
  - SuperOffice.IO.ITempFileProvider.EnumUtil.MapEnums``2
  - SuperOffice.IO.ITempFileProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.IO.ITempFileProvider.CreateFile(System.String)
  commentId: M:SuperOffice.IO.ITempFileProvider.CreateFile(System.String)
  id: CreateFile(System.String)
  parent: SuperOffice.IO.ITempFileProvider
  langs:
  - csharp
  - vb
  name: CreateFile(string)
  nameWithType: ITempFileProvider.CreateFile(string)
  fullName: SuperOffice.IO.ITempFileProvider.CreateFile(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Create a temporary 'file'
  example: []
  syntax:
    content: string CreateFile(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        Name to be used for later access. The actual key used by the implementation should also take
                    into account the associate ID, since multiple concurrent users may use the same name, and that does <b>not</b> mean
                    file sharing between users.
    return:
      type: System.String
    content.vb: Function CreateFile(name As String) As String
  overload: SuperOffice.IO.ITempFileProvider.CreateFile*
  nameWithType.vb: ITempFileProvider.CreateFile(String)
  fullName.vb: SuperOffice.IO.ITempFileProvider.CreateFile(String)
  name.vb: CreateFile(String)
- uid: SuperOffice.IO.ITempFileProvider.CheckIfFileExists(System.String)
  commentId: M:SuperOffice.IO.ITempFileProvider.CheckIfFileExists(System.String)
  id: CheckIfFileExists(System.String)
  parent: SuperOffice.IO.ITempFileProvider
  langs:
  - csharp
  - vb
  name: CheckIfFileExists(string)
  nameWithType: ITempFileProvider.CheckIfFileExists(string)
  fullName: SuperOffice.IO.ITempFileProvider.CheckIfFileExists(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Check if a named temporary file/storage area exists
  example: []
  syntax:
    content: bool CheckIfFileExists(string name)
    parameters:
    - id: name
      type: System.String
      description: File name to check
    return:
      type: System.Boolean
      description: True if such a file exists
    content.vb: Function CheckIfFileExists(name As String) As Boolean
  overload: SuperOffice.IO.ITempFileProvider.CheckIfFileExists*
  nameWithType.vb: ITempFileProvider.CheckIfFileExists(String)
  fullName.vb: SuperOffice.IO.ITempFileProvider.CheckIfFileExists(String)
  name.vb: CheckIfFileExists(String)
- uid: SuperOffice.IO.ITempFileProvider.ReadFileComplete(System.String)
  commentId: M:SuperOffice.IO.ITempFileProvider.ReadFileComplete(System.String)
  id: ReadFileComplete(System.String)
  parent: SuperOffice.IO.ITempFileProvider
  langs:
  - csharp
  - vb
  name: ReadFileComplete(string)
  nameWithType: ITempFileProvider.ReadFileComplete(string)
  fullName: SuperOffice.IO.ITempFileProvider.ReadFileComplete(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Make the complete content of the file available as a stream (sequential read)
  example: []
  syntax:
    content: Stream ReadFileComplete(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        Name identifying the file. See comments in the <xref href="SuperOffice.IO.ITempFileProvider.CreateFile(System.String)" data-throw-if-not-resolved="false"></xref>
                    method for more information on how file names are handled.
    return:
      type: System.IO.Stream
      description: Stream representing the entire current contents of the file
    content.vb: Function ReadFileComplete(name As String) As Stream
  overload: SuperOffice.IO.ITempFileProvider.ReadFileComplete*
  nameWithType.vb: ITempFileProvider.ReadFileComplete(String)
  fullName.vb: SuperOffice.IO.ITempFileProvider.ReadFileComplete(String)
  name.vb: ReadFileComplete(String)
- uid: SuperOffice.IO.ITempFileProvider.ReadFileChunk(System.String,System.Int64,System.Byte[])
  commentId: M:SuperOffice.IO.ITempFileProvider.ReadFileChunk(System.String,System.Int64,System.Byte[])
  id: ReadFileChunk(System.String,System.Int64,System.Byte[])
  parent: SuperOffice.IO.ITempFileProvider
  langs:
  - csharp
  - vb
  name: ReadFileChunk(string, long, byte[])
  nameWithType: ITempFileProvider.ReadFileChunk(string, long, byte[])
  fullName: SuperOffice.IO.ITempFileProvider.ReadFileChunk(string, long, byte[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Read a chunk of data from the file (random access read)
  example: []
  syntax:
    content: int ReadFileChunk(string name, long filePosition, byte[] bufferToUpdate)
    parameters:
    - id: name
      type: System.String
      description: >-
        Name identifying the file. See comments in the <xref href="SuperOffice.IO.ITempFileProvider.CreateFile(System.String)" data-throw-if-not-resolved="false"></xref>
                    method for more information on how file names are handled.
    - id: filePosition
      type: System.Int64
      description: Position in bytes, starting at 0, to start reading from
    - id: bufferToUpdate
      type: System.Byte[]
      description: >-
        Data buffer to update. The length of this buffer is the maximum
                    number of bytes that will be read
    return:
      type: System.Int32
      description: Actual number of bytes read. If less than the length of the buffer, end-of-file is indicated
    content.vb: Function ReadFileChunk(name As String, filePosition As Long, bufferToUpdate As Byte()) As Integer
  overload: SuperOffice.IO.ITempFileProvider.ReadFileChunk*
  nameWithType.vb: ITempFileProvider.ReadFileChunk(String, Long, Byte())
  fullName.vb: SuperOffice.IO.ITempFileProvider.ReadFileChunk(String, Long, Byte())
  name.vb: ReadFileChunk(String, Long, Byte())
- uid: SuperOffice.IO.ITempFileProvider.WriteFileComplete(System.String,System.IO.Stream)
  commentId: M:SuperOffice.IO.ITempFileProvider.WriteFileComplete(System.String,System.IO.Stream)
  id: WriteFileComplete(System.String,System.IO.Stream)
  parent: SuperOffice.IO.ITempFileProvider
  langs:
  - csharp
  - vb
  name: WriteFileComplete(string, Stream)
  nameWithType: ITempFileProvider.WriteFileComplete(string, Stream)
  fullName: SuperOffice.IO.ITempFileProvider.WriteFileComplete(string, System.IO.Stream)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: (Over)write - not append - the complete content of the file (sequential write). Any previous content is lost
  example: []
  syntax:
    content: void WriteFileComplete(string name, Stream data)
    parameters:
    - id: name
      type: System.String
      description: >-
        Name identifying the file. See comments in the <xref href="SuperOffice.IO.ITempFileProvider.CreateFile(System.String)" data-throw-if-not-resolved="false"></xref>
                    method for more information on how file names are handled.
    - id: data
      type: System.IO.Stream
      description: Stream to read data from
    content.vb: Sub WriteFileComplete(name As String, data As Stream)
  overload: SuperOffice.IO.ITempFileProvider.WriteFileComplete*
  nameWithType.vb: ITempFileProvider.WriteFileComplete(String, Stream)
  fullName.vb: SuperOffice.IO.ITempFileProvider.WriteFileComplete(String, System.IO.Stream)
  name.vb: WriteFileComplete(String, Stream)
- uid: SuperOffice.IO.ITempFileProvider.WriteFileChunk(System.String,System.Int64,System.Byte[])
  commentId: M:SuperOffice.IO.ITempFileProvider.WriteFileChunk(System.String,System.Int64,System.Byte[])
  id: WriteFileChunk(System.String,System.Int64,System.Byte[])
  parent: SuperOffice.IO.ITempFileProvider
  langs:
  - csharp
  - vb
  name: WriteFileChunk(string, long, byte[])
  nameWithType: ITempFileProvider.WriteFileChunk(string, long, byte[])
  fullName: SuperOffice.IO.ITempFileProvider.WriteFileChunk(string, long, byte[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Write a chunk of data to the file (random access write)
  example: []
  syntax:
    content: void WriteFileChunk(string name, long filePosition, byte[] bufferToWriteFrom)
    parameters:
    - id: name
      type: System.String
      description: >-
        Name identifying the file. See comments in the <xref href="SuperOffice.IO.ITempFileProvider.CreateFile(System.String)" data-throw-if-not-resolved="false"></xref>
                    method for more information on how file names are handled.
    - id: filePosition
      type: System.Int64
      description: Position in bytes, starting at 0, that will be written to
    - id: bufferToWriteFrom
      type: System.Byte[]
      description: Buffer to write; buffer length determines the size of the write operation
    content.vb: Sub WriteFileChunk(name As String, filePosition As Long, bufferToWriteFrom As Byte())
  overload: SuperOffice.IO.ITempFileProvider.WriteFileChunk*
  nameWithType.vb: ITempFileProvider.WriteFileChunk(String, Long, Byte())
  fullName.vb: SuperOffice.IO.ITempFileProvider.WriteFileChunk(String, Long, Byte())
  name.vb: WriteFileChunk(String, Long, Byte())
- uid: SuperOffice.IO.ITempFileProvider.DeleteFile(System.String)
  commentId: M:SuperOffice.IO.ITempFileProvider.DeleteFile(System.String)
  id: DeleteFile(System.String)
  parent: SuperOffice.IO.ITempFileProvider
  langs:
  - csharp
  - vb
  name: DeleteFile(string)
  nameWithType: ITempFileProvider.DeleteFile(string)
  fullName: SuperOffice.IO.ITempFileProvider.DeleteFile(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Delete a temporary file
  example: []
  syntax:
    content: void DeleteFile(string name)
    parameters:
    - id: name
      type: System.String
      description: >-
        Name identifying the file. See comments in the <xref href="SuperOffice.IO.ITempFileProvider.CreateFile(System.String)" data-throw-if-not-resolved="false"></xref>
                    method for more information on how file names are handled.
    content.vb: Sub DeleteFile(name As String)
  overload: SuperOffice.IO.ITempFileProvider.DeleteFile*
  nameWithType.vb: ITempFileProvider.DeleteFile(String)
  fullName.vb: SuperOffice.IO.ITempFileProvider.DeleteFile(String)
  name.vb: DeleteFile(String)
references:
- uid: SuperOffice.IO
  commentId: N:SuperOffice.IO
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.IO
  nameWithType: SuperOffice.IO
  fullName: SuperOffice.IO
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.IO
    name: IO
    isExternal: true
    href: SuperOffice.IO.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.IO
    name: IO
    isExternal: true
    href: SuperOffice.IO.html
- uid: SuperOffice.IO.ITempFileProvider.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<ITempFileProvider, To>(ITempFileProvider)
  nameWithType: EnumUtil.MapEnums<ITempFileProvider, To>(ITempFileProvider)
  fullName: EnumUtil.MapEnums<SuperOffice.IO.ITempFileProvider, To>(SuperOffice.IO.ITempFileProvider)
  nameWithType.vb: EnumUtil.MapEnums(Of ITempFileProvider, To)(ITempFileProvider)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.IO.ITempFileProvider, To)(SuperOffice.IO.ITempFileProvider)
  name.vb: MapEnums(Of ITempFileProvider, To)(ITempFileProvider)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.IO.ITempFileProvider)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.IO.ITempFileProvider)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: )
- uid: SuperOffice.IO.ITempFileProvider.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<ITempFileProvider, To>(ITempFileProvider)
  nameWithType: Converters.MapEnums<ITempFileProvider, To>(ITempFileProvider)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.IO.ITempFileProvider, To>(SuperOffice.IO.ITempFileProvider)
  nameWithType.vb: Converters.MapEnums(Of ITempFileProvider, To)(ITempFileProvider)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.IO.ITempFileProvider, To)(SuperOffice.IO.ITempFileProvider)
  name.vb: MapEnums(Of ITempFileProvider, To)(ITempFileProvider)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.IO.ITempFileProvider)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.IO.ITempFileProvider)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.IO.ITempFileProvider
    name: ITempFileProvider
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html
  - name: )
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.IO.ITempFileProvider.CreateFile*
  commentId: Overload:SuperOffice.IO.ITempFileProvider.CreateFile
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_CreateFile_System_String_
  name: CreateFile
  nameWithType: ITempFileProvider.CreateFile
  fullName: SuperOffice.IO.ITempFileProvider.CreateFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.IO.ITempFileProvider.CheckIfFileExists*
  commentId: Overload:SuperOffice.IO.ITempFileProvider.CheckIfFileExists
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_CheckIfFileExists_System_String_
  name: CheckIfFileExists
  nameWithType: ITempFileProvider.CheckIfFileExists
  fullName: SuperOffice.IO.ITempFileProvider.CheckIfFileExists
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.IO.ITempFileProvider.CreateFile(System.String)
  commentId: M:SuperOffice.IO.ITempFileProvider.CreateFile(System.String)
  parent: SuperOffice.IO.ITempFileProvider
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_CreateFile_System_String_
  name: CreateFile(string)
  nameWithType: ITempFileProvider.CreateFile(string)
  fullName: SuperOffice.IO.ITempFileProvider.CreateFile(string)
  nameWithType.vb: ITempFileProvider.CreateFile(String)
  fullName.vb: SuperOffice.IO.ITempFileProvider.CreateFile(String)
  name.vb: CreateFile(String)
  spec.csharp:
  - uid: SuperOffice.IO.ITempFileProvider.CreateFile(System.String)
    name: CreateFile
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_CreateFile_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.IO.ITempFileProvider.CreateFile(System.String)
    name: CreateFile
    isExternal: true
    href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_CreateFile_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.IO.ITempFileProvider.ReadFileComplete*
  commentId: Overload:SuperOffice.IO.ITempFileProvider.ReadFileComplete
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_ReadFileComplete_System_String_
  name: ReadFileComplete
  nameWithType: ITempFileProvider.ReadFileComplete
  fullName: SuperOffice.IO.ITempFileProvider.ReadFileComplete
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: SuperOffice.IO.ITempFileProvider
  commentId: T:SuperOffice.IO.ITempFileProvider
  parent: SuperOffice.IO
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html
  name: ITempFileProvider
  nameWithType: ITempFileProvider
  fullName: SuperOffice.IO.ITempFileProvider
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: SuperOffice.IO.ITempFileProvider.ReadFileChunk*
  commentId: Overload:SuperOffice.IO.ITempFileProvider.ReadFileChunk
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_ReadFileChunk_System_String_System_Int64_System_Byte___
  name: ReadFileChunk
  nameWithType: ITempFileProvider.ReadFileChunk
  fullName: SuperOffice.IO.ITempFileProvider.ReadFileChunk
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.IO.ITempFileProvider.WriteFileComplete*
  commentId: Overload:SuperOffice.IO.ITempFileProvider.WriteFileComplete
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_WriteFileComplete_System_String_System_IO_Stream_
  name: WriteFileComplete
  nameWithType: ITempFileProvider.WriteFileComplete
  fullName: SuperOffice.IO.ITempFileProvider.WriteFileComplete
- uid: SuperOffice.IO.ITempFileProvider.WriteFileChunk*
  commentId: Overload:SuperOffice.IO.ITempFileProvider.WriteFileChunk
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_WriteFileChunk_System_String_System_Int64_System_Byte___
  name: WriteFileChunk
  nameWithType: ITempFileProvider.WriteFileChunk
  fullName: SuperOffice.IO.ITempFileProvider.WriteFileChunk
- uid: SuperOffice.IO.ITempFileProvider.DeleteFile*
  commentId: Overload:SuperOffice.IO.ITempFileProvider.DeleteFile
  isExternal: true
  href: SuperOffice.IO.ITempFileProvider.html#SuperOffice_IO_ITempFileProvider_DeleteFile_System_String_
  name: DeleteFile
  nameWithType: ITempFileProvider.DeleteFile
  fullName: SuperOffice.IO.ITempFileProvider.DeleteFile
