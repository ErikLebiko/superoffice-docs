### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoLocalPrincipal
  commentId: T:SuperOffice.Security.Principal.SoLocalPrincipal
  id: SoLocalPrincipal
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate
  - SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry
  - SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken(System.String,System.Boolean)
  - SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent(SuperOffice.Data.Dictionary.SoTable)
  - SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory(SuperOffice.Data.Dictionary.SoTable)
  - SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials
  - SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Services.GrantedModuleLicense},System.String)
  - SuperOffice.Security.Principal.SoLocalPrincipal.Identity
  - SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry
  - SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole(SuperOffice.CRM.Services.SoPrincipalCarrier,SuperOffice.Data.SoDataReader)
  - SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize
  - SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent(SuperOffice.Data.Dictionary.SoTable,System.Int32)
  langs:
  - csharp
  - vb
  name: SoLocalPrincipal
  nameWithType: SoLocalPrincipal
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal
  type: Class
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Local implementation of <xref href="SuperOffice.Security.Principal.SoPrincipal" data-throw-if-not-resolved="false"></xref>.
  remarks: This class carries out the database authentication.
  example:
  - >-
    Use the <xref href="SuperOffice.SoSession" data-throw-if-not-resolved="false"></xref> object to authenticate users.

    <pre><code class="lang-csharp">SoSession session = SoSession.Authenticate("user","password");

    // do some stuff.

    session.Close();</code></pre>
  syntax:
    content: 'public sealed class SoLocalPrincipal : SoPrincipal, IPrincipal'
    content.vb: Public NotInheritable Class SoLocalPrincipal Inherits SoPrincipal Implements IPrincipal
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  - SuperOffice.Security.Principal.SoPrincipal
  implements:
  - System.Security.Principal.IPrincipal
  inheritedMembers:
  - SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
  - SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  - SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
  - SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
  - SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
  - SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
  - SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
  - SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.ToString
  - SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
  - SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.ClearCache
  - SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
  - SuperOffice.Security.Principal.SoPrincipal.Identities
  - SuperOffice.Security.Principal.SoPrincipal.TimeZone
  - SuperOffice.Security.Principal.SoPrincipal.UserName
  - SuperOffice.Security.Principal.SoPrincipal.UserType
  - SuperOffice.Security.Principal.SoPrincipal.Associate
  - SuperOffice.Security.Principal.SoPrincipal.AssociateId
  - SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  - SuperOffice.Security.Principal.SoPrincipal.IsPerson
  - SuperOffice.Security.Principal.SoPrincipal.PersonId
  - SuperOffice.Security.Principal.SoPrincipal.CountryId
  - SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  - SuperOffice.Security.Principal.SoPrincipal.ContactId
  - SuperOffice.Security.Principal.SoPrincipal.GroupId
  - SuperOffice.Security.Principal.SoPrincipal.BusinessId
  - SuperOffice.Security.Principal.SoPrincipal.CategoryId
  - SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  - SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  - SuperOffice.Security.Principal.SoPrincipal.State
  - SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  - SuperOffice.Security.Principal.SoPrincipal.RoleId
  - SuperOffice.Security.Principal.SoPrincipal.RoleName
  - SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  - SuperOffice.Security.Principal.SoPrincipal.RoleType
  - SuperOffice.Security.Principal.SoPrincipal.License
  - SuperOffice.Security.Principal.SoPrincipal.FullName
  - SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  - SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  - SuperOffice.Security.Principal.SoPrincipal.EjUserId
  - SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  - SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  - SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.Security.Principal.SoLocalPrincipal.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.SoLocalPrincipal.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate
  id: Authenticate
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: Authenticate()
  nameWithType: SoLocalPrincipal.Authenticate()
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Authenticate AND authorize the user in the database
  example: []
  syntax:
    content: public override void Authenticate()
    content.vb: Public Overrides Sub Authenticate()
  overridden: SuperOffice.Security.Principal.SoPrincipal.Authenticate
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate*
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize
  id: ReAuthorize
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: ReAuthorize()
  nameWithType: SoLocalPrincipal.ReAuthorize()
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: >-
    Re-run the authorization, without changing the authentication of the current local principal. 

    You must be in state Authorized to run this method.
  remarks: >-
    This method is intended for situations where you have switched databases or changed things that influence

    authorization, but don't want to (or cannot) do a full reauthentication. All authorization-related data

    will be re-read, but the basic user identity will be carried over.
  example: []
  syntax:
    content: public void ReAuthorize()
    content.vb: Public Sub ReAuthorize()
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize*
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole(SuperOffice.CRM.Services.SoPrincipalCarrier,SuperOffice.Data.SoDataReader)
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole(SuperOffice.CRM.Services.SoPrincipalCarrier,SuperOffice.Data.SoDataReader)
  id: ParseRole(SuperOffice.CRM.Services.SoPrincipalCarrier,SuperOffice.Data.SoDataReader)
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: ParseRole(SoPrincipalCarrier, SoDataReader)
  nameWithType: SoLocalPrincipal.ParseRole(SoPrincipalCarrier, SoDataReader)
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole(SuperOffice.CRM.Services.SoPrincipalCarrier, SuperOffice.Data.SoDataReader)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public void ParseRole(SoPrincipalCarrier carrier, SoDataReader reader)
    parameters:
    - id: carrier
      type: SuperOffice.CRM.Services.SoPrincipalCarrier
    - id: reader
      type: SuperOffice.Data.SoDataReader
    content.vb: Public Sub ParseRole(carrier As SoPrincipalCarrier, reader As SoDataReader)
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole*
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials
  id: GetSafeCredentials
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: GetSafeCredentials()
  nameWithType: SoLocalPrincipal.GetSafeCredentials()
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Obtain a set of credentials that are safe to use accross mix-mode authentication scenarios.
  example: []
  syntax:
    content: public override SoCredentials GetSafeCredentials()
    return:
      type: SuperOffice.Security.Principal.SoCredentials
      description: Credentials that are safe to use accross mix-mode authentication scenarios
    content.vb: Public Overrides Function GetSafeCredentials() As SoCredentials
  overridden: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials*
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken(System.String,System.Boolean)
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken(System.String,System.Boolean)
  id: GetAccessToken(System.String,System.Boolean)
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: GetAccessToken(string, bool)
  nameWithType: SoLocalPrincipal.GetAccessToken(string, bool)
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken(string, bool)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Create a new access token for a given clientSecret (aka ApplicationToken), including CustSvc session info.
  example: []
  syntax:
    content: public override string GetAccessToken(string applicationToken, bool includeCsSession)
    parameters:
    - id: applicationToken
      type: System.String
    - id: includeCsSession
      type: System.Boolean
      description: Whether to include CustSvc session details
    return:
      type: System.String
      description: A fresh "8A:xyz.blabla==" access token.
    content.vb: Public Overrides Function GetAccessToken(applicationToken As String, includeCsSession As Boolean) As String
  overridden: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken*
  nameWithType.vb: SoLocalPrincipal.GetAccessToken(String, Boolean)
  fullName.vb: SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken(String, Boolean)
  name.vb: GetAccessToken(String, Boolean)
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent(SuperOffice.Data.Dictionary.SoTable)
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent(SuperOffice.Data.Dictionary.SoTable)
  id: GetCurrent(SuperOffice.Data.Dictionary.SoTable)
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: GetCurrent(SoTable)
  nameWithType: SoLocalPrincipal.GetCurrent(SoTable)
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent(SuperOffice.Data.Dictionary.SoTable)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Get the current item, the item on top of the items in the history.
  example: []
  syntax:
    content: public int GetCurrent(SoTable table)
    parameters:
    - id: table
      type: SuperOffice.Data.Dictionary.SoTable
      description: Reference to the table to get the current item for.
    return:
      type: System.Int32
      description: Primary key of the record that is the current record of this table.
    content.vb: Public Function GetCurrent(table As SoTable) As Integer
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent*
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent(SuperOffice.Data.Dictionary.SoTable,System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent(SuperOffice.Data.Dictionary.SoTable,System.Int32)
  id: SetCurrent(SuperOffice.Data.Dictionary.SoTable,System.Int32)
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: SetCurrent(SoTable, int)
  nameWithType: SoLocalPrincipal.SetCurrent(SoTable, int)
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent(SuperOffice.Data.Dictionary.SoTable, int)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Set the current item, the item on top of the items in the history.
  remarks: >-
    Other items in the history are shifted down.  Items exceeding the 
                maximum numer of items in the history are removed.
  example: []
  syntax:
    content: public void SetCurrent(SoTable table, int record)
    parameters:
    - id: table
      type: SuperOffice.Data.Dictionary.SoTable
      description: Reference to the table to set the current item for.
    - id: record
      type: System.Int32
      description: Primary key of the record that is to be the current record of this table.
    content.vb: Public Sub SetCurrent(table As SoTable, record As Integer)
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent*
  nameWithType.vb: SoLocalPrincipal.SetCurrent(SoTable, Integer)
  fullName.vb: SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent(SuperOffice.Data.Dictionary.SoTable, Integer)
  name.vb: SetCurrent(SoTable, Integer)
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory(SuperOffice.Data.Dictionary.SoTable)
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory(SuperOffice.Data.Dictionary.SoTable)
  id: GetHistory(SuperOffice.Data.Dictionary.SoTable)
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: GetHistory(SoTable)
  nameWithType: SoLocalPrincipal.GetHistory(SoTable)
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory(SuperOffice.Data.Dictionary.SoTable)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Get history for the table
  example: []
  syntax:
    content: public int[] GetHistory(SoTable table)
    parameters:
    - id: table
      type: SuperOffice.Data.Dictionary.SoTable
      description: Reference to the table to get the history for.
    return:
      type: System.Int32[]
      description: List of primary keys of records from the table.
    content.vb: Public Function GetHistory(table As SoTable) As Integer()
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory*
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Services.GrantedModuleLicense},System.String)
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Services.GrantedModuleLicense},System.String)
  id: HasGrantedModuleLicense(System.Collections.Generic.IEnumerable{SuperOffice.CRM.Services.GrantedModuleLicense},System.String)
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: HasGrantedModuleLicense(IEnumerable<GrantedModuleLicense>, string)
  nameWithType: SoLocalPrincipal.HasGrantedModuleLicense(IEnumerable<GrantedModuleLicense>, string)
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense(System.Collections.Generic.IEnumerable<SuperOffice.CRM.Services.GrantedModuleLicense>, string)
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public static bool HasGrantedModuleLicense(IEnumerable<GrantedModuleLicense> licenses, string licenseName)
    parameters:
    - id: licenses
      type: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Services.GrantedModuleLicense}
    - id: licenseName
      type: System.String
    return:
      type: System.Boolean
    content.vb: Public Shared Function HasGrantedModuleLicense(licenses As IEnumerable(Of GrantedModuleLicense), licenseName As String) As Boolean
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense*
  nameWithType.vb: SoLocalPrincipal.HasGrantedModuleLicense(IEnumerable(Of GrantedModuleLicense), String)
  fullName.vb: SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense(System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Services.GrantedModuleLicense), String)
  name.vb: HasGrantedModuleLicense(IEnumerable(Of GrantedModuleLicense), String)
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry
  commentId: M:SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry
  id: BeginIgnoreSentry
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: BeginIgnoreSentry()
  nameWithType: SoLocalPrincipal.BeginIgnoreSentry()
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry()
  type: Method
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: >-
    This method can only be used by SuperOffice signed code!

    Start ignoring sentry.
  example:
  - >-
    This code should be used as part of a using section:

    <pre><code class="lang-csharp">SuperOffice.Security.Permissions.SoStrongName.Permission.Assert();

    using (localPrincipal.BeginIgnoreSentry())

    {
        // ToDo: Your stuff that by-passes Sentry
    }</code></pre>
  syntax:
    content: >-
      [Obsolete("This method manipulates the IgnoreSentry flag across ALL THREADS; this is VERY seldom the behaviour you want. Please consider using ThreadManager.BeginIgnoreSentry() instead, which applies to the current thread and inherits the status to all child threads", false)]

      public SoLocalPrincipal.IgnoreSentryModifier BeginIgnoreSentry()
    return:
      type: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier
      description: Disposable object ignoring sentry while it is in context.  Always put this value inside using(...)
    content.vb: >-
      <Obsolete("This method manipulates the IgnoreSentry flag across ALL THREADS; this is VERY seldom the behaviour you want. Please consider using ThreadManager.BeginIgnoreSentry() instead, which applies to the current thread and inherits the status to all child threads", False)>

      Public Function BeginIgnoreSentry() As SoLocalPrincipal.IgnoreSentryModifier
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: This method manipulates the IgnoreSentry flag across ALL THREADS; this is VERY seldom the behaviour you want. Please consider using ThreadManager.BeginIgnoreSentry() instead, which applies to the current thread and inherits the status to all child threads
    - type: System.Boolean
      value: false
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.Identity
  commentId: P:SuperOffice.Security.Principal.SoLocalPrincipal.Identity
  id: Identity
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: SoLocalPrincipal.Identity
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.Identity
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Identity for the principal
  example: []
  syntax:
    content: public override ISoIdentity Identity { get; }
    parameters: []
    return:
      type: SuperOffice.Security.Principal.ISoIdentity
    content.vb: Public Overrides ReadOnly Property Identity As ISoIdentity
  overridden: SuperOffice.Security.Principal.SoPrincipal.Identity
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.Identity*
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry
  commentId: P:SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry
  id: IgnoreSentry
  parent: SuperOffice.Security.Principal.SoLocalPrincipal
  langs:
  - csharp
  - vb
  name: IgnoreSentry
  nameWithType: SoLocalPrincipal.IgnoreSentry
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry
  type: Property
  assemblies:
  - SoDataBase
  namespace: SuperOffice.Security.Principal
  summary: Should sentry be ignored?
  example: []
  syntax:
    content: public bool IgnoreSentry { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IgnoreSentry As Boolean
  overload: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry*
references:
- uid: SuperOffice.Security.Principal.SoPrincipal
  commentId: T:SuperOffice.Security.Principal.SoPrincipal
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html
  name: SoPrincipal
  nameWithType: SoPrincipal
  fullName: SuperOffice.Security.Principal.SoPrincipal
- uid: SuperOffice.SoSession
  commentId: T:SuperOffice.SoSession
  parent: SuperOffice
  isExternal: true
  href: SuperOffice.SoSession.html
  name: SoSession
  nameWithType: SoSession
  fullName: SuperOffice.SoSession
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Security.Principal.IPrincipal
  commentId: T:System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.principal.iprincipal
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: IsInRole(string)
  nameWithType: SoPrincipal.IsInRole(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInRole(string)
  nameWithType.vb: SoPrincipal.IsInRole(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInRole(String)
  name.vb: IsInRole(String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
    name: IsInRole
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
    name: IsInRole
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: GetPrincipalCarrier()
  nameWithType: SoPrincipal.GetPrincipalCarrier()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
    name: GetPrincipalCarrier
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
    name: GetPrincipalCarrier
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: SetPrincipalCarrier(SoPrincipalCarrier)
  nameWithType: SoPrincipal.SetPrincipalCarrier(SoPrincipalCarrier)
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
    name: SetPrincipalCarrier
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.SoPrincipalCarrier
    name: SoPrincipalCarrier
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
    name: SetPrincipalCarrier
    isExternal: true
  - name: (
  - uid: SuperOffice.CRM.Services.SoPrincipalCarrier
    name: SoPrincipalCarrier
    isExternal: true
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: IsInSameCompany(int)
  nameWithType: SoPrincipal.IsInSameCompany(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(int)
  nameWithType.vb: SoPrincipal.IsInSameCompany(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(Integer)
  name.vb: IsInSameCompany(Integer)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
    name: IsInSameCompany
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
    name: IsInSameCompany
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: IsInCompany(int)
  nameWithType: SoPrincipal.IsInCompany(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(int)
  nameWithType.vb: SoPrincipal.IsInCompany(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(Integer)
  name.vb: IsInCompany(Integer)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
    name: IsInCompany
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
    name: IsInCompany
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: IsInProject(int)
  nameWithType: SoPrincipal.IsInProject(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInProject(int)
  nameWithType.vb: SoPrincipal.IsInProject(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInProject(Integer)
  name.vb: IsInProject(Integer)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
    name: IsInProject
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
    name: IsInProject
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: IsInSameGroup(int)
  nameWithType: SoPrincipal.IsInSameGroup(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(int)
  nameWithType.vb: SoPrincipal.IsInSameGroup(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(Integer)
  name.vb: IsInSameGroup(Integer)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
    name: IsInSameGroup
    isExternal: true
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
    name: IsInSameGroup
    isExternal: true
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: GetFunctionRights()
  nameWithType: SoPrincipal.GetFunctionRights()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
    name: GetFunctionRights
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
    name: GetFunctionRights
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: HasFunctionRight(string)
  nameWithType: SoPrincipal.HasFunctionRight(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(string)
  nameWithType.vb: SoPrincipal.HasFunctionRight(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(String)
  name.vb: HasFunctionRight(String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
    name: HasFunctionRight
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
    name: HasFunctionRight
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HasLicense_System_String_System_String_
  name: HasLicense(string, string)
  nameWithType: SoPrincipal.HasLicense(string, string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasLicense(string, string)
  nameWithType.vb: SoPrincipal.HasLicense(String, String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.HasLicense(String, String)
  name.vb: HasLicense(String, String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
    name: HasLicense
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HasLicense_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
    name: HasLicense
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HasLicense_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: HasLicense(string)
  nameWithType: SoPrincipal.HasLicense(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasLicense(string)
  nameWithType.vb: SoPrincipal.HasLicense(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.HasLicense(String)
  name.vb: HasLicense(String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
    name: HasLicense
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
    name: HasLicense
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetLicense_System_String_System_String_
  name: GetLicense(string, string)
  nameWithType: SoPrincipal.GetLicense(string, string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetLicense(string, string)
  nameWithType.vb: SoPrincipal.GetLicense(String, String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetLicense(String, String)
  name.vb: GetLicense(String, String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
    name: GetLicense
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetLicense_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
    name: GetLicense
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetLicense_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: GetGrantedLicensesAsString()
  nameWithType: SoPrincipal.GetGrantedLicensesAsString()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
    name: GetGrantedLicensesAsString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
    name: GetGrantedLicensesAsString
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: GetGrantedLicenses()
  nameWithType: SoPrincipal.GetGrantedLicenses()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
    name: GetGrantedLicenses
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
    name: GetGrantedLicenses
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetLicense(string)
  nameWithType: SoPrincipal.GetLicense(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetLicense(string)
  nameWithType.vb: SoPrincipal.GetLicense(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetLicense(String)
  name.vb: GetLicense(String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
    name: GetLicense
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
    name: GetLicense
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.ToString
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.ToString
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: ToString()
  nameWithType: SoPrincipal.ToString()
  fullName: SuperOffice.Security.Principal.SoPrincipal.ToString()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.ToString
    name: ToString
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: SetCachedItem(string, object, double)
  nameWithType: SoPrincipal.SetCachedItem(string, object, double)
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(string, object, double)
  nameWithType.vb: SoPrincipal.SetCachedItem(String, Object, Double)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(String, Object, Double)
  name.vb: SetCachedItem(String, Object, Double)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
    name: SetCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
    name: SetCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetCachedItem(string)
  nameWithType: SoPrincipal.GetCachedItem(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(string)
  nameWithType.vb: SoPrincipal.GetCachedItem(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(String)
  name.vb: GetCachedItem(String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
    name: GetCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
    name: GetCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: RemoveCachedItem(string)
  nameWithType: SoPrincipal.RemoveCachedItem(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(string)
  nameWithType.vb: SoPrincipal.RemoveCachedItem(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(String)
  name.vb: RemoveCachedItem(String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
    name: RemoveCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
    name: RemoveCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.ClearCache
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.ClearCache
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: ClearCache()
  nameWithType: SoPrincipal.ClearCache()
  fullName: SuperOffice.Security.Principal.SoPrincipal.ClearCache()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.ClearCache
    name: ClearCache
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.ClearCache
    name: ClearCache
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: CacheKeyExist(string)
  nameWithType: SoPrincipal.CacheKeyExist(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(string)
  nameWithType.vb: SoPrincipal.CacheKeyExist(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(String)
  name.vb: CacheKeyExist(String)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
    name: CacheKeyExist
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
    name: CacheKeyExist
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: TryGetCachedItem(string, out object)
  nameWithType: SoPrincipal.TryGetCachedItem(string, out object)
  fullName: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(string, out object)
  nameWithType.vb: SoPrincipal.TryGetCachedItem(String, Object)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(String, Object)
  name.vb: TryGetCachedItem(String, Object)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
    name: TryGetCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - name: out
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
    name: TryGetCachedItem
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.Identities
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.Identities
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: Identities
  nameWithType: SoPrincipal.Identities
  fullName: SuperOffice.Security.Principal.SoPrincipal.Identities
- uid: SuperOffice.Security.Principal.SoPrincipal.TimeZone
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.TimeZone
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: TimeZone
  nameWithType: SoPrincipal.TimeZone
  fullName: SuperOffice.Security.Principal.SoPrincipal.TimeZone
- uid: SuperOffice.Security.Principal.SoPrincipal.UserName
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.UserName
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: UserName
  nameWithType: SoPrincipal.UserName
  fullName: SuperOffice.Security.Principal.SoPrincipal.UserName
- uid: SuperOffice.Security.Principal.SoPrincipal.UserType
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.UserType
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_UserType
  name: UserType
  nameWithType: SoPrincipal.UserType
  fullName: SuperOffice.Security.Principal.SoPrincipal.UserType
- uid: SuperOffice.Security.Principal.SoPrincipal.Associate
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.Associate
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: Associate
  nameWithType: SoPrincipal.Associate
  fullName: SuperOffice.Security.Principal.SoPrincipal.Associate
- uid: SuperOffice.Security.Principal.SoPrincipal.AssociateId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.AssociateId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: AssociateId
  nameWithType: SoPrincipal.AssociateId
  fullName: SuperOffice.Security.Principal.SoPrincipal.AssociateId
- uid: SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: CRM5Secret
  nameWithType: SoPrincipal.CRM5Secret
  fullName: SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
- uid: SuperOffice.Security.Principal.SoPrincipal.IsPerson
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.IsPerson
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: IsPerson
  nameWithType: SoPrincipal.IsPerson
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsPerson
- uid: SuperOffice.Security.Principal.SoPrincipal.PersonId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.PersonId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: PersonId
  nameWithType: SoPrincipal.PersonId
  fullName: SuperOffice.Security.Principal.SoPrincipal.PersonId
- uid: SuperOffice.Security.Principal.SoPrincipal.CountryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CountryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_CountryId
  name: CountryId
  nameWithType: SoPrincipal.CountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.CountryId
- uid: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HomeCountryId
  name: HomeCountryId
  nameWithType: SoPrincipal.HomeCountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
- uid: SuperOffice.Security.Principal.SoPrincipal.ContactId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.ContactId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: ContactId
  nameWithType: SoPrincipal.ContactId
  fullName: SuperOffice.Security.Principal.SoPrincipal.ContactId
- uid: SuperOffice.Security.Principal.SoPrincipal.GroupId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.GroupId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: GroupId
  nameWithType: SoPrincipal.GroupId
  fullName: SuperOffice.Security.Principal.SoPrincipal.GroupId
- uid: SuperOffice.Security.Principal.SoPrincipal.BusinessId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.BusinessId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: BusinessId
  nameWithType: SoPrincipal.BusinessId
  fullName: SuperOffice.Security.Principal.SoPrincipal.BusinessId
- uid: SuperOffice.Security.Principal.SoPrincipal.CategoryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CategoryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: CategoryId
  nameWithType: SoPrincipal.CategoryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.CategoryId
- uid: SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: ContactOwner
  nameWithType: SoPrincipal.ContactOwner
  fullName: SuperOffice.Security.Principal.SoPrincipal.ContactOwner
- uid: SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: DatabaseContextIdentifier
  nameWithType: SoPrincipal.DatabaseContextIdentifier
  fullName: SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
- uid: SuperOffice.Security.Principal.SoPrincipal.State
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.State
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: State
  nameWithType: SoPrincipal.State
  fullName: SuperOffice.Security.Principal.SoPrincipal.State
- uid: SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: CanCreateExternalPerson
  nameWithType: SoPrincipal.CanCreateExternalPerson
  fullName: SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: RoleId
  nameWithType: SoPrincipal.RoleId
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleId
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleName
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleName
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: RoleName
  nameWithType: SoPrincipal.RoleName
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleName
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: RoleDescription
  nameWithType: SoPrincipal.RoleDescription
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleDescription
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleType
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleType
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: RoleType
  nameWithType: SoPrincipal.RoleType
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleType
- uid: SuperOffice.Security.Principal.SoPrincipal.License
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.License
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: License
  nameWithType: SoPrincipal.License
  fullName: SuperOffice.Security.Principal.SoPrincipal.License
- uid: SuperOffice.Security.Principal.SoPrincipal.FullName
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.FullName
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: FullName
  nameWithType: SoPrincipal.FullName
  fullName: SuperOffice.Security.Principal.SoPrincipal.FullName
- uid: SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: EMailAddress
  nameWithType: SoPrincipal.EMailAddress
  fullName: SuperOffice.Security.Principal.SoPrincipal.EMailAddress
- uid: SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: IsSaintEnabled
  nameWithType: SoPrincipal.IsSaintEnabled
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
- uid: SuperOffice.Security.Principal.SoPrincipal.EjUserId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EjUserId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: EjUserId
  nameWithType: SoPrincipal.EjUserId
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjUserId
- uid: SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: EjAccessLevel
  nameWithType: SoPrincipal.EjAccessLevel
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
- uid: SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: EjUserStatus
  nameWithType: SoPrincipal.EjUserStatus
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
- uid: SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: SecondaryGroups
  nameWithType: SoPrincipal.SecondaryGroups
  fullName: SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<SoLocalPrincipal, To>(SoLocalPrincipal)
  nameWithType: EnumUtil.MapEnums<SoLocalPrincipal, To>(SoLocalPrincipal)
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoLocalPrincipal, To>(SuperOffice.Security.Principal.SoLocalPrincipal)
  nameWithType.vb: EnumUtil.MapEnums(Of SoLocalPrincipal, To)(SoLocalPrincipal)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoLocalPrincipal, To)(SuperOffice.Security.Principal.SoLocalPrincipal)
  name.vb: MapEnums(Of SoLocalPrincipal, To)(SoLocalPrincipal)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.Principal.SoLocalPrincipal)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.Principal.SoLocalPrincipal)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: )
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<SoLocalPrincipal, To>(SoLocalPrincipal)
  nameWithType: Converters.MapEnums<SoLocalPrincipal, To>(SoLocalPrincipal)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoLocalPrincipal, To>(SuperOffice.Security.Principal.SoLocalPrincipal)
  nameWithType.vb: Converters.MapEnums(Of SoLocalPrincipal, To)(SoLocalPrincipal)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoLocalPrincipal, To)(SuperOffice.Security.Principal.SoLocalPrincipal)
  name.vb: MapEnums(Of SoLocalPrincipal, To)(SoLocalPrincipal)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.Principal.SoLocalPrincipal)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.Principal.SoLocalPrincipal)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: )
- uid: SuperOffice
  commentId: N:SuperOffice
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice
  nameWithType: SuperOffice
  fullName: SuperOffice
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Principal
    name: Principal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.principal
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Principal
    name: Principal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.principal
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Security.Principal.SoPrincipal.Authenticate
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.Authenticate
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: Authenticate()
  nameWithType: SoPrincipal.Authenticate()
  fullName: SuperOffice.Security.Principal.SoPrincipal.Authenticate()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.Authenticate
    name: Authenticate
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.Authenticate
    name: Authenticate
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_Authenticate
  name: Authenticate
  nameWithType: SoLocalPrincipal.Authenticate
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.Authenticate
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_ReAuthorize
  name: ReAuthorize
  nameWithType: SoLocalPrincipal.ReAuthorize
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.ReAuthorize
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_ParseRole_SuperOffice_CRM_Services_SoPrincipalCarrier_SuperOffice_Data_SoDataReader_
  name: ParseRole
  nameWithType: SoLocalPrincipal.ParseRole
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.ParseRole
- uid: SuperOffice.CRM.Services.SoPrincipalCarrier
  commentId: T:SuperOffice.CRM.Services.SoPrincipalCarrier
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SoPrincipalCarrier.html
  name: SoPrincipalCarrier
  nameWithType: SoPrincipalCarrier
  fullName: SuperOffice.CRM.Services.SoPrincipalCarrier
- uid: SuperOffice.Data.SoDataReader
  commentId: T:SuperOffice.Data.SoDataReader
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.SoDataReader.html
  name: SoDataReader
  nameWithType: SoDataReader
  fullName: SuperOffice.Data.SoDataReader
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: GetSafeCredentials()
  nameWithType: SoPrincipal.GetSafeCredentials()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials()
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
    name: GetSafeCredentials
    isExternal: true
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
    name: GetSafeCredentials
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_GetSafeCredentials
  name: GetSafeCredentials
  nameWithType: SoLocalPrincipal.GetSafeCredentials
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetSafeCredentials
- uid: SuperOffice.Security.Principal.SoCredentials
  commentId: T:SuperOffice.Security.Principal.SoCredentials
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoCredentials.html
  name: SoCredentials
  nameWithType: SoCredentials
  fullName: SuperOffice.Security.Principal.SoCredentials
- uid: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: GetAccessToken(string, bool)
  nameWithType: SoPrincipal.GetAccessToken(string, bool)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(string, bool)
  nameWithType.vb: SoPrincipal.GetAccessToken(String, Boolean)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(String, Boolean)
  name.vb: GetAccessToken(String, Boolean)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
    name: GetAccessToken
    isExternal: true
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
    name: GetAccessToken
    isExternal: true
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_GetAccessToken_System_String_System_Boolean_
  name: GetAccessToken
  nameWithType: SoLocalPrincipal.GetAccessToken
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetAccessToken
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_GetCurrent_SuperOffice_Data_Dictionary_SoTable_
  name: GetCurrent
  nameWithType: SoLocalPrincipal.GetCurrent
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetCurrent
- uid: SuperOffice.Data.Dictionary.SoTable
  commentId: T:SuperOffice.Data.Dictionary.SoTable
  parent: SuperOffice.Data.Dictionary
  isExternal: true
  href: SuperOffice.Data.Dictionary.SoTable.html
  name: SoTable
  nameWithType: SoTable
  fullName: SuperOffice.Data.Dictionary.SoTable
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.Data.Dictionary
  commentId: N:SuperOffice.Data.Dictionary
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data.Dictionary
  nameWithType: SuperOffice.Data.Dictionary
  fullName: SuperOffice.Data.Dictionary
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dictionary
    name: Dictionary
    isExternal: true
    href: SuperOffice.Data.Dictionary.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  - name: .
  - uid: SuperOffice.Data.Dictionary
    name: Dictionary
    isExternal: true
    href: SuperOffice.Data.Dictionary.html
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_SetCurrent_SuperOffice_Data_Dictionary_SoTable_System_Int32_
  name: SetCurrent
  nameWithType: SoLocalPrincipal.SetCurrent
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.SetCurrent
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_GetHistory_SuperOffice_Data_Dictionary_SoTable_
  name: GetHistory
  nameWithType: SoLocalPrincipal.GetHistory
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.GetHistory
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_HasGrantedModuleLicense_System_Collections_Generic_IEnumerable_SuperOffice_CRM_Services_GrantedModuleLicense__System_String_
  name: HasGrantedModuleLicense
  nameWithType: SoLocalPrincipal.HasGrantedModuleLicense
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.HasGrantedModuleLicense
- uid: System.Collections.Generic.IEnumerable{SuperOffice.CRM.Services.GrantedModuleLicense}
  commentId: T:System.Collections.Generic.IEnumerable{SuperOffice.CRM.Services.GrantedModuleLicense}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<GrantedModuleLicense>
  nameWithType: IEnumerable<GrantedModuleLicense>
  fullName: System.Collections.Generic.IEnumerable<SuperOffice.CRM.Services.GrantedModuleLicense>
  nameWithType.vb: IEnumerable(Of GrantedModuleLicense)
  fullName.vb: System.Collections.Generic.IEnumerable(Of SuperOffice.CRM.Services.GrantedModuleLicense)
  name.vb: IEnumerable(Of GrantedModuleLicense)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: SuperOffice.CRM.Services.GrantedModuleLicense
    name: GrantedModuleLicense
    isExternal: true
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.GrantedModuleLicense
    name: GrantedModuleLicense
    isExternal: true
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_BeginIgnoreSentry
  name: BeginIgnoreSentry
  nameWithType: SoLocalPrincipal.BeginIgnoreSentry
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.BeginIgnoreSentry
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier
  commentId: T:SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  name: SoLocalPrincipal.IgnoreSentryModifier
  nameWithType: SoLocalPrincipal.IgnoreSentryModifier
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: .
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier
    name: IgnoreSentryModifier
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier.html
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal
    name: SoLocalPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.html
  - name: .
  - uid: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier
    name: IgnoreSentryModifier
    isExternal: true
    href: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentryModifier.html
- uid: SuperOffice.Security.Principal.SoPrincipal.Identity
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.Identity
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  name: Identity
  nameWithType: SoPrincipal.Identity
  fullName: SuperOffice.Security.Principal.SoPrincipal.Identity
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.Identity*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.Identity
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_Identity
  name: Identity
  nameWithType: SoLocalPrincipal.Identity
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.Identity
- uid: SuperOffice.Security.Principal.ISoIdentity
  commentId: T:SuperOffice.Security.Principal.ISoIdentity
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.ISoIdentity.html
  name: ISoIdentity
  nameWithType: ISoIdentity
  fullName: SuperOffice.Security.Principal.ISoIdentity
- uid: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry*
  commentId: Overload:SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry
  isExternal: true
  href: SuperOffice.Security.Principal.SoLocalPrincipal.html#SuperOffice_Security_Principal_SoLocalPrincipal_IgnoreSentry
  name: IgnoreSentry
  nameWithType: SoLocalPrincipal.IgnoreSentry
  fullName: SuperOffice.Security.Principal.SoLocalPrincipal.IgnoreSentry
