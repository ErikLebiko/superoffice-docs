### YamlMime:ManagedReference
items:
- uid: SuperOffice.IO.SerializationWriter
  commentId: T:SuperOffice.IO.SerializationWriter
  id: SerializationWriter
  parent: SuperOffice.IO
  children:
  - SuperOffice.IO.SerializationWriter.#ctor
  - SuperOffice.IO.SerializationWriter.#ctor(System.Int32)
  - SuperOffice.IO.SerializationWriter.AppendTokenTables
  - SuperOffice.IO.SerializationWriter.DefaultCapacity
  - SuperOffice.IO.SerializationWriter.DefaultOptimizeForSize
  - SuperOffice.IO.SerializationWriter.DefaultPreserveDecimalScale
  - SuperOffice.IO.SerializationWriter.DumpTypeUsage
  - SuperOffice.IO.SerializationWriter.HighestOptimizable16BitValue
  - SuperOffice.IO.SerializationWriter.HighestOptimizable32BitValue
  - SuperOffice.IO.SerializationWriter.HighestOptimizable64BitValue
  - SuperOffice.IO.SerializationWriter.OptimizeForSize
  - SuperOffice.IO.SerializationWriter.PreserveDecimalScale
  - SuperOffice.IO.SerializationWriter.ToArray
  - SuperOffice.IO.SerializationWriter.ToStream
  - SuperOffice.IO.SerializationWriter.TypeSurrogates
  - SuperOffice.IO.SerializationWriter.Write(SuperOffice.IO.IOwnedDataSerializable,System.Object)
  - SuperOffice.IO.SerializationWriter.Write(System.Boolean[])
  - SuperOffice.IO.SerializationWriter.Write(System.Byte[])
  - SuperOffice.IO.SerializationWriter.Write(System.Char[])
  - SuperOffice.IO.SerializationWriter.Write(System.Collections.ArrayList)
  - SuperOffice.IO.SerializationWriter.Write(System.Collections.BitArray)
  - SuperOffice.IO.SerializationWriter.Write(System.Collections.Specialized.BitVector32)
  - SuperOffice.IO.SerializationWriter.Write(System.DateTime)
  - SuperOffice.IO.SerializationWriter.Write(System.DateTime[])
  - SuperOffice.IO.SerializationWriter.Write(System.Decimal[])
  - SuperOffice.IO.SerializationWriter.Write(System.Double[])
  - SuperOffice.IO.SerializationWriter.Write(System.Guid)
  - SuperOffice.IO.SerializationWriter.Write(System.Guid[])
  - SuperOffice.IO.SerializationWriter.Write(System.Int16[])
  - SuperOffice.IO.SerializationWriter.Write(System.Int32[])
  - SuperOffice.IO.SerializationWriter.Write(System.Int64[])
  - SuperOffice.IO.SerializationWriter.Write(System.Object[])
  - SuperOffice.IO.SerializationWriter.Write(System.SByte[])
  - SuperOffice.IO.SerializationWriter.Write(System.Single[])
  - SuperOffice.IO.SerializationWriter.Write(System.String)
  - SuperOffice.IO.SerializationWriter.Write(System.TimeSpan)
  - SuperOffice.IO.SerializationWriter.Write(System.TimeSpan[])
  - SuperOffice.IO.SerializationWriter.Write(System.Type,System.Boolean)
  - SuperOffice.IO.SerializationWriter.Write(System.UInt16[])
  - SuperOffice.IO.SerializationWriter.Write(System.UInt32[])
  - SuperOffice.IO.SerializationWriter.Write(System.UInt64[])
  - SuperOffice.IO.SerializationWriter.WriteBytesDirect(System.Byte[])
  - SuperOffice.IO.SerializationWriter.WriteObject(System.Object)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Boolean[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.ArrayList)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.BitArray)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.Specialized.BitVector32)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Decimal)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Decimal[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int16)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int16[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int32)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int32[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int64)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int64[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Object[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Object[],System.Object[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.String)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.Type)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt16)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt16[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt32)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt32[])
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt64)
  - SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt64[])
  - SuperOffice.IO.SerializationWriter.WriteStringDirect(System.String)
  - SuperOffice.IO.SerializationWriter.WriteTokenizedObject(System.Object)
  - SuperOffice.IO.SerializationWriter.WriteTokenizedObject(System.Object,System.Boolean)
  - SuperOffice.IO.SerializationWriter.WriteTypedArray(System.Array)
  langs:
  - csharp
  - vb
  name: SerializationWriter
  nameWithType: SerializationWriter
  fullName: SuperOffice.IO.SerializationWriter
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    A SerializationWriter instance is used to store values and objects in a byte array.


    Once an instance is created, use the various methods to store the required data.

    ToArray() will return a byte[] containing all of the data required for deserialization.

    This can be stored in the SerializationInfo parameter in an ISerializable.GetObjectData() method.

    <p></p>

    As an alternative to ToArray(), if you want to apply some post-processing to the serialized bytes, 

    such as compression, call AppendTokenTables first to ensure that the string and object token tables 

    are appended to the stream, and then cast BaseStream to MemoryStream. You can then access the

    MemoryStream's internal buffer as follows:

    <p></p>

    <example>
             <pre><code class="lang-csharp">writer.AppendTokenTables();
             MemoryStream stream = (MemoryStream) writer.BaseStream;
             serializedData = MiniLZO.Compress(stream.GetBuffer(), (int) stream.Length);</code></pre></example>
  example: []
  syntax:
    content: 'public sealed class SerializationWriter : BinaryWriter, IDisposable'
    content.vb: Public NotInheritable Class SerializationWriter Inherits BinaryWriter Implements IDisposable
  inheritance:
  - System.Object
  - System.IO.BinaryWriter
  implements:
  - System.IDisposable
  inheritedMembers:
  - System.IO.BinaryWriter.Null
  - System.IO.BinaryWriter.Close
  - System.IO.BinaryWriter.Dispose
  - System.IO.BinaryWriter.Flush
  - System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  - System.IO.BinaryWriter.Write(System.Boolean)
  - System.IO.BinaryWriter.Write(System.Byte)
  - System.IO.BinaryWriter.Write(System.SByte)
  - System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  - System.IO.BinaryWriter.Write(System.Char)
  - System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  - System.IO.BinaryWriter.Write(System.Double)
  - System.IO.BinaryWriter.Write(System.Decimal)
  - System.IO.BinaryWriter.Write(System.Int16)
  - System.IO.BinaryWriter.Write(System.UInt16)
  - System.IO.BinaryWriter.Write(System.Int32)
  - System.IO.BinaryWriter.Write(System.UInt32)
  - System.IO.BinaryWriter.Write(System.Int64)
  - System.IO.BinaryWriter.Write(System.UInt64)
  - System.IO.BinaryWriter.Write(System.Single)
  - System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})
  - System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})
  - System.IO.BinaryWriter.BaseStream
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  extensionMethods:
  - SuperOffice.IO.SerializationWriter.EnumUtil.MapEnums``2
  - SuperOffice.IO.SerializationWriter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.IO.SerializationWriter.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.IO.SerializationWriter)
  - SuperOffice.IO.SerializationWriter.SuperOffice.Util.ObjectExtensions.GraphCopy``1
- uid: SuperOffice.IO.SerializationWriter.DefaultCapacity
  commentId: F:SuperOffice.IO.SerializationWriter.DefaultCapacity
  id: DefaultCapacity
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: DefaultCapacity
  nameWithType: SerializationWriter.DefaultCapacity
  fullName: SuperOffice.IO.SerializationWriter.DefaultCapacity
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Default capacity for the underlying MemoryStream
  example: []
  syntax:
    content: public static int DefaultCapacity
    return:
      type: System.Int32
    content.vb: Public Shared DefaultCapacity As Integer
- uid: SuperOffice.IO.SerializationWriter.DefaultOptimizeForSize
  commentId: F:SuperOffice.IO.SerializationWriter.DefaultOptimizeForSize
  id: DefaultOptimizeForSize
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: DefaultOptimizeForSize
  nameWithType: SerializationWriter.DefaultOptimizeForSize
  fullName: SuperOffice.IO.SerializationWriter.DefaultOptimizeForSize
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: The Default setting for the OptimizeForSize property.
  example: []
  syntax:
    content: public static bool DefaultOptimizeForSize
    return:
      type: System.Boolean
    content.vb: Public Shared DefaultOptimizeForSize As Boolean
- uid: SuperOffice.IO.SerializationWriter.DefaultPreserveDecimalScale
  commentId: F:SuperOffice.IO.SerializationWriter.DefaultPreserveDecimalScale
  id: DefaultPreserveDecimalScale
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: DefaultPreserveDecimalScale
  nameWithType: SerializationWriter.DefaultPreserveDecimalScale
  fullName: SuperOffice.IO.SerializationWriter.DefaultPreserveDecimalScale
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: The Default setting for the PreserveDecimalScale property.
  example: []
  syntax:
    content: public static bool DefaultPreserveDecimalScale
    return:
      type: System.Boolean
    content.vb: Public Shared DefaultPreserveDecimalScale As Boolean
- uid: SuperOffice.IO.SerializationWriter.HighestOptimizable16BitValue
  commentId: F:SuperOffice.IO.SerializationWriter.HighestOptimizable16BitValue
  id: HighestOptimizable16BitValue
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: HighestOptimizable16BitValue
  nameWithType: SerializationWriter.HighestOptimizable16BitValue
  fullName: SuperOffice.IO.SerializationWriter.HighestOptimizable16BitValue
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Holds the highest Int16 that can be optimized into less than the normal 2 bytes
  example: []
  syntax:
    content: public const short HighestOptimizable16BitValue = 127
    return:
      type: System.Int16
    content.vb: Public Const HighestOptimizable16BitValue As Short = 127
- uid: SuperOffice.IO.SerializationWriter.HighestOptimizable32BitValue
  commentId: F:SuperOffice.IO.SerializationWriter.HighestOptimizable32BitValue
  id: HighestOptimizable32BitValue
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: HighestOptimizable32BitValue
  nameWithType: SerializationWriter.HighestOptimizable32BitValue
  fullName: SuperOffice.IO.SerializationWriter.HighestOptimizable32BitValue
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Holds the highest Int32 that can be optimized into less than the normal 4 bytes
  example: []
  syntax:
    content: public const int HighestOptimizable32BitValue = 2097151
    return:
      type: System.Int32
    content.vb: Public Const HighestOptimizable32BitValue As Integer = 2097151
- uid: SuperOffice.IO.SerializationWriter.HighestOptimizable64BitValue
  commentId: F:SuperOffice.IO.SerializationWriter.HighestOptimizable64BitValue
  id: HighestOptimizable64BitValue
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: HighestOptimizable64BitValue
  nameWithType: SerializationWriter.HighestOptimizable64BitValue
  fullName: SuperOffice.IO.SerializationWriter.HighestOptimizable64BitValue
  type: Field
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Holds the highest Int64 that can be optimized into less than the normal 8 bytes
  example: []
  syntax:
    content: public const long HighestOptimizable64BitValue = 562949953421311
    return:
      type: System.Int64
    content.vb: Public Const HighestOptimizable64BitValue As Long = 562949953421311
- uid: SuperOffice.IO.SerializationWriter.#ctor
  commentId: M:SuperOffice.IO.SerializationWriter.#ctor
  id: '#ctor'
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: SerializationWriter()
  nameWithType: SerializationWriter.SerializationWriter()
  fullName: SuperOffice.IO.SerializationWriter.SerializationWriter()
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Creates a FastSerializer with the Default Capacity (1kb)
  example: []
  syntax:
    content: public SerializationWriter()
    content.vb: Public Sub New()
  overload: SuperOffice.IO.SerializationWriter.#ctor*
  nameWithType.vb: SerializationWriter.New()
  fullName.vb: SuperOffice.IO.SerializationWriter.New()
  name.vb: New()
- uid: SuperOffice.IO.SerializationWriter.#ctor(System.Int32)
  commentId: M:SuperOffice.IO.SerializationWriter.#ctor(System.Int32)
  id: '#ctor(System.Int32)'
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: SerializationWriter(int)
  nameWithType: SerializationWriter.SerializationWriter(int)
  fullName: SuperOffice.IO.SerializationWriter.SerializationWriter(int)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Creates a FastSerializer with the specified capacity
  example: []
  syntax:
    content: public SerializationWriter(int capacity)
    parameters:
    - id: capacity
      type: System.Int32
      description: ''
    content.vb: Public Sub New(capacity As Integer)
  overload: SuperOffice.IO.SerializationWriter.#ctor*
  nameWithType.vb: SerializationWriter.New(Integer)
  fullName.vb: SuperOffice.IO.SerializationWriter.New(Integer)
  name.vb: New(Integer)
- uid: SuperOffice.IO.SerializationWriter.Write(System.Collections.ArrayList)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Collections.ArrayList)
  id: Write(System.Collections.ArrayList)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(ArrayList)
  nameWithType: SerializationWriter.Write(ArrayList)
  fullName: SuperOffice.IO.SerializationWriter.Write(System.Collections.ArrayList)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an ArrayList into the stream using the fewest number of bytes possible.

    Stored Size: 1 byte upwards depending on data content

    Notes:

    A null Arraylist takes 1 byte.

    An empty ArrayList takes 2 bytes.

    The contents are stored using WriteOptimized(ArrayList) which should be used

    if the ArrayList is guaranteed never to be null.
  example: []
  syntax:
    content: public void Write(ArrayList value)
    parameters:
    - id: value
      type: System.Collections.ArrayList
      description: The ArrayList to store.
    content.vb: Public Sub Write(value As ArrayList)
  overload: SuperOffice.IO.SerializationWriter.Write*
- uid: SuperOffice.IO.SerializationWriter.Write(System.Collections.BitArray)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Collections.BitArray)
  id: Write(System.Collections.BitArray)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(BitArray)
  nameWithType: SerializationWriter.Write(BitArray)
  fullName: SuperOffice.IO.SerializationWriter.Write(System.Collections.BitArray)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a BitArray value into the stream using the fewest number of bytes possible.

    Stored Size: 1 byte upwards depending on data content

    Notes:

    A null BitArray takes 1 byte.

    An empty BitArray takes 2 bytes.
  example: []
  syntax:
    content: public void Write(BitArray value)
    parameters:
    - id: value
      type: System.Collections.BitArray
      description: The BitArray value to store.
    content.vb: Public Sub Write(value As BitArray)
  overload: SuperOffice.IO.SerializationWriter.Write*
- uid: SuperOffice.IO.SerializationWriter.Write(System.Collections.Specialized.BitVector32)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Collections.Specialized.BitVector32)
  id: Write(System.Collections.Specialized.BitVector32)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(BitVector32)
  nameWithType: SerializationWriter.Write(BitVector32)
  fullName: SuperOffice.IO.SerializationWriter.Write(System.Collections.Specialized.BitVector32)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a BitVector32 into the stream.

    Stored Size: 4 bytes.
  example: []
  syntax:
    content: public void Write(BitVector32 value)
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: The BitVector32 to store.
    content.vb: Public Sub Write(value As BitVector32)
  overload: SuperOffice.IO.SerializationWriter.Write*
- uid: SuperOffice.IO.SerializationWriter.Write(System.DateTime)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.DateTime)
  id: Write(System.DateTime)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(DateTime)
  nameWithType: SerializationWriter.Write(DateTime)
  fullName: SuperOffice.IO.SerializationWriter.Write(System.DateTime)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a DateTime value into the stream.

    Stored Size: 8 bytes
  example: []
  syntax:
    content: public void Write(DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: The DateTime value to store.
    content.vb: Public Sub Write(value As Date)
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Date)
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Date)
  name.vb: Write(Date)
- uid: SuperOffice.IO.SerializationWriter.Write(System.Guid)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Guid)
  id: Write(System.Guid)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(Guid)
  nameWithType: SerializationWriter.Write(Guid)
  fullName: SuperOffice.IO.SerializationWriter.Write(System.Guid)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Guid into the stream.

    Stored Size: 16 bytes.
  example: []
  syntax:
    content: public void Write(Guid value)
    parameters:
    - id: value
      type: System.Guid
      description: ''
    content.vb: Public Sub Write(value As Guid)
  overload: SuperOffice.IO.SerializationWriter.Write*
- uid: SuperOffice.IO.SerializationWriter.Write(SuperOffice.IO.IOwnedDataSerializable,System.Object)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(SuperOffice.IO.IOwnedDataSerializable,System.Object)
  id: Write(SuperOffice.IO.IOwnedDataSerializable,System.Object)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(IOwnedDataSerializable, object)
  nameWithType: SerializationWriter.Write(IOwnedDataSerializable, object)
  fullName: SuperOffice.IO.SerializationWriter.Write(SuperOffice.IO.IOwnedDataSerializable, object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Allows any object implementing IOwnedDataSerializable to serialize itself

    into this SerializationWriter.

    A context may also be used to give the object an indication of what data

    to store. As an example, using a BitVector32 gives a list of flags and

    the object can conditionally store data depending on those flags.
  example: []
  syntax:
    content: public void Write(IOwnedDataSerializable target, object context)
    parameters:
    - id: target
      type: SuperOffice.IO.IOwnedDataSerializable
      description: The IOwnedDataSerializable object to ask for owned data
    - id: context
      type: System.Object
      description: An arbtritrary object but BitVector32 recommended
    content.vb: Public Sub Write(target As IOwnedDataSerializable, context As Object)
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(IOwnedDataSerializable, Object)
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(SuperOffice.IO.IOwnedDataSerializable, Object)
  name.vb: Write(IOwnedDataSerializable, Object)
- uid: SuperOffice.IO.SerializationWriter.WriteObject(System.Object)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteObject(System.Object)
  id: WriteObject(System.Object)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteObject(object)
  nameWithType: SerializationWriter.WriteObject(object)
  fullName: SuperOffice.IO.SerializationWriter.WriteObject(object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Stores an object into the stream using the fewest number of bytes possible.

    Stored Size: 1 byte upwards depending on type and/or content.


    1 byte: null, DBNull.Value, Boolean


    1 to 2 bytes: Int16, UInt16, Byte, SByte, Char, 


    1 to 4 bytes: Int32, UInt32, Single, BitVector32


    1 to 8 bytes: DateTime, TimeSpan, Double, Int64, UInt64


    1 or 16 bytes: Guid


    1 plus content: string, object[], byte[], char[], BitArray, Type, ArrayList


    Any other object be stored using a .Net Binary formatter but this should 

    only be allowed as a last resort:

    Since this is effectively a different serialization session, there is a 

    possibility of the same shared object being serialized twice or, if the 

    object has a reference directly or indirectly back to the parent object, 

    there is a risk of looping which will throw an exception.


    The type of object is checked with the most common types being checked first.

    Each 'section' can be reordered to provide optimum speed but the check for

    null should always be first and the default serialization always last.


    Once the type is identified, a SerializedType byte is stored in the stream

    followed by the data for the object (certain types/values may not require

    storage of data as the SerializedType may imply the value).


    For certain objects, if the value is within a certain range then optimized

    storage may be used. If the value doesn't meet the required optimization

    criteria then the value is stored directly.

    The checks for optimization may be disabled by setting the OptimizeForSize

    property to false in which case the value is stored directly. This could 

    result in a slightly larger stream but there will be a speed increate to

    compensate.
  example: []
  syntax:
    content: public void WriteObject(object value)
    parameters:
    - id: value
      type: System.Object
      description: The object to store.
    content.vb: Public Sub WriteObject(value As Object)
  overload: SuperOffice.IO.SerializationWriter.WriteObject*
  nameWithType.vb: SerializationWriter.WriteObject(Object)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteObject(Object)
  name.vb: WriteObject(Object)
- uid: SuperOffice.IO.SerializationWriter.Write(System.String)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.String)
  id: Write(System.String)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(string)
  nameWithType: SerializationWriter.Write(string)
  fullName: SuperOffice.IO.SerializationWriter.Write(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Calls WriteOptimized(string).

    This override to hide base BinaryWriter.Write(string).
  example: []
  syntax:
    content: public override void Write(string value)
    parameters:
    - id: value
      type: System.String
      description: The string to store.
    content.vb: Public Overrides Sub Write(value As String)
  overridden: System.IO.BinaryWriter.Write(System.String)
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(String)
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(String)
  name.vb: Write(String)
- uid: SuperOffice.IO.SerializationWriter.Write(System.TimeSpan)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.TimeSpan)
  id: Write(System.TimeSpan)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(TimeSpan)
  nameWithType: SerializationWriter.Write(TimeSpan)
  fullName: SuperOffice.IO.SerializationWriter.Write(System.TimeSpan)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a TimeSpan value into the stream.

    Stored Size: 8 bytes
  example: []
  syntax:
    content: public void Write(TimeSpan value)
    parameters:
    - id: value
      type: System.TimeSpan
      description: The TimeSpan value to store.
    content.vb: Public Sub Write(value As TimeSpan)
  overload: SuperOffice.IO.SerializationWriter.Write*
- uid: SuperOffice.IO.SerializationWriter.Write(System.Type,System.Boolean)
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Type,System.Boolean)
  id: Write(System.Type,System.Boolean)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(Type, bool)
  nameWithType: SerializationWriter.Write(Type, bool)
  fullName: SuperOffice.IO.SerializationWriter.Write(System.Type, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Stores a Type object into the stream.

    Stored Size: Depends on the length of the Type's name and whether the fullyQualified parameter is set.

    A null Type takes 1 byte.
  example: []
  syntax:
    content: public void Write(Type value, bool fullyQualified)
    parameters:
    - id: value
      type: System.Type
      description: The Type to store.
    - id: fullyQualified
      type: System.Boolean
      description: true to store the AssemblyQualifiedName or false to store the FullName.
    content.vb: Public Sub Write(value As Type, fullyQualified As Boolean)
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Type, Boolean)
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(System.Type, Boolean)
  name.vb: Write(Type, Boolean)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.ArrayList)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.ArrayList)
  id: WriteOptimized(System.Collections.ArrayList)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(ArrayList)
  nameWithType: SerializationWriter.WriteOptimized(ArrayList)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.ArrayList)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an non-null ArrayList into the stream using the fewest number of bytes possible.

    Stored Size: 1 byte upwards depending on data content

    Notes:

    An empty ArrayList takes 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(ArrayList value)
    parameters:
    - id: value
      type: System.Collections.ArrayList
      description: The ArrayList to store. Must not be null.
    content.vb: Public Sub WriteOptimized(value As ArrayList)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.BitArray)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.BitArray)
  id: WriteOptimized(System.Collections.BitArray)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(BitArray)
  nameWithType: SerializationWriter.WriteOptimized(BitArray)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.BitArray)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a BitArray into the stream using the fewest number of bytes possible.

    Stored Size: 1 byte upwards depending on data content

    Notes:

    An empty BitArray takes 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(BitArray value)
    parameters:
    - id: value
      type: System.Collections.BitArray
      description: The BitArray value to store. Must not be null.
    content.vb: Public Sub WriteOptimized(value As BitArray)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.Specialized.BitVector32)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.Specialized.BitVector32)
  id: WriteOptimized(System.Collections.Specialized.BitVector32)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(BitVector32)
  nameWithType: SerializationWriter.WriteOptimized(BitVector32)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Collections.Specialized.BitVector32)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a BitVector32 into the stream using the fewest number of bytes possible.

    Stored Size: 1 to 4 bytes. (.Net is 4 bytes)
     1 to  7 bits takes 1 byte
     8 to 14 bits takes 2 bytes
    15 to 21 bits takes 3 bytes

    22 to 28 bits takes 4 bytes

    -------------------------------------------------------------------

    29 to 32 bits takes 5 bytes - use Write(BitVector32) method instead


    Try to order the BitVector32 masks so that the highest bits are least-likely

    to be set.
  example: []
  syntax:
    content: public void WriteOptimized(BitVector32 value)
    parameters:
    - id: value
      type: System.Collections.Specialized.BitVector32
      description: The BitVector32 to store. Must not use more than 28 bits.
    content.vb: Public Sub WriteOptimized(value As BitVector32)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime)
  id: WriteOptimized(System.DateTime)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(DateTime)
  nameWithType: SerializationWriter.WriteOptimized(DateTime)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a DateTime value into the stream using the fewest number of bytes possible.

    Stored Size: 3 bytes to 7 bytes (.Net is 8 bytes)

    Notes:

    A DateTime containing only a date takes 3 bytes

    (except a .NET 2.0 Date with a specified DateTimeKind which will take a minimum

    of 5 bytes - no further optimization for this situation felt necessary since it

    is unlikely that a DateTimeKind would be specified without hh:mm also)

    Date plus hh:mm takes 5 bytes.

    Date plus hh:mm:ss takes 6 bytes.

    Date plus hh:mm:ss.fff takes 7 bytes.
  example: []
  syntax:
    content: public void WriteOptimized(DateTime value)
    parameters:
    - id: value
      type: System.DateTime
      description: The DateTime value to store. Must not contain sub-millisecond data.
    content.vb: Public Sub WriteOptimized(value As Date)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Date)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Date)
  name.vb: WriteOptimized(Date)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Decimal)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Decimal)
  id: WriteOptimized(System.Decimal)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(decimal)
  nameWithType: SerializationWriter.WriteOptimized(decimal)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(decimal)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Decimal value into the stream using the fewest number of bytes possible.

    Stored Size: 1 byte to 14 bytes (.Net is 16 bytes)

    Restrictions: None
  example: []
  syntax:
    content: public void WriteOptimized(decimal value)
    parameters:
    - id: value
      type: System.Decimal
      description: The Decimal value to store
    content.vb: Public Sub WriteOptimized(value As Decimal)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Decimal)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Decimal)
  name.vb: WriteOptimized(Decimal)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int16)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int16)
  id: WriteOptimized(System.Int16)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(short)
  nameWithType: SerializationWriter.WriteOptimized(short)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(short)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Write an Int16 value using the fewest number of bytes possible.
  remarks: >-
    0x0000 - 0x007f (0 to 127) takes 1 byte

    0x0080 - 0x03FF (128 to 16,383) takes 2 bytes

    ----------------------------------------------------------------

    0x0400 - 0x7FFF (16,384 to 32,767) takes 3 bytes

    All negative numbers take 3 bytes


    Only call this method if the value is known to be between 0 and 

    16,383 otherwise use Write(Int16 value)
  example: []
  syntax:
    content: public void WriteOptimized(short value)
    parameters:
    - id: value
      type: System.Int16
      description: The Int16 to store. Must be between 0 and 16,383 inclusive.
    content.vb: Public Sub WriteOptimized(value As Short)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Short)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Short)
  name.vb: WriteOptimized(Short)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int32)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int32)
  id: WriteOptimized(System.Int32)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(int)
  nameWithType: SerializationWriter.WriteOptimized(int)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(int)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Write an Int32 value using the fewest number of bytes possible.
  remarks: >-
    0x00000000 - 0x0000007f (0 to 127) takes 1 byte

    0x00000080 - 0x000003FF (128 to 16,383) takes 2 bytes

    0x00000400 - 0x001FFFFF (16,384 to 2,097,151) takes 3 bytes

    0x00200000 - 0x0FFFFFFF (2,097,152 to 268,435,455) takes 4 bytes

    ----------------------------------------------------------------

    0x10000000 - 0x07FFFFFF (268,435,456 and above) takes 5 bytes

    All negative numbers take 5 bytes


    Only call this method if the value is known to be between 0 and 

    268,435,455 otherwise use Write(Int32 value)
  example: []
  syntax:
    content: public void WriteOptimized(int value)
    parameters:
    - id: value
      type: System.Int32
      description: The Int32 to store. Must be between 0 and 268,435,455 inclusive.
    content.vb: Public Sub WriteOptimized(value As Integer)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Integer)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Integer)
  name.vb: WriteOptimized(Integer)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int64)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int64)
  id: WriteOptimized(System.Int64)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(long)
  nameWithType: SerializationWriter.WriteOptimized(long)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(long)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Write an Int64 value using the fewest number of bytes possible.
  remarks: >-
    0x0000000000000000 - 0x000000000000007f (0 to 127) takes 1 byte

    0x0000000000000080 - 0x00000000000003FF (128 to 16,383) takes 2 bytes

    0x0000000000000400 - 0x00000000001FFFFF (16,384 to 2,097,151) takes 3 bytes

    0x0000000000200000 - 0x000000000FFFFFFF (2,097,152 to 268,435,455) takes 4 bytes

    0x0000000010000000 - 0x00000007FFFFFFFF (268,435,456 to 34,359,738,367) takes 5 bytes

    0x0000000800000000 - 0x000003FFFFFFFFFF (34,359,738,368 to 4,398,046,511,103) takes 6 bytes

    0x0000040000000000 - 0x0001FFFFFFFFFFFF (4,398,046,511,104 to 562,949,953,421,311) takes 7 bytes

    0x0002000000000000 - 0x00FFFFFFFFFFFFFF (562,949,953,421,312 to 72,057,594,037,927,935) takes 8 bytes

    ------------------------------------------------------------------

    0x0100000000000000 - 0x7FFFFFFFFFFFFFFF (72,057,594,037,927,936 to 9,223,372,036,854,775,807) takes 9 bytes

    0x7FFFFFFFFFFFFFFF - 0xFFFFFFFFFFFFFFFF (9,223,372,036,854,775,807 and above) takes 10 bytes

    All negative numbers take 10 bytes


    Only call this method if the value is known to be between 0 and

    72,057,594,037,927,935 otherwise use Write(Int64 value)
  example: []
  syntax:
    content: public void WriteOptimized(long value)
    parameters:
    - id: value
      type: System.Int64
      description: The Int64 to store. Must be between 0 and 72,057,594,037,927,935 inclusive.
    content.vb: Public Sub WriteOptimized(value As Long)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Long)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Long)
  name.vb: WriteOptimized(Long)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.String)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.String)
  id: WriteOptimized(System.String)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(string)
  nameWithType: SerializationWriter.WriteOptimized(string)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a string value into the stream using the fewest number of bytes possible.

    Stored Size: 1 byte upwards depending on string length

    Notes:

    Encodes null, Empty, 'Y', 'N', ' ' values as a single byte

    Any other single char string is stored as two bytes

    All other strings are stored in a string token list:


    The TypeCode representing the current string token list is written first (1 byte), 

    followed by the string token itself (1-4 bytes)


    When the current string list has reached 128 values then a new string list

    is generated and that is used for generating future string tokens. This continues

    until the maximum number (128) of string lists is in use, after which the string 

    lists are used in a round-robin fashion.

    By doing this, more lists are created with fewer items which allows a smaller 

    token size to be used for more strings.


    The first 16,384 strings will use a 1 byte token.

    The next 2,097,152 strings will use a 2 byte token. (This should suffice for most uses!)

    The next 268,435,456 strings will use a 3 byte token. (My, that is a lot!!)

    The next 34,359,738,368 strings will use a 4 byte token. (only shown for completeness!!!)
  example: []
  syntax:
    content: public void WriteOptimized(string value)
    parameters:
    - id: value
      type: System.String
      description: The string to store.
    content.vb: Public Sub WriteOptimized(value As String)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(String)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(String)
  name.vb: WriteOptimized(String)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan)
  id: WriteOptimized(System.TimeSpan)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(TimeSpan)
  nameWithType: SerializationWriter.WriteOptimized(TimeSpan)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a TimeSpan value into the stream using the fewest number of bytes possible.

    Stored Size: 2 bytes to 8 bytes (.Net is 8 bytes)

    Notes:

    hh:mm (time) are always stored together and take 2 bytes.

    If seconds are present then 3 bytes unless (time) is not present in which case 2 bytes

    since the seconds are stored in the minutes position.

    If milliseconds are present then 4 bytes.

    In addition, if days are present they will add 1 to 4 bytes to the above.
  example: []
  syntax:
    content: public void WriteOptimized(TimeSpan value)
    parameters:
    - id: value
      type: System.TimeSpan
      description: The TimeSpan value to store. Must not contain sub-millisecond data.
    content.vb: Public Sub WriteOptimized(value As TimeSpan)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Type)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Type)
  id: WriteOptimized(System.Type)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(Type)
  nameWithType: SerializationWriter.WriteOptimized(Type)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Type)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Stores a non-null Type object into the stream.

    Stored Size: Depends on the length of the Type's name.

    If the type is a System type (mscorlib) then it is stored without assembly name information,

    otherwise the Type's AssemblyQualifiedName is used.
  example: []
  syntax:
    content: public void WriteOptimized(Type value)
    parameters:
    - id: value
      type: System.Type
      description: The Type to store. Must not be null.
    content.vb: Public Sub WriteOptimized(value As Type)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt16)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt16)
  id: WriteOptimized(System.UInt16)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(ushort)
  nameWithType: SerializationWriter.WriteOptimized(ushort)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(ushort)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Write a UInt16 value using the fewest number of bytes possible.
  remarks: >-
    0x0000 - 0x007f (0 to 127) takes 1 byte

    0x0080 - 0x03FF (128 to 16,383) takes 2 bytes

    ----------------------------------------------------------------

    0x0400 - 0xFFFF (16,384 to 65,536) takes 3 bytes


    Only call this method if the value is known to  be between 0 and 

    16,383 otherwise use Write(UInt16 value)
  example: []
  syntax:
    content: public void WriteOptimized(ushort value)
    parameters:
    - id: value
      type: System.UInt16
      description: The UInt16 to store. Must be between 0 and 16,383 inclusive.
    content.vb: Public Sub WriteOptimized(value As UShort)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(UShort)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(UShort)
  name.vb: WriteOptimized(UShort)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt32)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt32)
  id: WriteOptimized(System.UInt32)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(uint)
  nameWithType: SerializationWriter.WriteOptimized(uint)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(uint)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Write a UInt32 value using the fewest number of bytes possible.
  remarks: >-
    0x00000000 - 0x0000007f (0 to 127) takes 1 byte

    0x00000080 - 0x000003FF (128 to 16,383) takes 2 bytes

    0x00000400 - 0x001FFFFF (16,384 to 2,097,151) takes 3 bytes

    0x00200000 - 0x0FFFFFFF (2,097,152 to 268,435,455) takes 4 bytes

    ----------------------------------------------------------------

    0x10000000 - 0xFFFFFFFF (268,435,456 and above) takes 5 bytes


    Only call this method if the value is known to  be between 0 and 

    268,435,455 otherwise use Write(UInt32 value)
  example: []
  syntax:
    content: public void WriteOptimized(uint value)
    parameters:
    - id: value
      type: System.UInt32
      description: The UInt32 to store. Must be between 0 and 268,435,455 inclusive.
    content.vb: Public Sub WriteOptimized(value As UInteger)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(UInteger)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(UInteger)
  name.vb: WriteOptimized(UInteger)
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt64)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt64)
  id: WriteOptimized(System.UInt64)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(ulong)
  nameWithType: SerializationWriter.WriteOptimized(ulong)
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(ulong)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Write a UInt64 value using the fewest number of bytes possible.
  remarks: >-
    0x0000000000000000 - 0x000000000000007f (0 to 127) takes 1 byte

    0x0000000000000080 - 0x00000000000003FF (128 to 16,383) takes 2 bytes

    0x0000000000000400 - 0x00000000001FFFFF (16,384 to 2,097,151) takes 3 bytes

    0x0000000000200000 - 0x000000000FFFFFFF (2,097,152 to 268,435,455) takes 4 bytes

    0x0000000010000000 - 0x00000007FFFFFFFF (268,435,456 to 34,359,738,367) takes 5 bytes

    0x0000000800000000 - 0x000003FFFFFFFFFF (34,359,738,368 to 4,398,046,511,103) takes 6 bytes

    0x0000040000000000 - 0x0001FFFFFFFFFFFF (4,398,046,511,104 to 562,949,953,421,311) takes 7 bytes

    0x0002000000000000 - 0x00FFFFFFFFFFFFFF (562,949,953,421,312 to 72,057,594,037,927,935) takes 8 bytes

    ------------------------------------------------------------------

    0x0100000000000000 - 0x7FFFFFFFFFFFFFFF (72,057,594,037,927,936 to 9,223,372,036,854,775,807) takes 9 bytes

    0x7FFFFFFFFFFFFFFF - 0xFFFFFFFFFFFFFFFF (9,223,372,036,854,775,807 and above) takes 10 bytes


    Only call this method if the value is known to be between 0 and

    72,057,594,037,927,935 otherwise use Write(UInt64 value)
  example: []
  syntax:
    content: public void WriteOptimized(ulong value)
    parameters:
    - id: value
      type: System.UInt64
      description: The UInt64 to store. Must be between 0 and 72,057,594,037,927,935 inclusive.
    content.vb: Public Sub WriteOptimized(value As ULong)
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(ULong)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(ULong)
  name.vb: WriteOptimized(ULong)
- uid: SuperOffice.IO.SerializationWriter.Write(System.Boolean[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Boolean[])
  id: Write(System.Boolean[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(bool[])
  nameWithType: SerializationWriter.Write(bool[])
  fullName: SuperOffice.IO.SerializationWriter.Write(bool[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Boolean[] into the stream.

    Notes:

    A null or empty array will take 1 byte.

    Calls WriteOptimized(Boolean[]).
  example: []
  syntax:
    content: public void Write(bool[] values)
    parameters:
    - id: values
      type: System.Boolean[]
      description: The Boolean[] to store.
    content.vb: Public Sub Write(values As Boolean())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Boolean())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Boolean())
  name.vb: Write(Boolean())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Byte[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Byte[])
  id: Write(System.Byte[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(byte[])
  nameWithType: SerializationWriter.Write(byte[])
  fullName: SuperOffice.IO.SerializationWriter.Write(byte[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Byte[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public override void Write(byte[] values)
    parameters:
    - id: values
      type: System.Byte[]
      description: The Byte[] to store.
    content.vb: Public Overrides Sub Write(values As Byte())
  overridden: System.IO.BinaryWriter.Write(System.Byte[])
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Byte())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Byte())
  name.vb: Write(Byte())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Char[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Char[])
  id: Write(System.Char[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(char[])
  nameWithType: SerializationWriter.Write(char[])
  fullName: SuperOffice.IO.SerializationWriter.Write(char[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Char[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public override void Write(char[] values)
    parameters:
    - id: values
      type: System.Char[]
      description: The Char[] to store.
    content.vb: Public Overrides Sub Write(values As Char())
  overridden: System.IO.BinaryWriter.Write(System.Char[])
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Char())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Char())
  name.vb: Write(Char())
- uid: SuperOffice.IO.SerializationWriter.Write(System.DateTime[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.DateTime[])
  id: Write(System.DateTime[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(DateTime[])
  nameWithType: SerializationWriter.Write(DateTime[])
  fullName: SuperOffice.IO.SerializationWriter.Write(System.DateTime[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a DateTime[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(DateTime[] values)
    parameters:
    - id: values
      type: System.DateTime[]
      description: The DateTime[] to store.
    content.vb: Public Sub Write(values As Date())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Date())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Date())
  name.vb: Write(Date())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Decimal[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Decimal[])
  id: Write(System.Decimal[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(decimal[])
  nameWithType: SerializationWriter.Write(decimal[])
  fullName: SuperOffice.IO.SerializationWriter.Write(decimal[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Decimal[] into the stream.

    Notes:

    A null or empty array will take 1 byte.

    Calls WriteOptimized(Decimal[]).
  example: []
  syntax:
    content: public void Write(decimal[] values)
    parameters:
    - id: values
      type: System.Decimal[]
      description: The Decimal[] to store.
    content.vb: Public Sub Write(values As Decimal())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Decimal())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Decimal())
  name.vb: Write(Decimal())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Double[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Double[])
  id: Write(System.Double[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(double[])
  nameWithType: SerializationWriter.Write(double[])
  fullName: SuperOffice.IO.SerializationWriter.Write(double[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Double[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(double[] values)
    parameters:
    - id: values
      type: System.Double[]
      description: The Double[] to store.
    content.vb: Public Sub Write(values As Double())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Double())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Double())
  name.vb: Write(Double())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Single[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Single[])
  id: Write(System.Single[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(float[])
  nameWithType: SerializationWriter.Write(float[])
  fullName: SuperOffice.IO.SerializationWriter.Write(float[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Single[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(float[] values)
    parameters:
    - id: values
      type: System.Single[]
      description: The Single[] to store.
    content.vb: Public Sub Write(values As Single())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Single())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Single())
  name.vb: Write(Single())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Guid[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Guid[])
  id: Write(System.Guid[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(Guid[])
  nameWithType: SerializationWriter.Write(Guid[])
  fullName: SuperOffice.IO.SerializationWriter.Write(System.Guid[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Guid[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(Guid[] values)
    parameters:
    - id: values
      type: System.Guid[]
      description: The Guid[] to store.
    content.vb: Public Sub Write(values As Guid())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Guid())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(System.Guid())
  name.vb: Write(Guid())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Int32[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Int32[])
  id: Write(System.Int32[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(int[])
  nameWithType: SerializationWriter.Write(int[])
  fullName: SuperOffice.IO.SerializationWriter.Write(int[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an Int32[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(int[] values)
    parameters:
    - id: values
      type: System.Int32[]
      description: The Int32[] to store.
    content.vb: Public Sub Write(values As Integer())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Integer())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Integer())
  name.vb: Write(Integer())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Int64[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Int64[])
  id: Write(System.Int64[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(long[])
  nameWithType: SerializationWriter.Write(long[])
  fullName: SuperOffice.IO.SerializationWriter.Write(long[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an Int64[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(long[] values)
    parameters:
    - id: values
      type: System.Int64[]
      description: The Int64[] to store.
    content.vb: Public Sub Write(values As Long())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Long())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Long())
  name.vb: Write(Long())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Object[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Object[])
  id: Write(System.Object[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(object[])
  nameWithType: SerializationWriter.Write(object[])
  fullName: SuperOffice.IO.SerializationWriter.Write(object[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an object[] into the stream.

    Stored Size: 2 bytes upwards depending on data content

    Notes:

    A null object[] takes 1 byte.

    An empty object[] takes 2 bytes.

    The contents of the array will be stored optimized.
  example: []
  syntax:
    content: public void Write(object[] values)
    parameters:
    - id: values
      type: System.Object[]
      description: The object[] to store.
    content.vb: Public Sub Write(values As Object())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Object())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Object())
  name.vb: Write(Object())
- uid: SuperOffice.IO.SerializationWriter.Write(System.SByte[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.SByte[])
  id: Write(System.SByte[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(sbyte[])
  nameWithType: SerializationWriter.Write(sbyte[])
  fullName: SuperOffice.IO.SerializationWriter.Write(sbyte[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an SByte[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(sbyte[] values)
    parameters:
    - id: values
      type: System.SByte[]
      description: The SByte[] to store.
    content.vb: Public Sub Write(values As SByte())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(SByte())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(SByte())
  name.vb: Write(SByte())
- uid: SuperOffice.IO.SerializationWriter.Write(System.Int16[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.Int16[])
  id: Write(System.Int16[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(short[])
  nameWithType: SerializationWriter.Write(short[])
  fullName: SuperOffice.IO.SerializationWriter.Write(short[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an Int16[]or a null into the stream.

    Notes:

    A null or empty array will take 1 byte.

    Calls WriteOptimized(decimal[]).
  example: []
  syntax:
    content: public void Write(short[] values)
    parameters:
    - id: values
      type: System.Int16[]
      description: The Int16[] to store.
    content.vb: Public Sub Write(values As Short())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(Short())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(Short())
  name.vb: Write(Short())
- uid: SuperOffice.IO.SerializationWriter.Write(System.TimeSpan[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.TimeSpan[])
  id: Write(System.TimeSpan[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(TimeSpan[])
  nameWithType: SerializationWriter.Write(TimeSpan[])
  fullName: SuperOffice.IO.SerializationWriter.Write(System.TimeSpan[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a TimeSpan[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(TimeSpan[] values)
    parameters:
    - id: values
      type: System.TimeSpan[]
      description: The TimeSpan[] to store.
    content.vb: Public Sub Write(values As TimeSpan())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(TimeSpan())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(System.TimeSpan())
  name.vb: Write(TimeSpan())
- uid: SuperOffice.IO.SerializationWriter.Write(System.UInt32[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.UInt32[])
  id: Write(System.UInt32[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(uint[])
  nameWithType: SerializationWriter.Write(uint[])
  fullName: SuperOffice.IO.SerializationWriter.Write(uint[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a UInt32[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(uint[] values)
    parameters:
    - id: values
      type: System.UInt32[]
      description: The UInt32[] to store.
    content.vb: Public Sub Write(values As UInteger())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(UInteger())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(UInteger())
  name.vb: Write(UInteger())
- uid: SuperOffice.IO.SerializationWriter.Write(System.UInt64[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.UInt64[])
  id: Write(System.UInt64[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(ulong[])
  nameWithType: SerializationWriter.Write(ulong[])
  fullName: SuperOffice.IO.SerializationWriter.Write(ulong[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a UInt64[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(ulong[] values)
    parameters:
    - id: values
      type: System.UInt64[]
      description: The UInt64[] to store.
    content.vb: Public Sub Write(values As ULong())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(ULong())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(ULong())
  name.vb: Write(ULong())
- uid: SuperOffice.IO.SerializationWriter.Write(System.UInt16[])
  commentId: M:SuperOffice.IO.SerializationWriter.Write(System.UInt16[])
  id: Write(System.UInt16[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: Write(ushort[])
  nameWithType: SerializationWriter.Write(ushort[])
  fullName: SuperOffice.IO.SerializationWriter.Write(ushort[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a UInt16[] into the stream.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void Write(ushort[] values)
    parameters:
    - id: values
      type: System.UInt16[]
      description: The UInt16[] to store.
    content.vb: Public Sub Write(values As UShort())
  overload: SuperOffice.IO.SerializationWriter.Write*
  nameWithType.vb: SerializationWriter.Write(UShort())
  fullName.vb: SuperOffice.IO.SerializationWriter.Write(UShort())
  name.vb: Write(UShort())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Boolean[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Boolean[])
  id: WriteOptimized(System.Boolean[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(bool[])
  nameWithType: SerializationWriter.WriteOptimized(bool[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(bool[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an optimized Boolean[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.

    Stored as a BitArray.
  example: []
  syntax:
    content: public void WriteOptimized(bool[] values)
    parameters:
    - id: values
      type: System.Boolean[]
      description: The Boolean[] to store.
    content.vb: Public Sub WriteOptimized(values As Boolean())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Boolean())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Boolean())
  name.vb: WriteOptimized(Boolean())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime[])
  id: WriteOptimized(System.DateTime[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(DateTime[])
  nameWithType: SerializationWriter.WriteOptimized(DateTime[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.DateTime[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a DateTime[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(DateTime[] values)
    parameters:
    - id: values
      type: System.DateTime[]
      description: The DateTime[] to store.
    content.vb: Public Sub WriteOptimized(values As Date())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Date())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Date())
  name.vb: WriteOptimized(Date())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Decimal[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Decimal[])
  id: WriteOptimized(System.Decimal[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(decimal[])
  nameWithType: SerializationWriter.WriteOptimized(decimal[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(decimal[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a Decimal[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(decimal[] values)
    parameters:
    - id: values
      type: System.Decimal[]
      description: The Decimal[] to store.
    content.vb: Public Sub WriteOptimized(values As Decimal())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Decimal())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Decimal())
  name.vb: WriteOptimized(Decimal())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Object[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Object[])
  id: WriteOptimized(System.Object[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(object[])
  nameWithType: SerializationWriter.WriteOptimized(object[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(object[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a not-null object[] into the stream using the fewest number of bytes possible.

    Stored Size: 2 bytes upwards depending on data content

    Notes:

    An empty object[] takes 1 byte.

    The contents of the array will be stored optimized.
  example: []
  syntax:
    content: public void WriteOptimized(object[] values)
    parameters:
    - id: values
      type: System.Object[]
      description: The object[] to store. Must not be null.
    content.vb: Public Sub WriteOptimized(values As Object())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Object())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Object())
  name.vb: WriteOptimized(Object())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Object[],System.Object[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Object[],System.Object[])
  id: WriteOptimized(System.Object[],System.Object[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(object[], object[])
  nameWithType: SerializationWriter.WriteOptimized(object[], object[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(object[], object[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a pair of object[] arrays into the stream using the fewest number of bytes possible.

    The arrays must not be null and must have the same length

    The first array's values are written optimized

    The second array's values are compared against the first and, where identical, will be stored

    using a single byte.

    Useful for storing entity data where there is a before-change and after-change set of value pairs

    and, typically, only a few of the values will have changed.
  example: []
  syntax:
    content: public void WriteOptimized(object[] values1, object[] values2)
    parameters:
    - id: values1
      type: System.Object[]
      description: The first object[] value which must not be null and must have the same length as values2
    - id: values2
      type: System.Object[]
      description: The second object[] value which must not be null and must have the same length as values1
    content.vb: Public Sub WriteOptimized(values1 As Object(), values2 As Object())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Object(), Object())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Object(), Object())
  name.vb: WriteOptimized(Object(), Object())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int16[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int16[])
  id: WriteOptimized(System.Int16[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(short[])
  nameWithType: SerializationWriter.WriteOptimized(short[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(short[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an Int16[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(short[] values)
    parameters:
    - id: values
      type: System.Int16[]
      description: The Int16[] to store.
    content.vb: Public Sub WriteOptimized(values As Short())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Short())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Short())
  name.vb: WriteOptimized(Short())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int32[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int32[])
  id: WriteOptimized(System.Int32[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(int[])
  nameWithType: SerializationWriter.WriteOptimized(int[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(int[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an Int32[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(int[] values)
    parameters:
    - id: values
      type: System.Int32[]
      description: The Int32[] to store.
    content.vb: Public Sub WriteOptimized(values As Integer())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Integer())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Integer())
  name.vb: WriteOptimized(Integer())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int64[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.Int64[])
  id: WriteOptimized(System.Int64[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(long[])
  nameWithType: SerializationWriter.WriteOptimized(long[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(long[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes an Int64[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(long[] values)
    parameters:
    - id: values
      type: System.Int64[]
      description: The Int64[] to store.
    content.vb: Public Sub WriteOptimized(values As Long())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(Long())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(Long())
  name.vb: WriteOptimized(Long())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan[])
  id: WriteOptimized(System.TimeSpan[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(TimeSpan[])
  nameWithType: SerializationWriter.WriteOptimized(TimeSpan[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a TimeSpan[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(TimeSpan[] values)
    parameters:
    - id: values
      type: System.TimeSpan[]
      description: The TimeSpan[] to store.
    content.vb: Public Sub WriteOptimized(values As TimeSpan())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(TimeSpan())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(System.TimeSpan())
  name.vb: WriteOptimized(TimeSpan())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt16[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt16[])
  id: WriteOptimized(System.UInt16[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(ushort[])
  nameWithType: SerializationWriter.WriteOptimized(ushort[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(ushort[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a UInt16[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(ushort[] values)
    parameters:
    - id: values
      type: System.UInt16[]
      description: The UInt16[] to store.
    content.vb: Public Sub WriteOptimized(values As UShort())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(UShort())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(UShort())
  name.vb: WriteOptimized(UShort())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt32[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt32[])
  id: WriteOptimized(System.UInt32[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(uint[])
  nameWithType: SerializationWriter.WriteOptimized(uint[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(uint[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a UInt32[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(uint[] values)
    parameters:
    - id: values
      type: System.UInt32[]
      description: The UInt32[] to store.
    content.vb: Public Sub WriteOptimized(values As UInteger())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(UInteger())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(UInteger())
  name.vb: WriteOptimized(UInteger())
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt64[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteOptimized(System.UInt64[])
  id: WriteOptimized(System.UInt64[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteOptimized(ulong[])
  nameWithType: SerializationWriter.WriteOptimized(ulong[])
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized(ulong[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a UInt64[] into the stream using the fewest possible bytes.

    Notes:

    A null or empty array will take 1 byte.
  example: []
  syntax:
    content: public void WriteOptimized(ulong[] values)
    parameters:
    - id: values
      type: System.UInt64[]
      description: The UInt64[] to store.
    content.vb: Public Sub WriteOptimized(values As ULong())
  overload: SuperOffice.IO.SerializationWriter.WriteOptimized*
  nameWithType.vb: SerializationWriter.WriteOptimized(ULong())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteOptimized(ULong())
  name.vb: WriteOptimized(ULong())
- uid: SuperOffice.IO.SerializationWriter.WriteTypedArray(System.Array)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteTypedArray(System.Array)
  id: WriteTypedArray(System.Array)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteTypedArray(Array)
  nameWithType: SerializationWriter.WriteTypedArray(Array)
  fullName: SuperOffice.IO.SerializationWriter.WriteTypedArray(System.Array)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Writes a null or a typed array into the stream.
  example: []
  syntax:
    content: public void WriteTypedArray(Array values)
    parameters:
    - id: values
      type: System.Array
      description: The array to store.
    content.vb: Public Sub WriteTypedArray(values As Array)
  overload: SuperOffice.IO.SerializationWriter.WriteTypedArray*
- uid: SuperOffice.IO.SerializationWriter.AppendTokenTables
  commentId: M:SuperOffice.IO.SerializationWriter.AppendTokenTables
  id: AppendTokenTables
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: AppendTokenTables()
  nameWithType: SerializationWriter.AppendTokenTables()
  fullName: SuperOffice.IO.SerializationWriter.AppendTokenTables()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes the contents of the string and object token tables into the stream.

    Also write the starting offset into the first 4 bytes of the stream.

    Notes:

    Called automatically by ToArray().

    Can be used to ensure that the complete graph is written before using an

    alternate technique of extracting a Byte[] such as using compression on

    the underlying stream.
  example: []
  syntax:
    content: public int AppendTokenTables()
    return:
      type: System.Int32
      description: The length of the string and object tables.
    content.vb: Public Function AppendTokenTables() As Integer
  overload: SuperOffice.IO.SerializationWriter.AppendTokenTables*
- uid: SuperOffice.IO.SerializationWriter.ToArray
  commentId: M:SuperOffice.IO.SerializationWriter.ToArray
  id: ToArray
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: ToArray()
  nameWithType: SerializationWriter.ToArray()
  fullName: SuperOffice.IO.SerializationWriter.ToArray()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Returns a byte[] containing all of the serialized data.


    The current implementation has the data in 3 sections:

    1) A 4 byte Int32 giving the offset to the 3rd section.

    2) The main serialized data.

    3) The serialized string tokenization lists and object
       tokenization lists.

    Only call this method once all of the data has been serialized.


    This method appends all of the tokenized data (string and object)

    to the end of the stream and ensures that the first four bytes

    reflect the offset of the tokenized data so that it can be

    deserialized first.

    This is the reason for requiring a rewindable stream.


    Future implementations may also allow the serialized data to be

    accessed via 2 byte[] arrays. This would remove the requirement

    for a rewindable stream opening the possibility of streaming the

    serialized data directly over the network allowing simultaneous

    of partially simultaneous deserialization.
  example: []
  syntax:
    content: public byte[] ToArray()
    return:
      type: System.Byte[]
      description: A byte[] containing all serialized data.
    content.vb: Public Function ToArray() As Byte()
  overload: SuperOffice.IO.SerializationWriter.ToArray*
- uid: SuperOffice.IO.SerializationWriter.ToStream
  commentId: M:SuperOffice.IO.SerializationWriter.ToStream
  id: ToStream
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: ToStream()
  nameWithType: SerializationWriter.ToStream()
  fullName: SuperOffice.IO.SerializationWriter.ToStream()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Returns a Stream containing all of the serialized data.
  example: []
  syntax:
    content: public Stream ToStream()
    return:
      type: System.IO.Stream
      description: Stream containing all serialized data
    content.vb: Public Function ToStream() As Stream
  overload: SuperOffice.IO.SerializationWriter.ToStream*
- uid: SuperOffice.IO.SerializationWriter.WriteBytesDirect(System.Byte[])
  commentId: M:SuperOffice.IO.SerializationWriter.WriteBytesDirect(System.Byte[])
  id: WriteBytesDirect(System.Byte[])
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteBytesDirect(byte[])
  nameWithType: SerializationWriter.WriteBytesDirect(byte[])
  fullName: SuperOffice.IO.SerializationWriter.WriteBytesDirect(byte[])
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a byte[] directly into the stream.

    The size of the array is not stored so only use this method when

    the number of bytes will be known at deserialization time.


    A null value will throw an exception
  example: []
  syntax:
    content: public void WriteBytesDirect(byte[] value)
    parameters:
    - id: value
      type: System.Byte[]
      description: The byte[] to store. Must not be null.
    content.vb: Public Sub WriteBytesDirect(value As Byte())
  overload: SuperOffice.IO.SerializationWriter.WriteBytesDirect*
  nameWithType.vb: SerializationWriter.WriteBytesDirect(Byte())
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteBytesDirect(Byte())
  name.vb: WriteBytesDirect(Byte())
- uid: SuperOffice.IO.SerializationWriter.WriteStringDirect(System.String)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteStringDirect(System.String)
  id: WriteStringDirect(System.String)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteStringDirect(string)
  nameWithType: SerializationWriter.WriteStringDirect(string)
  fullName: SuperOffice.IO.SerializationWriter.WriteStringDirect(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: Writes a non-null string directly to the stream without tokenization.
  example: []
  syntax:
    content: public void WriteStringDirect(string value)
    parameters:
    - id: value
      type: System.String
      description: The string to store. Must not be null.
    content.vb: Public Sub WriteStringDirect(value As String)
  overload: SuperOffice.IO.SerializationWriter.WriteStringDirect*
  nameWithType.vb: SerializationWriter.WriteStringDirect(String)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteStringDirect(String)
  name.vb: WriteStringDirect(String)
- uid: SuperOffice.IO.SerializationWriter.WriteTokenizedObject(System.Object)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteTokenizedObject(System.Object)
  id: WriteTokenizedObject(System.Object)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteTokenizedObject(object)
  nameWithType: SerializationWriter.WriteTokenizedObject(object)
  fullName: SuperOffice.IO.SerializationWriter.WriteTokenizedObject(object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a token (an Int32 taking 1 to 4 bytes) into the stream that represents the object instance.

    The same token will always be used for the same object instance.


    The object will be serialized once and recreated at deserialization time.

    Calls to SerializationReader.ReadTokenizedObject() will retrieve the same object instance.
  example: []
  syntax:
    content: public void WriteTokenizedObject(object value)
    parameters:
    - id: value
      type: System.Object
      description: The object to tokenize. Must not be null and must not be a string.
    content.vb: Public Sub WriteTokenizedObject(value As Object)
  overload: SuperOffice.IO.SerializationWriter.WriteTokenizedObject*
  nameWithType.vb: SerializationWriter.WriteTokenizedObject(Object)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteTokenizedObject(Object)
  name.vb: WriteTokenizedObject(Object)
- uid: SuperOffice.IO.SerializationWriter.WriteTokenizedObject(System.Object,System.Boolean)
  commentId: M:SuperOffice.IO.SerializationWriter.WriteTokenizedObject(System.Object,System.Boolean)
  id: WriteTokenizedObject(System.Object,System.Boolean)
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: WriteTokenizedObject(object, bool)
  nameWithType: SerializationWriter.WriteTokenizedObject(object, bool)
  fullName: SuperOffice.IO.SerializationWriter.WriteTokenizedObject(object, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Writes a token (an Int32 taking 1 to 4 bytes) into the stream that represents the object instance.

    The same token will always be used for the same object instance.


    When recreateFromType is set to true, the object's Type will be stored and the object recreated using 

    Activator.GetInstance with a parameterless contructor. This is useful for stateless, factory-type classes.


    When recreateFromType is set to false, the object will be serialized once and recreated at deserialization time.


    Calls to SerializationReader.ReadTokenizedObject() will retrieve the same object instance.
  example: []
  syntax:
    content: public void WriteTokenizedObject(object value, bool recreateFromType)
    parameters:
    - id: value
      type: System.Object
      description: The object to tokenize. Must not be null and must not be a string.
    - id: recreateFromType
      type: System.Boolean
      description: >-
        true if the object can be recreated using a parameterless constructor; 
                    false if the object should be serialized as-is
    content.vb: Public Sub WriteTokenizedObject(value As Object, recreateFromType As Boolean)
  overload: SuperOffice.IO.SerializationWriter.WriteTokenizedObject*
  nameWithType.vb: SerializationWriter.WriteTokenizedObject(Object, Boolean)
  fullName.vb: SuperOffice.IO.SerializationWriter.WriteTokenizedObject(Object, Boolean)
  name.vb: WriteTokenizedObject(Object, Boolean)
- uid: SuperOffice.IO.SerializationWriter.DumpTypeUsage
  commentId: M:SuperOffice.IO.SerializationWriter.DumpTypeUsage
  id: DumpTypeUsage
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: DumpTypeUsage()
  nameWithType: SerializationWriter.DumpTypeUsage()
  fullName: SuperOffice.IO.SerializationWriter.DumpTypeUsage()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  syntax:
    content: >-
      [Conditional("DEBUG")]

      public void DumpTypeUsage()
    content.vb: >-
      <Conditional("DEBUG")>

      Public Sub DumpTypeUsage()
  overload: SuperOffice.IO.SerializationWriter.DumpTypeUsage*
  attributes:
  - type: System.Diagnostics.ConditionalAttribute
    ctor: System.Diagnostics.ConditionalAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: DEBUG
- uid: SuperOffice.IO.SerializationWriter.TypeSurrogates
  commentId: P:SuperOffice.IO.SerializationWriter.TypeSurrogates
  id: TypeSurrogates
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: TypeSurrogates
  nameWithType: SerializationWriter.TypeSurrogates
  fullName: SuperOffice.IO.SerializationWriter.TypeSurrogates
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Holds a list of optional IFastSerializationTypeSurrogate instances which

    SerializationWriter and SerializationReader will use to serialize objects

    not directly supported.

    It is important to use the same list on both client and server ends to ensure

    that the same surrogated-types are supported.
  example: []
  syntax:
    content: public static ArrayList TypeSurrogates { get; }
    parameters: []
    return:
      type: System.Collections.ArrayList
    content.vb: Public Shared ReadOnly Property TypeSurrogates As ArrayList
  overload: SuperOffice.IO.SerializationWriter.TypeSurrogates*
- uid: SuperOffice.IO.SerializationWriter.OptimizeForSize
  commentId: P:SuperOffice.IO.SerializationWriter.OptimizeForSize
  id: OptimizeForSize
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: OptimizeForSize
  nameWithType: SerializationWriter.OptimizeForSize
  fullName: SuperOffice.IO.SerializationWriter.OptimizeForSize
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Gets or Sets a boolean flag to indicate whether to optimize for size (default)

    by storing data as packed bits or sections where possible.

    Setting this value to false will turn off this optimization and store

    data directly which increases the speed.

    Note: This only affects optimization of data passed to the WriteObject method

    and direct calls to the WriteOptimized methods will always pack data into

    the smallest space where possible.
  example: []
  syntax:
    content: public bool OptimizeForSize { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property OptimizeForSize As Boolean
  overload: SuperOffice.IO.SerializationWriter.OptimizeForSize*
- uid: SuperOffice.IO.SerializationWriter.PreserveDecimalScale
  commentId: P:SuperOffice.IO.SerializationWriter.PreserveDecimalScale
  id: PreserveDecimalScale
  parent: SuperOffice.IO.SerializationWriter
  langs:
  - csharp
  - vb
  name: PreserveDecimalScale
  nameWithType: SerializationWriter.PreserveDecimalScale
  fullName: SuperOffice.IO.SerializationWriter.PreserveDecimalScale
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.IO
  summary: >-
    Gets or Sets a boolean flag to indicate whether to preserve the scale within

    a Decimal value when it would have no effect on the represented value.

    Note: a 2m value and a 2.00m value represent the same value but internally they 

    are stored differently - the former has a value of 2 and a scale of 0 and

    the latter has a value of 200 and a scale of 2. 

    The scaling factor also preserves any trailing zeroes in a Decimal number. 

    Trailing zeroes do not affect the value of a Decimal number in arithmetic or 

    comparison operations. However, trailing zeroes can be revealed by the ToString 

    method if an appropriate format string is applied.

    From a serialization point of view, the former will take 2 bytes whereas the 

    latter would take 4 bytes, therefore it is preferable to not save the scale where

    it doesn't affect the represented value.
  example: []
  syntax:
    content: public bool PreserveDecimalScale { get; set; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public Property PreserveDecimalScale As Boolean
  overload: SuperOffice.IO.SerializationWriter.PreserveDecimalScale*
references:
- uid: SuperOffice.IO
  commentId: N:SuperOffice.IO
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.IO
  nameWithType: SuperOffice.IO
  fullName: SuperOffice.IO
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.IO
    name: IO
    isExternal: true
    href: SuperOffice.IO.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.IO
    name: IO
    isExternal: true
    href: SuperOffice.IO.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.IO.BinaryWriter
  commentId: T:System.IO.BinaryWriter
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter
  name: BinaryWriter
  nameWithType: BinaryWriter
  fullName: System.IO.BinaryWriter
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: System.IO.BinaryWriter.Null
  commentId: F:System.IO.BinaryWriter.Null
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.null
  name: "Null"
  nameWithType: BinaryWriter.Null
  fullName: System.IO.BinaryWriter.Null
- uid: System.IO.BinaryWriter.Close
  commentId: M:System.IO.BinaryWriter.Close
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.close
  name: Close()
  nameWithType: BinaryWriter.Close()
  fullName: System.IO.BinaryWriter.Close()
  spec.csharp:
  - uid: System.IO.BinaryWriter.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.close
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Close
    name: Close
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.close
  - name: (
  - name: )
- uid: System.IO.BinaryWriter.Dispose
  commentId: M:System.IO.BinaryWriter.Dispose
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.dispose#system-io-binarywriter-dispose
  name: Dispose()
  nameWithType: BinaryWriter.Dispose()
  fullName: System.IO.BinaryWriter.Dispose()
  spec.csharp:
  - uid: System.IO.BinaryWriter.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.dispose#system-io-binarywriter-dispose
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Dispose
    name: Dispose
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.dispose#system-io-binarywriter-dispose
  - name: (
  - name: )
- uid: System.IO.BinaryWriter.Flush
  commentId: M:System.IO.BinaryWriter.Flush
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.flush
  name: Flush()
  nameWithType: BinaryWriter.Flush()
  fullName: System.IO.BinaryWriter.Flush()
  spec.csharp:
  - uid: System.IO.BinaryWriter.Flush
    name: Flush
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.flush
  - name: (
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Flush
    name: Flush
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.flush
  - name: (
  - name: )
- uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  commentId: M:System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.seek
  name: Seek(int, SeekOrigin)
  nameWithType: BinaryWriter.Seek(int, SeekOrigin)
  fullName: System.IO.BinaryWriter.Seek(int, System.IO.SeekOrigin)
  nameWithType.vb: BinaryWriter.Seek(Integer, SeekOrigin)
  fullName.vb: System.IO.BinaryWriter.Seek(Integer, System.IO.SeekOrigin)
  name.vb: Seek(Integer, SeekOrigin)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
    name: Seek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.seek
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.seekorigin
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Seek(System.Int32,System.IO.SeekOrigin)
    name: Seek
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.seek
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.IO.SeekOrigin
    name: SeekOrigin
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.seekorigin
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Boolean)
  commentId: M:System.IO.BinaryWriter.Write(System.Boolean)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-boolean)
  name: Write(bool)
  nameWithType: BinaryWriter.Write(bool)
  fullName: System.IO.BinaryWriter.Write(bool)
  nameWithType.vb: BinaryWriter.Write(Boolean)
  fullName.vb: System.IO.BinaryWriter.Write(Boolean)
  name.vb: Write(Boolean)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Boolean)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-boolean)
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Boolean)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-boolean)
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Byte)
  commentId: M:System.IO.BinaryWriter.Write(System.Byte)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte)
  name: Write(byte)
  nameWithType: BinaryWriter.Write(byte)
  fullName: System.IO.BinaryWriter.Write(byte)
  nameWithType.vb: BinaryWriter.Write(Byte)
  fullName.vb: System.IO.BinaryWriter.Write(Byte)
  name.vb: Write(Byte)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Byte)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Byte)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
- uid: System.IO.BinaryWriter.Write(System.SByte)
  commentId: M:System.IO.BinaryWriter.Write(System.SByte)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-sbyte)
  name: Write(sbyte)
  nameWithType: BinaryWriter.Write(sbyte)
  fullName: System.IO.BinaryWriter.Write(sbyte)
  nameWithType.vb: BinaryWriter.Write(SByte)
  fullName.vb: System.IO.BinaryWriter.Write(SByte)
  name.vb: Write(SByte)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.SByte)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-sbyte)
  - name: (
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.SByte)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-sbyte)
  - name: (
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte()-system-int32-system-int32)
  name: Write(byte[], int, int)
  nameWithType: BinaryWriter.Write(byte[], int, int)
  fullName: System.IO.BinaryWriter.Write(byte[], int, int)
  nameWithType.vb: BinaryWriter.Write(Byte(), Integer, Integer)
  fullName.vb: System.IO.BinaryWriter.Write(Byte(), Integer, Integer)
  name.vb: Write(Byte(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Byte[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte()-system-int32-system-int32)
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Char)
  commentId: M:System.IO.BinaryWriter.Write(System.Char)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char)
  name: Write(char)
  nameWithType: BinaryWriter.Write(char)
  fullName: System.IO.BinaryWriter.Write(char)
  nameWithType.vb: BinaryWriter.Write(Char)
  fullName.vb: System.IO.BinaryWriter.Write(Char)
  name.vb: Write(Char)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Char)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char)
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Char)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char)
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char()-system-int32-system-int32)
  name: Write(char[], int, int)
  nameWithType: BinaryWriter.Write(char[], int, int)
  fullName: System.IO.BinaryWriter.Write(char[], int, int)
  nameWithType.vb: BinaryWriter.Write(Char(), Integer, Integer)
  fullName.vb: System.IO.BinaryWriter.Write(Char(), Integer, Integer)
  name.vb: Write(Char(), Integer, Integer)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char()-system-int32-system-int32)
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Char[],System.Int32,System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char()-system-int32-system-int32)
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Double)
  commentId: M:System.IO.BinaryWriter.Write(System.Double)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-double)
  name: Write(double)
  nameWithType: BinaryWriter.Write(double)
  fullName: System.IO.BinaryWriter.Write(double)
  nameWithType.vb: BinaryWriter.Write(Double)
  fullName.vb: System.IO.BinaryWriter.Write(Double)
  name.vb: Write(Double)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Double)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-double)
  - name: (
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Double)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-double)
  - name: (
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Decimal)
  commentId: M:System.IO.BinaryWriter.Write(System.Decimal)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-decimal)
  name: Write(decimal)
  nameWithType: BinaryWriter.Write(decimal)
  fullName: System.IO.BinaryWriter.Write(decimal)
  nameWithType.vb: BinaryWriter.Write(Decimal)
  fullName.vb: System.IO.BinaryWriter.Write(Decimal)
  name.vb: Write(Decimal)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Decimal)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-decimal)
  - name: (
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Decimal)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-decimal)
  - name: (
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Int16)
  commentId: M:System.IO.BinaryWriter.Write(System.Int16)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int16)
  name: Write(short)
  nameWithType: BinaryWriter.Write(short)
  fullName: System.IO.BinaryWriter.Write(short)
  nameWithType.vb: BinaryWriter.Write(Short)
  fullName.vb: System.IO.BinaryWriter.Write(Short)
  name.vb: Write(Short)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Int16)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int16)
  - name: (
  - uid: System.Int16
    name: short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Int16)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int16)
  - name: (
  - uid: System.Int16
    name: Short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: )
- uid: System.IO.BinaryWriter.Write(System.UInt16)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt16)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint16)
  name: Write(ushort)
  nameWithType: BinaryWriter.Write(ushort)
  fullName: System.IO.BinaryWriter.Write(ushort)
  nameWithType.vb: BinaryWriter.Write(UShort)
  fullName.vb: System.IO.BinaryWriter.Write(UShort)
  name.vb: Write(UShort)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.UInt16)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint16)
  - name: (
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.UInt16)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint16)
  - name: (
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Int32)
  commentId: M:System.IO.BinaryWriter.Write(System.Int32)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int32)
  name: Write(int)
  nameWithType: BinaryWriter.Write(int)
  fullName: System.IO.BinaryWriter.Write(int)
  nameWithType.vb: BinaryWriter.Write(Integer)
  fullName.vb: System.IO.BinaryWriter.Write(Integer)
  name.vb: Write(Integer)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int32)
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Int32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int32)
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.IO.BinaryWriter.Write(System.UInt32)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt32)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint32)
  name: Write(uint)
  nameWithType: BinaryWriter.Write(uint)
  fullName: System.IO.BinaryWriter.Write(uint)
  nameWithType.vb: BinaryWriter.Write(UInteger)
  fullName.vb: System.IO.BinaryWriter.Write(UInteger)
  name.vb: Write(UInteger)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.UInt32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint32)
  - name: (
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.UInt32)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint32)
  - name: (
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Int64)
  commentId: M:System.IO.BinaryWriter.Write(System.Int64)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int64)
  name: Write(long)
  nameWithType: BinaryWriter.Write(long)
  fullName: System.IO.BinaryWriter.Write(long)
  nameWithType.vb: BinaryWriter.Write(Long)
  fullName.vb: System.IO.BinaryWriter.Write(Long)
  name.vb: Write(Long)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Int64)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int64)
  - name: (
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Int64)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-int64)
  - name: (
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: )
- uid: System.IO.BinaryWriter.Write(System.UInt64)
  commentId: M:System.IO.BinaryWriter.Write(System.UInt64)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint64)
  name: Write(ulong)
  nameWithType: BinaryWriter.Write(ulong)
  fullName: System.IO.BinaryWriter.Write(ulong)
  nameWithType.vb: BinaryWriter.Write(ULong)
  fullName.vb: System.IO.BinaryWriter.Write(ULong)
  name.vb: Write(ULong)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.UInt64)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint64)
  - name: (
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.UInt64)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-uint64)
  - name: (
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Single)
  commentId: M:System.IO.BinaryWriter.Write(System.Single)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-single)
  name: Write(float)
  nameWithType: BinaryWriter.Write(float)
  fullName: System.IO.BinaryWriter.Write(float)
  nameWithType.vb: BinaryWriter.Write(Single)
  fullName.vb: System.IO.BinaryWriter.Write(Single)
  name.vb: Write(Single)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Single)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-single)
  - name: (
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Single)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-single)
  - name: (
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: )
- uid: System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})
  commentId: M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-readonlyspan((system-byte)))
  name: Write(ReadOnlySpan<byte>)
  nameWithType: BinaryWriter.Write(ReadOnlySpan<byte>)
  fullName: System.IO.BinaryWriter.Write(System.ReadOnlySpan<byte>)
  nameWithType.vb: BinaryWriter.Write(ReadOnlySpan(Of Byte))
  fullName.vb: System.IO.BinaryWriter.Write(System.ReadOnlySpan(Of Byte))
  name.vb: Write(ReadOnlySpan(Of Byte))
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-readonlyspan((system-byte)))
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Byte})
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-readonlyspan((system-byte)))
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: )
  - name: )
- uid: System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})
  commentId: M:System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-readonlyspan((system-char)))
  name: Write(ReadOnlySpan<char>)
  nameWithType: BinaryWriter.Write(ReadOnlySpan<char>)
  fullName: System.IO.BinaryWriter.Write(System.ReadOnlySpan<char>)
  nameWithType.vb: BinaryWriter.Write(ReadOnlySpan(Of Char))
  fullName.vb: System.IO.BinaryWriter.Write(System.ReadOnlySpan(Of Char))
  name.vb: Write(ReadOnlySpan(Of Char))
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-readonlyspan((system-char)))
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: <
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '>'
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.ReadOnlySpan{System.Char})
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-readonlyspan((system-char)))
  - name: (
  - uid: System.ReadOnlySpan`1
    name: ReadOnlySpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.readonlyspan-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: )
  - name: )
- uid: System.IO.BinaryWriter.BaseStream
  commentId: P:System.IO.BinaryWriter.BaseStream
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.basestream
  name: BaseStream
  nameWithType: BinaryWriter.BaseStream
  fullName: System.IO.BinaryWriter.BaseStream
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: SuperOffice.IO.SerializationWriter.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<SerializationWriter, To>(SerializationWriter)
  nameWithType: EnumUtil.MapEnums<SerializationWriter, To>(SerializationWriter)
  fullName: EnumUtil.MapEnums<SuperOffice.IO.SerializationWriter, To>(SuperOffice.IO.SerializationWriter)
  nameWithType.vb: EnumUtil.MapEnums(Of SerializationWriter, To)(SerializationWriter)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.IO.SerializationWriter, To)(SuperOffice.IO.SerializationWriter)
  name.vb: MapEnums(Of SerializationWriter, To)(SerializationWriter)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.IO.SerializationWriter)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.IO.SerializationWriter)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
- uid: SuperOffice.IO.SerializationWriter.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<SerializationWriter, To>(SerializationWriter)
  nameWithType: Converters.MapEnums<SerializationWriter, To>(SerializationWriter)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.IO.SerializationWriter, To>(SuperOffice.IO.SerializationWriter)
  nameWithType.vb: Converters.MapEnums(Of SerializationWriter, To)(SerializationWriter)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.IO.SerializationWriter, To)(SuperOffice.IO.SerializationWriter)
  name.vb: MapEnums(Of SerializationWriter, To)(SerializationWriter)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.IO.SerializationWriter)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.IO.SerializationWriter)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
- uid: SuperOffice.IO.SerializationWriter.SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.IO.SerializationWriter)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<SerializationWriter>(SerializationWriter, SerializationWriter)
  nameWithType: ObjectExtensions.AssignByReflection<SerializationWriter>(SerializationWriter, SerializationWriter)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<SuperOffice.IO.SerializationWriter>(SuperOffice.IO.SerializationWriter, SuperOffice.IO.SerializationWriter)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of SerializationWriter)(SerializationWriter, SerializationWriter)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of SuperOffice.IO.SerializationWriter)(SuperOffice.IO.SerializationWriter, SuperOffice.IO.SerializationWriter)
  name.vb: AssignByReflection(Of SerializationWriter)(SerializationWriter, SerializationWriter)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.IO.SerializationWriter,SuperOffice.IO.SerializationWriter)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: '>'
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: ','
  - name: " "
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(SuperOffice.IO.SerializationWriter,SuperOffice.IO.SerializationWriter)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: ','
  - name: " "
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
- uid: SuperOffice.IO.SerializationWriter.SuperOffice.Util.ObjectExtensions.GraphCopy``1
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  parent: SuperOffice.Util.ObjectExtensions
  definition: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<SerializationWriter>(SerializationWriter)
  nameWithType: ObjectExtensions.GraphCopy<SerializationWriter>(SerializationWriter)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<SuperOffice.IO.SerializationWriter>(SuperOffice.IO.SerializationWriter)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of SerializationWriter)(SerializationWriter)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of SuperOffice.IO.SerializationWriter)(SuperOffice.IO.SerializationWriter)
  name.vb: GraphCopy(Of SerializationWriter)(SerializationWriter)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.IO.SerializationWriter)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: '>'
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(SuperOffice.IO.SerializationWriter)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
  - name: (
  - uid: SuperOffice.IO.SerializationWriter
    name: SerializationWriter
    isExternal: true
    href: SuperOffice.IO.SerializationWriter.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  name: AssignByReflection<T>(T, T)
  nameWithType: ObjectExtensions.AssignByReflection<T>(T, T)
  fullName: SuperOffice.Util.ObjectExtensions.AssignByReflection<T>(T, T)
  nameWithType.vb: ObjectExtensions.AssignByReflection(Of T)(T, T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.AssignByReflection(Of T)(T, T)
  name.vb: AssignByReflection(Of T)(T, T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.AssignByReflection``1(``0,``0)
    name: AssignByReflection
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_AssignByReflection__1___0___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: ','
  - name: " "
  - name: T
  - name: )
- uid: SuperOffice.Util.ObjectExtensions
  commentId: T:SuperOffice.Util.ObjectExtensions
  parent: SuperOffice.Util
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html
  name: ObjectExtensions
  nameWithType: ObjectExtensions
  fullName: SuperOffice.Util.ObjectExtensions
- uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  commentId: M:SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
  isExternal: true
  href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  name: GraphCopy<T>(T)
  nameWithType: ObjectExtensions.GraphCopy<T>(T)
  fullName: SuperOffice.Util.ObjectExtensions.GraphCopy<T>(T)
  nameWithType.vb: ObjectExtensions.GraphCopy(Of T)(T)
  fullName.vb: SuperOffice.Util.ObjectExtensions.GraphCopy(Of T)(T)
  name.vb: GraphCopy(Of T)(T)
  spec.csharp:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: <
  - name: T
  - name: '>'
  - name: (
  - name: T
  - name: )
  spec.vb:
  - uid: SuperOffice.Util.ObjectExtensions.GraphCopy``1(``0)
    name: GraphCopy
    isExternal: true
    href: SuperOffice.Util.ObjectExtensions.html#SuperOffice_Util_ObjectExtensions_GraphCopy__1___0_
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
  - name: (
  - name: T
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Util
  commentId: N:SuperOffice.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Util
  nameWithType: SuperOffice.Util
  fullName: SuperOffice.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Util
    name: Util
    isExternal: true
    href: SuperOffice.Util.html
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: System.Int64
  commentId: T:System.Int64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long
  nameWithType: long
  fullName: long
  nameWithType.vb: Long
  fullName.vb: Long
  name.vb: Long
- uid: SuperOffice.IO.SerializationWriter.#ctor*
  commentId: Overload:SuperOffice.IO.SerializationWriter.#ctor
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter__ctor
  name: SerializationWriter
  nameWithType: SerializationWriter.SerializationWriter
  fullName: SuperOffice.IO.SerializationWriter.SerializationWriter
  nameWithType.vb: SerializationWriter.New
  fullName.vb: SuperOffice.IO.SerializationWriter.New
  name.vb: New
- uid: SuperOffice.IO.SerializationWriter.Write*
  commentId: Overload:SuperOffice.IO.SerializationWriter.Write
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_Write_System_Collections_ArrayList_
  name: Write
  nameWithType: SerializationWriter.Write
  fullName: SuperOffice.IO.SerializationWriter.Write
- uid: System.Collections.ArrayList
  commentId: T:System.Collections.ArrayList
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.arraylist
  name: ArrayList
  nameWithType: ArrayList
  fullName: System.Collections.ArrayList
- uid: System.Collections
  commentId: N:System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections
  nameWithType: System.Collections
  fullName: System.Collections
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
- uid: System.Collections.BitArray
  commentId: T:System.Collections.BitArray
  parent: System.Collections
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.bitarray
  name: BitArray
  nameWithType: BitArray
  fullName: System.Collections.BitArray
- uid: System.Collections.Specialized.BitVector32
  commentId: T:System.Collections.Specialized.BitVector32
  parent: System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.specialized.bitvector32
  name: BitVector32
  nameWithType: BitVector32
  fullName: System.Collections.Specialized.BitVector32
- uid: System.Collections.Specialized
  commentId: N:System.Collections.Specialized
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Specialized
  nameWithType: System.Collections.Specialized
  fullName: System.Collections.Specialized
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Specialized
    name: Specialized
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.specialized
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: System.Guid
  commentId: T:System.Guid
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid
  nameWithType: Guid
  fullName: System.Guid
- uid: SuperOffice.IO.IOwnedDataSerializable
  commentId: T:SuperOffice.IO.IOwnedDataSerializable
  parent: SuperOffice.IO
  isExternal: true
  href: SuperOffice.IO.IOwnedDataSerializable.html
  name: IOwnedDataSerializable
  nameWithType: IOwnedDataSerializable
  fullName: SuperOffice.IO.IOwnedDataSerializable
- uid: SuperOffice.IO.SerializationWriter.WriteObject*
  commentId: Overload:SuperOffice.IO.SerializationWriter.WriteObject
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_WriteObject_System_Object_
  name: WriteObject
  nameWithType: SerializationWriter.WriteObject
  fullName: SuperOffice.IO.SerializationWriter.WriteObject
- uid: System.IO.BinaryWriter.Write(System.String)
  commentId: M:System.IO.BinaryWriter.Write(System.String)
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-string)
  name: Write(string)
  nameWithType: BinaryWriter.Write(string)
  fullName: System.IO.BinaryWriter.Write(string)
  nameWithType.vb: BinaryWriter.Write(String)
  fullName.vb: System.IO.BinaryWriter.Write(String)
  name.vb: Write(String)
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.String)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-string)
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.String)
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-string)
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System.TimeSpan
  commentId: T:System.TimeSpan
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan
  nameWithType: TimeSpan
  fullName: System.TimeSpan
- uid: System.Type
  commentId: T:System.Type
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.type
  name: Type
  nameWithType: Type
  fullName: System.Type
- uid: SuperOffice.IO.SerializationWriter.WriteOptimized*
  commentId: Overload:SuperOffice.IO.SerializationWriter.WriteOptimized
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_WriteOptimized_System_Collections_ArrayList_
  name: WriteOptimized
  nameWithType: SerializationWriter.WriteOptimized
  fullName: SuperOffice.IO.SerializationWriter.WriteOptimized
- uid: System.Decimal
  commentId: T:System.Decimal
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal
  nameWithType: decimal
  fullName: decimal
  nameWithType.vb: Decimal
  fullName.vb: Decimal
  name.vb: Decimal
- uid: System.UInt16
  commentId: T:System.UInt16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort
  nameWithType: ushort
  fullName: ushort
  nameWithType.vb: UShort
  fullName.vb: UShort
  name.vb: UShort
- uid: System.UInt32
  commentId: T:System.UInt32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint
  nameWithType: uint
  fullName: uint
  nameWithType.vb: UInteger
  fullName.vb: UInteger
  name.vb: UInteger
- uid: System.UInt64
  commentId: T:System.UInt64
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong
  nameWithType: ulong
  fullName: ulong
  nameWithType.vb: ULong
  fullName.vb: ULong
  name.vb: ULong
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Byte[])
  commentId: M:System.IO.BinaryWriter.Write(System.Byte[])
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte())
  name: Write(byte[])
  nameWithType: BinaryWriter.Write(byte[])
  fullName: System.IO.BinaryWriter.Write(byte[])
  nameWithType.vb: BinaryWriter.Write(Byte())
  fullName.vb: System.IO.BinaryWriter.Write(Byte())
  name.vb: Write(Byte())
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Byte[])
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte())
  - name: (
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Byte[])
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-byte())
  - name: (
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
  - name: )
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: System.IO.BinaryWriter.Write(System.Char[])
  commentId: M:System.IO.BinaryWriter.Write(System.Char[])
  parent: System.IO.BinaryWriter
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char())
  name: Write(char[])
  nameWithType: BinaryWriter.Write(char[])
  fullName: System.IO.BinaryWriter.Write(char[])
  nameWithType.vb: BinaryWriter.Write(Char())
  fullName.vb: System.IO.BinaryWriter.Write(Char())
  name.vb: Write(Char())
  spec.csharp:
  - uid: System.IO.BinaryWriter.Write(System.Char[])
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char())
  - name: (
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: System.IO.BinaryWriter.Write(System.Char[])
    name: Write
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io.binarywriter.write#system-io-binarywriter-write(system-char())
  - name: (
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
  - name: )
- uid: System.Char[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.char
  name: char[]
  nameWithType: char[]
  fullName: char[]
  nameWithType.vb: Char()
  fullName.vb: Char()
  name.vb: Char()
  spec.csharp:
  - uid: System.Char
    name: char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Char
    name: Char
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.char
  - name: (
  - name: )
- uid: System.DateTime[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: Date()
  fullName.vb: Date()
  name.vb: Date()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: (
  - name: )
- uid: System.Decimal[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.decimal
  name: decimal[]
  nameWithType: decimal[]
  fullName: decimal[]
  nameWithType.vb: Decimal()
  fullName.vb: Decimal()
  name.vb: Decimal()
  spec.csharp:
  - uid: System.Decimal
    name: decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Decimal
    name: Decimal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.decimal
  - name: (
  - name: )
- uid: System.Double[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double[]
  nameWithType: double[]
  fullName: double[]
  nameWithType.vb: Double()
  fullName.vb: Double()
  name.vb: Double()
  spec.csharp:
  - uid: System.Double
    name: double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Double
    name: Double
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.double
  - name: (
  - name: )
- uid: System.Single[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.single
  name: float[]
  nameWithType: float[]
  fullName: float[]
  nameWithType.vb: Single()
  fullName.vb: Single()
  name.vb: Single()
  spec.csharp:
  - uid: System.Single
    name: float
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Single
    name: Single
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.single
  - name: (
  - name: )
- uid: System.Guid[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.guid
  name: Guid[]
  nameWithType: Guid[]
  fullName: System.Guid[]
  nameWithType.vb: Guid()
  fullName.vb: System.Guid()
  name.vb: Guid()
  spec.csharp:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Guid
    name: Guid
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.guid
  - name: (
  - name: )
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Int64[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int64
  name: long[]
  nameWithType: long[]
  fullName: long[]
  nameWithType.vb: Long()
  fullName.vb: Long()
  name.vb: Long()
  spec.csharp:
  - uid: System.Int64
    name: long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int64
    name: Long
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int64
  - name: (
  - name: )
- uid: System.Object[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object[]
  nameWithType: object[]
  fullName: object[]
  nameWithType.vb: Object()
  fullName.vb: Object()
  name.vb: Object()
  spec.csharp:
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: (
  - name: )
- uid: System.SByte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.sbyte
  name: sbyte[]
  nameWithType: sbyte[]
  fullName: sbyte[]
  nameWithType.vb: SByte()
  fullName.vb: SByte()
  name.vb: SByte()
  spec.csharp:
  - uid: System.SByte
    name: sbyte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.SByte
    name: SByte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.sbyte
  - name: (
  - name: )
- uid: System.Int16[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short[]
  nameWithType: short[]
  fullName: short[]
  nameWithType.vb: Short()
  fullName.vb: Short()
  name.vb: Short()
  spec.csharp:
  - uid: System.Int16
    name: short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int16
    name: Short
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int16
  - name: (
  - name: )
- uid: System.TimeSpan[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.timespan
  name: TimeSpan[]
  nameWithType: TimeSpan[]
  fullName: System.TimeSpan[]
  nameWithType.vb: TimeSpan()
  fullName.vb: System.TimeSpan()
  name.vb: TimeSpan()
  spec.csharp:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.TimeSpan
    name: TimeSpan
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.timespan
  - name: (
  - name: )
- uid: System.UInt32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint32
  name: uint[]
  nameWithType: uint[]
  fullName: uint[]
  nameWithType.vb: UInteger()
  fullName.vb: UInteger()
  name.vb: UInteger()
  spec.csharp:
  - uid: System.UInt32
    name: uint
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt32
    name: UInteger
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint32
  - name: (
  - name: )
- uid: System.UInt64[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint64
  name: ulong[]
  nameWithType: ulong[]
  fullName: ulong[]
  nameWithType.vb: ULong()
  fullName.vb: ULong()
  name.vb: ULong()
  spec.csharp:
  - uid: System.UInt64
    name: ulong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt64
    name: ULong
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint64
  - name: (
  - name: )
- uid: System.UInt16[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.uint16
  name: ushort[]
  nameWithType: ushort[]
  fullName: ushort[]
  nameWithType.vb: UShort()
  fullName.vb: UShort()
  name.vb: UShort()
  spec.csharp:
  - uid: System.UInt16
    name: ushort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.UInt16
    name: UShort
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.uint16
  - name: (
  - name: )
- uid: SuperOffice.IO.SerializationWriter.WriteTypedArray*
  commentId: Overload:SuperOffice.IO.SerializationWriter.WriteTypedArray
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_WriteTypedArray_System_Array_
  name: WriteTypedArray
  nameWithType: SerializationWriter.WriteTypedArray
  fullName: SuperOffice.IO.SerializationWriter.WriteTypedArray
- uid: System.Array
  commentId: T:System.Array
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.array
  name: Array
  nameWithType: Array
  fullName: System.Array
- uid: SuperOffice.IO.SerializationWriter.AppendTokenTables*
  commentId: Overload:SuperOffice.IO.SerializationWriter.AppendTokenTables
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_AppendTokenTables
  name: AppendTokenTables
  nameWithType: SerializationWriter.AppendTokenTables
  fullName: SuperOffice.IO.SerializationWriter.AppendTokenTables
- uid: SuperOffice.IO.SerializationWriter.ToArray*
  commentId: Overload:SuperOffice.IO.SerializationWriter.ToArray
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_ToArray
  name: ToArray
  nameWithType: SerializationWriter.ToArray
  fullName: SuperOffice.IO.SerializationWriter.ToArray
- uid: SuperOffice.IO.SerializationWriter.ToStream*
  commentId: Overload:SuperOffice.IO.SerializationWriter.ToStream
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_ToStream
  name: ToStream
  nameWithType: SerializationWriter.ToStream
  fullName: SuperOffice.IO.SerializationWriter.ToStream
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: SuperOffice.IO.SerializationWriter.WriteBytesDirect*
  commentId: Overload:SuperOffice.IO.SerializationWriter.WriteBytesDirect
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_WriteBytesDirect_System_Byte___
  name: WriteBytesDirect
  nameWithType: SerializationWriter.WriteBytesDirect
  fullName: SuperOffice.IO.SerializationWriter.WriteBytesDirect
- uid: SuperOffice.IO.SerializationWriter.WriteStringDirect*
  commentId: Overload:SuperOffice.IO.SerializationWriter.WriteStringDirect
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_WriteStringDirect_System_String_
  name: WriteStringDirect
  nameWithType: SerializationWriter.WriteStringDirect
  fullName: SuperOffice.IO.SerializationWriter.WriteStringDirect
- uid: SuperOffice.IO.SerializationWriter.WriteTokenizedObject*
  commentId: Overload:SuperOffice.IO.SerializationWriter.WriteTokenizedObject
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_WriteTokenizedObject_System_Object_
  name: WriteTokenizedObject
  nameWithType: SerializationWriter.WriteTokenizedObject
  fullName: SuperOffice.IO.SerializationWriter.WriteTokenizedObject
- uid: SuperOffice.IO.SerializationWriter.DumpTypeUsage*
  commentId: Overload:SuperOffice.IO.SerializationWriter.DumpTypeUsage
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_DumpTypeUsage
  name: DumpTypeUsage
  nameWithType: SerializationWriter.DumpTypeUsage
  fullName: SuperOffice.IO.SerializationWriter.DumpTypeUsage
- uid: SuperOffice.IO.SerializationWriter.TypeSurrogates*
  commentId: Overload:SuperOffice.IO.SerializationWriter.TypeSurrogates
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_TypeSurrogates
  name: TypeSurrogates
  nameWithType: SerializationWriter.TypeSurrogates
  fullName: SuperOffice.IO.SerializationWriter.TypeSurrogates
- uid: SuperOffice.IO.SerializationWriter.OptimizeForSize*
  commentId: Overload:SuperOffice.IO.SerializationWriter.OptimizeForSize
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_OptimizeForSize
  name: OptimizeForSize
  nameWithType: SerializationWriter.OptimizeForSize
  fullName: SuperOffice.IO.SerializationWriter.OptimizeForSize
- uid: SuperOffice.IO.SerializationWriter.PreserveDecimalScale*
  commentId: Overload:SuperOffice.IO.SerializationWriter.PreserveDecimalScale
  isExternal: true
  href: SuperOffice.IO.SerializationWriter.html#SuperOffice_IO_SerializationWriter_PreserveDecimalScale
  name: PreserveDecimalScale
  nameWithType: SerializationWriter.PreserveDecimalScale
  fullName: SuperOffice.IO.SerializationWriter.PreserveDecimalScale
