### YamlMime:ManagedReference
items:
- uid: SuperOffice.Security.Principal.SoPrincipal
  commentId: T:SuperOffice.Security.Principal.SoPrincipal
  id: SoPrincipal
  parent: SuperOffice.Security.Principal
  children:
  - SuperOffice.Security.Principal.SoPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  - SuperOffice.Security.Principal.SoPrincipal.Associate
  - SuperOffice.Security.Principal.SoPrincipal.AssociateId
  - SuperOffice.Security.Principal.SoPrincipal.Authenticate
  - SuperOffice.Security.Principal.SoPrincipal.BusinessId
  - SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  - SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  - SuperOffice.Security.Principal.SoPrincipal.CategoryId
  - SuperOffice.Security.Principal.SoPrincipal.ClearCache
  - SuperOffice.Security.Principal.SoPrincipal.ContactId
  - SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  - SuperOffice.Security.Principal.SoPrincipal.CountryId
  - SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  - SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  - SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  - SuperOffice.Security.Principal.SoPrincipal.EjUserId
  - SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  - SuperOffice.Security.Principal.SoPrincipal.FullName
  - SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
  - SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
  - SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
  - SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
  - SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
  - SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
  - SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
  - SuperOffice.Security.Principal.SoPrincipal.GroupId
  - SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
  - SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  - SuperOffice.Security.Principal.SoPrincipal.Identities
  - SuperOffice.Security.Principal.SoPrincipal.Identity
  - SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
  - SuperOffice.Security.Principal.SoPrincipal.IsPerson
  - SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  - SuperOffice.Security.Principal.SoPrincipal.License
  - SuperOffice.Security.Principal.SoPrincipal.PersonId
  - SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  - SuperOffice.Security.Principal.SoPrincipal.RoleId
  - SuperOffice.Security.Principal.SoPrincipal.RoleName
  - SuperOffice.Security.Principal.SoPrincipal.RoleType
  - SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  - SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword(System.String)
  - SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
  - SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  - SuperOffice.Security.Principal.SoPrincipal.State
  - SuperOffice.Security.Principal.SoPrincipal.TimeZone
  - SuperOffice.Security.Principal.SoPrincipal.ToString
  - SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
  - SuperOffice.Security.Principal.SoPrincipal.UserName
  - SuperOffice.Security.Principal.SoPrincipal.UserType
  langs:
  - csharp
  - vb
  name: SoPrincipal
  nameWithType: SoPrincipal
  fullName: SuperOffice.Security.Principal.SoPrincipal
  type: Class
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Summary description for SoPrincipal.
  example: []
  syntax:
    content: 'public abstract class SoPrincipal : MarshalByRefObject, IPrincipal'
    content.vb: Public MustInherit Class SoPrincipal Inherits MarshalByRefObject Implements IPrincipal
  inheritance:
  - System.Object
  - System.MarshalByRefObject
  derivedClasses:
  - SuperOffice.Security.Principal.SoLocalPrincipal
  implements:
  - System.Security.Principal.IPrincipal
  inheritedMembers:
  - System.MarshalByRefObject.GetLifetimeService
  - System.MarshalByRefObject.InitializeLifetimeService
  - System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
  extensionMethods:
  - SuperOffice.Security.Principal.SoPrincipal.EnumUtil.MapEnums``2
  - SuperOffice.Security.Principal.SoPrincipal.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  - SuperOffice.Security.Principal.SoPrincipal.SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid
- uid: SuperOffice.Security.Principal.SoPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})
  id: '#ctor(System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity})'
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: SoPrincipal(IEnumerable<ClaimsIdentity>)
  nameWithType: SoPrincipal.SoPrincipal(IEnumerable<ClaimsIdentity>)
  fullName: SuperOffice.Security.Principal.SoPrincipal.SoPrincipal(System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>)
  type: Constructor
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Default constructor for the identity.
  remarks: ''
  example: []
  syntax:
    content: protected SoPrincipal(IEnumerable<ClaimsIdentity> identities)
    parameters:
    - id: identities
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
    content.vb: Protected Sub New(identities As IEnumerable(Of ClaimsIdentity))
  overload: SuperOffice.Security.Principal.SoPrincipal.#ctor*
  nameWithType.vb: SoPrincipal.New(IEnumerable(Of ClaimsIdentity))
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.New(System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity))
  name.vb: New(IEnumerable(Of ClaimsIdentity))
- uid: SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword(System.String)
  id: SetAssociatePassword(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: SetAssociatePassword(string)
  nameWithType: SoPrincipal.SetAssociatePassword(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: >-
      [Obsolete("Method not supported in 7", true)]

      protected void SetAssociatePassword(string password)
    parameters:
    - id: password
      type: System.String
    content.vb: >-
      <Obsolete("Method not supported in 7", True)>

      Protected Sub SetAssociatePassword(password As String)
  overload: SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Method not supported in 7
    - type: System.Boolean
      value: true
  nameWithType.vb: SoPrincipal.SetAssociatePassword(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword(String)
  name.vb: SetAssociatePassword(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInRole(System.String)
  id: IsInRole(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: IsInRole(string)
  nameWithType: SoPrincipal.IsInRole(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInRole(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Is the principal (e.g. user) in the given role.
  example: []
  syntax:
    content: public virtual bool IsInRole(string role)
    parameters:
    - id: role
      type: System.String
      description: The role to check if the user is a member of
    return:
      type: System.Boolean
      description: True if the user is member for this role
    content.vb: Public Overridable Function IsInRole(role As String) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.IsInRole*
  implements:
  - System.Security.Principal.IPrincipal.IsInRole(System.String)
  nameWithType.vb: SoPrincipal.IsInRole(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInRole(String)
  name.vb: IsInRole(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
  id: GetPrincipalCarrier
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetPrincipalCarrier()
  nameWithType: SoPrincipal.GetPrincipalCarrier()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Private SuperOffice function - do not use! Get the SoPrincipalCarrier from the SoPrincipal
  remarks: This method is protected with code access security.  It is only to be used by SuperOffice!
  example: []
  syntax:
    content: public SoPrincipalCarrier GetPrincipalCarrier()
    return:
      type: SuperOffice.CRM.Services.SoPrincipalCarrier
      description: Instance of the SoPrincipalCarrier held by the SoPrincipal.
    content.vb: Public Function GetPrincipalCarrier() As SoPrincipalCarrier
  overload: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier*
  exceptions:
  - type: System.Security.SecurityException
    commentId: T:System.Security.SecurityException
    description: >-
      Thrown if the caller's if the callstack contains assemblies not signed with the 

      SuperOffice strong name.  For SuperOffice developers: When calling this method, 

      it is important that an assert on the SoStrongName permission is called prior to 

      accessing this method; in order to prevent additional stack walcing beyond the 

      calling method.
- uid: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  id: SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: SetPrincipalCarrier(SoPrincipalCarrier)
  nameWithType: SoPrincipal.SetPrincipalCarrier(SoPrincipalCarrier)
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier(SuperOffice.CRM.Services.SoPrincipalCarrier)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Private SuperOffice function - do not use! Set the SoPrincipalCarrier for the SoPrincipal.
  remarks: This method is protected with code access security.  It is only to be used by SuperOffice!
  example: []
  syntax:
    content: public void SetPrincipalCarrier(SoPrincipalCarrier principalCarrier)
    parameters:
    - id: principalCarrier
      type: SuperOffice.CRM.Services.SoPrincipalCarrier
      description: The SoPrincipalCarrier to assign to the SoPrincipal.
    content.vb: Public Sub SetPrincipalCarrier(principalCarrier As SoPrincipalCarrier)
  overload: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier*
- uid: SuperOffice.Security.Principal.SoPrincipal.Authenticate
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.Authenticate
  id: Authenticate
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: Authenticate()
  nameWithType: SoPrincipal.Authenticate()
  fullName: SuperOffice.Security.Principal.SoPrincipal.Authenticate()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Authenticates the Principal
  example: []
  syntax:
    content: public abstract void Authenticate()
    content.vb: Public MustOverride Sub Authenticate()
  overload: SuperOffice.Security.Principal.SoPrincipal.Authenticate*
- uid: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
  id: GetSafeCredentials
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetSafeCredentials()
  nameWithType: SoPrincipal.GetSafeCredentials()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Obtain a set of credentials that are safe to use accross mix-mode authentication scenarios.
  example: []
  syntax:
    content: public abstract SoCredentials GetSafeCredentials()
    return:
      type: SuperOffice.Security.Principal.SoCredentials
      description: Credentials that are safe to use accross mix-mode authentication scenarios
    content.vb: Public MustOverride Function GetSafeCredentials() As SoCredentials
  overload: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials*
- uid: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(System.String,System.Boolean)
  id: GetAccessToken(System.String,System.Boolean)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetAccessToken(string, bool)
  nameWithType: SoPrincipal.GetAccessToken(string, bool)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(string, bool)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Create a new access token for a given clientSecret (aka ApplicationToken), including CustSvc session info.
  example: []
  syntax:
    content: public abstract string GetAccessToken(string clientSecret, bool includeCsSession)
    parameters:
    - id: clientSecret
      type: System.String
      description: The app's client secret (the application token) - can be null or "" for on-site. Required for online
    - id: includeCsSession
      type: System.Boolean
      description: Whether to include CustSvc session details
    return:
      type: System.String
      description: A fresh "8A:xyz.blabla==" access token.
    content.vb: Public MustOverride Function GetAccessToken(clientSecret As String, includeCsSession As Boolean) As String
  overload: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken*
  nameWithType.vb: SoPrincipal.GetAccessToken(String, Boolean)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken(String, Boolean)
  name.vb: GetAccessToken(String, Boolean)
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(System.Int32)
  id: IsInSameCompany(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: IsInSameCompany(int)
  nameWithType: SoPrincipal.IsInSameCompany(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(int)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Is the associate a person in the same company as the given associate
  example: []
  syntax:
    content: public virtual bool IsInSameCompany(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Asssociate id of the person to compare to.
    return:
      type: System.Boolean
      description: True if they are in the same company.
    content.vb: Public Overridable Function IsInSameCompany(associateId As Integer) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany*
  nameWithType.vb: SoPrincipal.IsInSameCompany(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany(Integer)
  name.vb: IsInSameCompany(Integer)
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInCompany(System.Int32)
  id: IsInCompany(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: IsInCompany(int)
  nameWithType: SoPrincipal.IsInCompany(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(int)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Is the accociate a person in this company
  example: []
  syntax:
    content: public virtual bool IsInCompany(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: ContactId of the company to check for.
    return:
      type: System.Boolean
      description: True if the corrent principal is a person in this company.
    content.vb: Public Overridable Function IsInCompany(contactId As Integer) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.IsInCompany*
  nameWithType.vb: SoPrincipal.IsInCompany(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInCompany(Integer)
  name.vb: IsInCompany(Integer)
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInProject(System.Int32)
  id: IsInProject(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: IsInProject(int)
  nameWithType: SoPrincipal.IsInProject(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInProject(int)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Is the principal member of the project.
  example: []
  syntax:
    content: public virtual bool IsInProject(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: ProjectId of the project to check that the principal is a member of
    return:
      type: System.Boolean
      description: True if the principal is membor of the given project.
    content.vb: Public Overridable Function IsInProject(projectId As Integer) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.IsInProject*
  nameWithType.vb: SoPrincipal.IsInProject(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInProject(Integer)
  name.vb: IsInProject(Integer)
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(System.Int32)
  id: IsInSameGroup(System.Int32)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: IsInSameGroup(int)
  nameWithType: SoPrincipal.IsInSameGroup(int)
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(int)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Is the associate in the same usergroup as the principal.
  example: []
  syntax:
    content: public virtual bool IsInSameGroup(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: AssociateId of the identity to compare to.
    return:
      type: System.Boolean
      description: True if the associate is in the suame usergroup as the principal.
    content.vb: Public Overridable Function IsInSameGroup(associateId As Integer) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup*
  nameWithType.vb: SoPrincipal.IsInSameGroup(Integer)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup(Integer)
  name.vb: IsInSameGroup(Integer)
- uid: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
  id: GetFunctionRights
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetFunctionRights()
  nameWithType: SoPrincipal.GetFunctionRights()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Get all the functional rights for the user's role.
  example: []
  syntax:
    content: public virtual string[] GetFunctionRights()
    return:
      type: System.String[]
      description: Functional rights for the user's role.
    content.vb: Public Overridable Function GetFunctionRights() As String()
  overload: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights*
- uid: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(System.String)
  id: HasFunctionRight(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: HasFunctionRight(string)
  nameWithType: SoPrincipal.HasFunctionRight(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Check if the user's role has the functional right.  Use <xref href="SuperOffice.CRM.FunctionRightStrings" data-throw-if-not-resolved="false"></xref> to avoid misspelling.
  example: []
  syntax:
    content: public virtual bool HasFunctionRight(string functionRightName)
    parameters:
    - id: functionRightName
      type: System.String
      description: Name of the functional right as returned from the helper class <xref href="SuperOffice.CRM.FunctionRightStrings" data-throw-if-not-resolved="false"></xref>.
    return:
      type: System.Boolean
      description: True if the user's role has this right, otherwise false.
    content.vb: Public Overridable Function HasFunctionRight(functionRightName As String) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight*
  nameWithType.vb: SoPrincipal.HasFunctionRight(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight(String)
  name.vb: HasFunctionRight(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String,System.String)
  id: HasLicense(System.String,System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: HasLicense(string, string)
  nameWithType: SoPrincipal.HasLicense(string, string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasLicense(string, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Check if the user has been granted the provided license. Use <xref href="SuperOffice.License.SoLicenseNames" data-throw-if-not-resolved="false"></xref> to avoid misspelling.
  example: []
  syntax:
    content: public virtual bool HasLicense(string owner, string module)
    parameters:
    - id: owner
      type: System.String
      description: Name of the module owner.
    - id: module
      type: System.String
      description: Name of the module license
    return:
      type: System.Boolean
      description: False is returned if this license has not been granted.
    content.vb: Public Overridable Function HasLicense(owner As String, [module] As String) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.HasLicense*
  nameWithType.vb: SoPrincipal.HasLicense(String, String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.HasLicense(String, String)
  name.vb: HasLicense(String, String)
- uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.HasLicense(System.String)
  id: HasLicense(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: HasLicense(string)
  nameWithType: SoPrincipal.HasLicense(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasLicense(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Check if the user has been granted the provided licens.e Use <xref href="SuperOffice.License.SoLicenseNames" data-throw-if-not-resolved="false"></xref> to avoid misspelling.
  example: []
  syntax:
    content: public virtual bool HasLicense(string fullName)
    parameters:
    - id: fullName
      type: System.String
      description: Full name of the license formatted like [OwnerName].[LicenseName].
    return:
      type: System.Boolean
      description: False is returned if this license has not been granted.
    content.vb: Public Overridable Function HasLicense(fullName As String) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.HasLicense*
  nameWithType.vb: SoPrincipal.HasLicense(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.HasLicense(String)
  name.vb: HasLicense(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String,System.String)
  id: GetLicense(System.String,System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetLicense(string, string)
  nameWithType: SoPrincipal.GetLicense(string, string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetLicense(string, string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Get details of a granted license.  Use <xref href="SuperOffice.License.SoLicenseNames" data-throw-if-not-resolved="false"></xref> to avoid misspelling.
  example: []
  syntax:
    content: public GrantedModuleLicense GetLicense(string owner, string module)
    parameters:
    - id: owner
      type: System.String
      description: Name of the module owner.
    - id: module
      type: System.String
      description: Name of the module license
    return:
      type: SuperOffice.CRM.Services.GrantedModuleLicense
      description: Details of a granted license.  Null (VB Nothing) is returned if the named license has not been granted.
    content.vb: Public Function GetLicense(owner As String, [module] As String) As GrantedModuleLicense
  overload: SuperOffice.Security.Principal.SoPrincipal.GetLicense*
  nameWithType.vb: SoPrincipal.GetLicense(String, String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetLicense(String, String)
  name.vb: GetLicense(String, String)
- uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
  id: GetGrantedLicensesAsString
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetGrantedLicensesAsString()
  nameWithType: SoPrincipal.GetGrantedLicensesAsString()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Get commaseparated string of granted licenses.
  example: []
  syntax:
    content: public string GetGrantedLicensesAsString()
    return:
      type: System.String
      description: Commaseperated string of granted licenses for current user
    content.vb: Public Function GetGrantedLicensesAsString() As String
  overload: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString*
- uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
  id: GetGrantedLicenses
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetGrantedLicenses()
  nameWithType: SoPrincipal.GetGrantedLicenses()
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: ''
  example: []
  syntax:
    content: public List<GrantedModuleLicense> GetGrantedLicenses()
    return:
      type: System.Collections.Generic.List{SuperOffice.CRM.Services.GrantedModuleLicense}
      description: ''
    content.vb: Public Function GetGrantedLicenses() As List(Of GrantedModuleLicense)
  overload: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses*
- uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetLicense(System.String)
  id: GetLicense(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetLicense(string)
  nameWithType: SoPrincipal.GetLicense(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetLicense(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Get details of a granted license.  Use <xref href="SuperOffice.License.SoLicenseNames" data-throw-if-not-resolved="false"></xref> to avoid misspelling.
  example: []
  syntax:
    content: public GrantedModuleLicense GetLicense(string fullName)
    parameters:
    - id: fullName
      type: System.String
      description: Full name of the license formatted like [OwnerName].[LicenseName].
    return:
      type: SuperOffice.CRM.Services.GrantedModuleLicense
      description: Details of a granted license.  Null (VB Nothing) is returned if the named license has not been granted.
    content.vb: Public Function GetLicense(fullName As String) As GrantedModuleLicense
  overload: SuperOffice.Security.Principal.SoPrincipal.GetLicense*
  nameWithType.vb: SoPrincipal.GetLicense(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetLicense(String)
  name.vb: GetLicense(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.ToString
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.ToString
  id: ToString
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: ToString()
  nameWithType: SoPrincipal.ToString()
  fullName: SuperOffice.Security.Principal.SoPrincipal.ToString()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  example: []
  syntax:
    content: public override string ToString()
    return:
      type: System.String
    content.vb: Public Overrides Function ToString() As String
  overridden: System.Object.ToString
  overload: SuperOffice.Security.Principal.SoPrincipal.ToString*
- uid: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(System.String,System.Object,System.Double)
  id: SetCachedItem(System.String,System.Object,System.Double)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: SetCachedItem(string, object, double)
  nameWithType: SoPrincipal.SetCachedItem(string, object, double)
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(string, object, double)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Add a value to the session cache.
  example: []
  syntax:
    content: public virtual void SetCachedItem(string key, object cacheValue, double timeout)
    parameters:
    - id: key
      type: System.String
      description: Key to the item.
    - id: cacheValue
      type: System.Object
      description: Value of the item
    - id: timeout
      type: System.Double
      description: Timeout for the value, in seconds.  '0' means that the value is cahced throughout the session.
    content.vb: Public Overridable Sub SetCachedItem(key As String, cacheValue As Object, timeout As Double)
  overload: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem*
  nameWithType.vb: SoPrincipal.SetCachedItem(String, Object, Double)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem(String, Object, Double)
  name.vb: SetCachedItem(String, Object, Double)
- uid: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(System.String)
  id: GetCachedItem(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GetCachedItem(string)
  nameWithType: SoPrincipal.GetCachedItem(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Get a value from the session cache.
  example: []
  syntax:
    content: public virtual object GetCachedItem(string key)
    parameters:
    - id: key
      type: System.String
      description: Key to the item in the cache.
    return:
      type: System.Object
      description: If there is a valid item in the cache, it is returned.  'null' (VB Nothing) is returned if there is no valid value.
    content.vb: Public Overridable Function GetCachedItem(key As String) As Object
  overload: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem*
  nameWithType.vb: SoPrincipal.GetCachedItem(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem(String)
  name.vb: GetCachedItem(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(System.String)
  id: RemoveCachedItem(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: RemoveCachedItem(string)
  nameWithType: SoPrincipal.RemoveCachedItem(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Deletes a cached value from the session cache
  example: []
  syntax:
    content: public virtual void RemoveCachedItem(string key)
    parameters:
    - id: key
      type: System.String
      description: Key to the item in the cache
    content.vb: Public Overridable Sub RemoveCachedItem(key As String)
  overload: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem*
  nameWithType.vb: SoPrincipal.RemoveCachedItem(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem(String)
  name.vb: RemoveCachedItem(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.ClearCache
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.ClearCache
  id: ClearCache
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: ClearCache()
  nameWithType: SoPrincipal.ClearCache()
  fullName: SuperOffice.Security.Principal.SoPrincipal.ClearCache()
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Clear all items from the session cache;
  example: []
  syntax:
    content: public virtual void ClearCache()
    content.vb: Public Overridable Sub ClearCache()
  overload: SuperOffice.Security.Principal.SoPrincipal.ClearCache*
- uid: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(System.String)
  id: CacheKeyExist(System.String)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: CacheKeyExist(string)
  nameWithType: SoPrincipal.CacheKeyExist(string)
  fullName: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(string)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Check for key in cache
  example: []
  syntax:
    content: >-
      [Obsolete("Using CacheKeyExist followed by GetCachedItem is unsafe. Please use TryGetCachedItem instead")]

      public virtual bool CacheKeyExist(string key)
    parameters:
    - id: key
      type: System.String
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: >-
      <Obsolete("Using CacheKeyExist followed by GetCachedItem is unsafe. Please use TryGetCachedItem instead")>

      Public Overridable Function CacheKeyExist(key As String) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String)
    arguments:
    - type: System.String
      value: Using CacheKeyExist followed by GetCachedItem is unsafe. Please use TryGetCachedItem instead
  nameWithType.vb: SoPrincipal.CacheKeyExist(String)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist(String)
  name.vb: CacheKeyExist(String)
- uid: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
  commentId: M:SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(System.String,System.Object@)
  id: TryGetCachedItem(System.String,System.Object@)
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: TryGetCachedItem(string, out object)
  nameWithType: SoPrincipal.TryGetCachedItem(string, out object)
  fullName: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(string, out object)
  type: Method
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public virtual bool TryGetCachedItem(string key, out object item)
    parameters:
    - id: key
      type: System.String
    - id: item
      type: System.Object
    return:
      type: System.Boolean
    content.vb: Public Overridable Function TryGetCachedItem(key As String, item As Object) As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem*
  nameWithType.vb: SoPrincipal.TryGetCachedItem(String, Object)
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem(String, Object)
  name.vb: TryGetCachedItem(String, Object)
- uid: SuperOffice.Security.Principal.SoPrincipal.Identities
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.Identities
  id: Identities
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: Identities
  nameWithType: SoPrincipal.Identities
  fullName: SuperOffice.Security.Principal.SoPrincipal.Identities
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: public IEnumerable<ClaimsIdentity> Identities { get; }
    parameters: []
    return:
      type: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
    content.vb: Public ReadOnly Property Identities As IEnumerable(Of ClaimsIdentity)
  overload: SuperOffice.Security.Principal.SoPrincipal.Identities*
- uid: SuperOffice.Security.Principal.SoPrincipal.Identity
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.Identity
  id: Identity
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: Identity
  nameWithType: SoPrincipal.Identity
  fullName: SuperOffice.Security.Principal.SoPrincipal.Identity
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Identity for the principal
  example: []
  syntax:
    content: public abstract ISoIdentity Identity { get; }
    parameters: []
    return:
      type: SuperOffice.Security.Principal.ISoIdentity
    content.vb: Public MustOverride ReadOnly Property Identity As ISoIdentity
  overload: SuperOffice.Security.Principal.SoPrincipal.Identity*
- uid: SuperOffice.Security.Principal.SoPrincipal.TimeZone
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.TimeZone
  id: TimeZone
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: TimeZone
  nameWithType: SoPrincipal.TimeZone
  fullName: SuperOffice.Security.Principal.SoPrincipal.TimeZone
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: >-
    TimeZone selected by user in Diary. The selection is available only when BaseTzLocation is set (timezone handling ON).

    Only a few date fields on appointment/recurrencerule are influenced by this setting, see SuperOffice.CD.DSL.Database.DbModelConstants.TimeZoneConvert setting.

    UI uses Defaults.DefaultTimezone preference as initial choice.
  example: []
  syntax:
    content: public int TimeZone { get; set; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public Property TimeZone As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.TimeZone*
- uid: SuperOffice.Security.Principal.SoPrincipal.UserName
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.UserName
  id: UserName
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: UserName
  nameWithType: SoPrincipal.UserName
  fullName: SuperOffice.Security.Principal.SoPrincipal.UserName
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: UserName on associatetable
  example: []
  syntax:
    content: public string UserName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property UserName As String
  overload: SuperOffice.Security.Principal.SoPrincipal.UserName*
- uid: SuperOffice.Security.Principal.SoPrincipal.UserType
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.UserType
  id: UserType
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: UserType
  nameWithType: SoPrincipal.UserType
  fullName: SuperOffice.Security.Principal.SoPrincipal.UserType
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Type of user
  example: []
  syntax:
    content: public UserType UserType { get; }
    parameters: []
    return:
      type: SuperOffice.License.UserType
    content.vb: Public ReadOnly Property UserType As UserType
  overload: SuperOffice.Security.Principal.SoPrincipal.UserType*
- uid: SuperOffice.Security.Principal.SoPrincipal.Associate
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.Associate
  id: Associate
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: Associate
  nameWithType: SoPrincipal.Associate
  fullName: SuperOffice.Security.Principal.SoPrincipal.Associate
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Associate name (e.g. logon name) for the user
  example: []
  syntax:
    content: public string Associate { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property Associate As String
  overload: SuperOffice.Security.Principal.SoPrincipal.Associate*
- uid: SuperOffice.Security.Principal.SoPrincipal.AssociateId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.AssociateId
  id: AssociateId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: AssociateId
  nameWithType: SoPrincipal.AssociateId
  fullName: SuperOffice.Security.Principal.SoPrincipal.AssociateId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: AssociateId for the user.
  example: []
  syntax:
    content: public int AssociateId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property AssociateId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.AssociateId*
- uid: SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  id: CRM5Secret
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: CRM5Secret
  nameWithType: SoPrincipal.CRM5Secret
  fullName: SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: >-
    Secret used with type <xref href="SuperOffice.Security.Principal.SoPrincipal.UserType" data-throw-if-not-resolved="false"></xref> CRM5 in <xref href="SuperOffice.Security.Principal.SoCredentials" data-throw-if-not-resolved="false"></xref>.

    Only valid 24 hours after it was created.
  example: []
  syntax:
    content: >-
      [Obsolete("CRM5Secret is no longer in use. Call the SoCredentials() method if you need a session ticket; its .Ticket property will work as 'user name' in NetServer authentications", true)]

      public string CRM5Secret { get; }
    parameters: []
    return:
      type: System.String
    content.vb: >-
      <Obsolete("CRM5Secret is no longer in use. Call the SoCredentials() method if you need a session ticket; its .Ticket property will work as 'user name' in NetServer authentications", True)>

      Public ReadOnly Property CRM5Secret As String
  overload: SuperOffice.Security.Principal.SoPrincipal.CRM5Secret*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: CRM5Secret is no longer in use. Call the SoCredentials() method if you need a session ticket; its .Ticket property will work as 'user name' in NetServer authentications
    - type: System.Boolean
      value: true
- uid: SuperOffice.Security.Principal.SoPrincipal.IsPerson
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.IsPerson
  id: IsPerson
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: IsPerson
  nameWithType: SoPrincipal.IsPerson
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsPerson
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Is this associate a person, and not a resource?
  example: []
  syntax:
    content: public bool IsPerson { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: Public ReadOnly Property IsPerson As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.IsPerson*
- uid: SuperOffice.Security.Principal.SoPrincipal.PersonId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.PersonId
  id: PersonId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: PersonId
  nameWithType: SoPrincipal.PersonId
  fullName: SuperOffice.Security.Principal.SoPrincipal.PersonId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Associate's person id
  example: []
  syntax:
    content: public int PersonId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property PersonId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.PersonId*
- uid: SuperOffice.Security.Principal.SoPrincipal.CountryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CountryId
  id: CountryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: CountryId
  nameWithType: SoPrincipal.CountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.CountryId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: >-
    CountryId for the user, from the person record. Note that this is not the users' "home country"

    (which can be overriden by a preference), use the <xref href="SuperOffice.Security.Principal.SoPrincipal.HomeCountryId" data-throw-if-not-resolved="false"></xref> to get that id.
  example: []
  syntax:
    content: public int CountryId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CountryId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.CountryId*
- uid: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  id: HomeCountryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: HomeCountryId
  nameWithType: SoPrincipal.HomeCountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: >-
    Country id for the user's home country.  This is the default country id when creating new items.

    In contrast to <xref href="SuperOffice.Security.Principal.SoPrincipal.CountryId" data-throw-if-not-resolved="false"></xref>, which only looks at the person record, this property

    also takes into account the OwnCountry preference.
  example: []
  syntax:
    content: public int HomeCountryId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property HomeCountryId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId*
- uid: SuperOffice.Security.Principal.SoPrincipal.ContactId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.ContactId
  id: ContactId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: ContactId
  nameWithType: SoPrincipal.ContactId
  fullName: SuperOffice.Security.Principal.SoPrincipal.ContactId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Company of the associate's person
  example: []
  syntax:
    content: public int ContactId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ContactId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.ContactId*
- uid: SuperOffice.Security.Principal.SoPrincipal.GroupId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.GroupId
  id: GroupId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: GroupId
  nameWithType: SoPrincipal.GroupId
  fullName: SuperOffice.Security.Principal.SoPrincipal.GroupId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Associate's group_idx
  example: []
  syntax:
    content: public int GroupId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property GroupId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.GroupId*
- uid: SuperOffice.Security.Principal.SoPrincipal.BusinessId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.BusinessId
  id: BusinessId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: BusinessId
  nameWithType: SoPrincipal.BusinessId
  fullName: SuperOffice.Security.Principal.SoPrincipal.BusinessId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: BusinessIdx for the company that the user belongs to.
  example: []
  syntax:
    content: public int BusinessId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property BusinessId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.BusinessId*
- uid: SuperOffice.Security.Principal.SoPrincipal.CategoryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CategoryId
  id: CategoryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: CategoryId
  nameWithType: SoPrincipal.CategoryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.CategoryId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: CategoryIdx of the company that the user belongs to.
  example: []
  syntax:
    content: public int CategoryId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property CategoryId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.CategoryId*
- uid: SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  id: ContactOwner
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: ContactOwner
  nameWithType: SoPrincipal.ContactOwner
  fullName: SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Owner (AssocaiteId) of the company that the user belongs to.
  example: []
  syntax:
    content: public int ContactOwner { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property ContactOwner As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.ContactOwner*
- uid: SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  id: DatabaseContextIdentifier
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: DatabaseContextIdentifier
  nameWithType: SoPrincipal.DatabaseContextIdentifier
  fullName: SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: The identifier of the users database context.
  example: []
  syntax:
    content: public string DatabaseContextIdentifier { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property DatabaseContextIdentifier As String
  overload: SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier*
- uid: SuperOffice.Security.Principal.SoPrincipal.State
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.State
  id: State
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: State
  nameWithType: SoPrincipal.State
  fullName: SuperOffice.Security.Principal.SoPrincipal.State
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: State of the Authorization
  example: []
  syntax:
    content: public AuthorizationState State { get; protected set; }
    parameters: []
    return:
      type: SuperOffice.Security.Principal.AuthorizationState
    content.vb: Public Property State As AuthorizationState
  overload: SuperOffice.Security.Principal.SoPrincipal.State*
- uid: SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  id: CanCreateExternalPerson
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: CanCreateExternalPerson
  nameWithType: SoPrincipal.CanCreateExternalPerson
  fullName: SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Can this user create and manage external persons
  remarks: External persons (e.g. <xref href="SuperOffice.Security.Principal.SoPrincipal.UserType" data-throw-if-not-resolved="false"></xref> of ExternalPerson) can only manage external persons belonging to the same contact (e.g. company).  Hence, only <xref href="SuperOffice.Security.Principal.SoPrincipal.UserType" data-throw-if-not-resolved="false"></xref> of Employee and System can manage external persons on all companies in the database.
  example: []
  syntax:
    content: >-
      [Obsolete("Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class", true)]

      public bool CanCreateExternalPerson { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class", True)>

      Public ReadOnly Property CanCreateExternalPerson As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class
    - type: System.Boolean
      value: true
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleId
  id: RoleId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: RoleId
  nameWithType: SoPrincipal.RoleId
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Id of the users role
  example: []
  syntax:
    content: public int RoleId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property RoleId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.RoleId*
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleName
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleName
  id: RoleName
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: RoleName
  nameWithType: SoPrincipal.RoleName
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleName
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Name of the users role
  example: []
  syntax:
    content: public string RoleName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RoleName As String
  overload: SuperOffice.Security.Principal.SoPrincipal.RoleName*
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  id: RoleDescription
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: RoleDescription
  nameWithType: SoPrincipal.RoleDescription
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Description (e.g. tooltip) for the users role
  example: []
  syntax:
    content: public string RoleDescription { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property RoleDescription As String
  overload: SuperOffice.Security.Principal.SoPrincipal.RoleDescription*
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleType
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.RoleType
  id: RoleType
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: RoleType
  nameWithType: SoPrincipal.RoleType
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleType
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Type of user.
  example: []
  syntax:
    content: public RoleType RoleType { get; }
    parameters: []
    return:
      type: SuperOffice.Data.RoleType
    content.vb: Public ReadOnly Property RoleType As RoleType
  overload: SuperOffice.Security.Principal.SoPrincipal.RoleType*
- uid: SuperOffice.Security.Principal.SoPrincipal.License
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.License
  id: License
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: License
  nameWithType: SoPrincipal.License
  fullName: SuperOffice.Security.Principal.SoPrincipal.License
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: License granted to the site and user.
  example: []
  syntax:
    content: >-
      [Obsolete("Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class", true)]

      public ProductLicense License { get; }
    parameters: []
    return:
      type: SuperOffice.License.ProductLicense
    content.vb: >-
      <Obsolete("Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class", True)>

      Public ReadOnly Property License As ProductLicense
  overload: SuperOffice.Security.Principal.SoPrincipal.License*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class
    - type: System.Boolean
      value: true
- uid: SuperOffice.Security.Principal.SoPrincipal.FullName
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.FullName
  id: FullName
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: FullName
  nameWithType: SoPrincipal.FullName
  fullName: SuperOffice.Security.Principal.SoPrincipal.FullName
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: The Person full name if the associate is a person. Use IsPerson to check
  example: []
  syntax:
    content: public string FullName { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property FullName As String
  overload: SuperOffice.Security.Principal.SoPrincipal.FullName*
- uid: SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  id: EMailAddress
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: EMailAddress
  nameWithType: SoPrincipal.EMailAddress
  fullName: SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: The Person e-mail address if the associate is a person. Use IsPerson to check
  example: []
  syntax:
    content: public string EMailAddress { get; }
    parameters: []
    return:
      type: System.String
    content.vb: Public ReadOnly Property EMailAddress As String
  overload: SuperOffice.Security.Principal.SoPrincipal.EMailAddress*
- uid: SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  id: IsSaintEnabled
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: IsSaintEnabled
  nameWithType: SoPrincipal.IsSaintEnabled
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  syntax:
    content: >-
      [Obsolete("Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class", true)]

      public bool IsSaintEnabled { get; }
    parameters: []
    return:
      type: System.Boolean
    content.vb: >-
      <Obsolete("Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class", True)>

      Public ReadOnly Property IsSaintEnabled As Boolean
  overload: SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled*
  attributes:
  - type: System.ObsoleteAttribute
    ctor: System.ObsoleteAttribute.#ctor(System.String,System.Boolean)
    arguments:
    - type: System.String
      value: Use one of the HasLicense() methods instead; standard license names are in the SoLicenseNames class
    - type: System.Boolean
      value: true
- uid: SuperOffice.Security.Principal.SoPrincipal.EjUserId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EjUserId
  id: EjUserId
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: EjUserId
  nameWithType: SoPrincipal.EjUserId
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjUserId
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Primary key in eJournal's old user table.
  example: []
  syntax:
    content: public int EjUserId { get; }
    parameters: []
    return:
      type: System.Int32
    content.vb: Public ReadOnly Property EjUserId As Integer
  overload: SuperOffice.Security.Principal.SoPrincipal.EjUserId*
- uid: SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  id: EjAccessLevel
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: EjAccessLevel
  nameWithType: SoPrincipal.EjAccessLevel
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: eJournal user access level
  example: []
  syntax:
    content: public EjAccess EjAccessLevel { get; }
    parameters: []
    return:
      type: SuperOffice.Data.EjAccess
    content.vb: Public ReadOnly Property EjAccessLevel As EjAccess
  overload: SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel*
- uid: SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  id: EjUserStatus
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: EjUserStatus
  nameWithType: SoPrincipal.EjUserStatus
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: eJournal user status
  example: []
  syntax:
    content: public EjUserStatus EjUserStatus { get; }
    parameters: []
    return:
      type: SuperOffice.Data.EjUserStatus
    content.vb: Public ReadOnly Property EjUserStatus As EjUserStatus
  overload: SuperOffice.Security.Principal.SoPrincipal.EjUserStatus*
- uid: SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  id: SecondaryGroups
  parent: SuperOffice.Security.Principal.SoPrincipal
  langs:
  - csharp
  - vb
  name: SecondaryGroups
  nameWithType: SoPrincipal.SecondaryGroups
  fullName: SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  type: Property
  assemblies:
  - SoCore
  namespace: SuperOffice.Security.Principal
  summary: Secondary user groups
  example: []
  syntax:
    content: public int[] SecondaryGroups { get; }
    parameters: []
    return:
      type: System.Int32[]
    content.vb: Public ReadOnly Property SecondaryGroups As Integer()
  overload: SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups*
references:
- uid: SuperOffice.Security.Principal
  commentId: N:SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Security.Principal
  nameWithType: SuperOffice.Security.Principal
  fullName: SuperOffice.Security.Principal
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Security
    name: Security
    isExternal: true
    href: SuperOffice.Security.html
  - name: .
  - uid: SuperOffice.Security.Principal
    name: Principal
    isExternal: true
    href: SuperOffice.Security.Principal.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: System.MarshalByRefObject
  commentId: T:System.MarshalByRefObject
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject
  name: MarshalByRefObject
  nameWithType: MarshalByRefObject
  fullName: System.MarshalByRefObject
- uid: System.Security.Principal.IPrincipal
  commentId: T:System.Security.Principal.IPrincipal
  parent: System.Security.Principal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.principal.iprincipal
  name: IPrincipal
  nameWithType: IPrincipal
  fullName: System.Security.Principal.IPrincipal
- uid: System.MarshalByRefObject.GetLifetimeService
  commentId: M:System.MarshalByRefObject.GetLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  name: GetLifetimeService()
  nameWithType: MarshalByRefObject.GetLifetimeService()
  fullName: System.MarshalByRefObject.GetLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.GetLifetimeService
    name: GetLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.getlifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.InitializeLifetimeService
  commentId: M:System.MarshalByRefObject.InitializeLifetimeService
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  name: InitializeLifetimeService()
  nameWithType: MarshalByRefObject.InitializeLifetimeService()
  fullName: System.MarshalByRefObject.InitializeLifetimeService()
  spec.csharp:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.InitializeLifetimeService
    name: InitializeLifetimeService
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.initializelifetimeservice
  - name: (
  - name: )
- uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  commentId: M:System.MarshalByRefObject.MemberwiseClone(System.Boolean)
  parent: System.MarshalByRefObject
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  name: MemberwiseClone(bool)
  nameWithType: MarshalByRefObject.MemberwiseClone(bool)
  fullName: System.MarshalByRefObject.MemberwiseClone(bool)
  nameWithType.vb: MarshalByRefObject.MemberwiseClone(Boolean)
  fullName.vb: System.MarshalByRefObject.MemberwiseClone(Boolean)
  name.vb: MemberwiseClone(Boolean)
  spec.csharp:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  - name: (
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
  spec.vb:
  - uid: System.MarshalByRefObject.MemberwiseClone(System.Boolean)
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.marshalbyrefobject.memberwiseclone
  - name: (
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.EnumUtil.MapEnums``2
  commentId: M:EnumUtil.MapEnums``2(``0)
  parent: EnumUtil
  definition: EnumUtil.MapEnums``2(``0)
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<SoPrincipal, To>(SoPrincipal)
  nameWithType: EnumUtil.MapEnums<SoPrincipal, To>(SoPrincipal)
  fullName: EnumUtil.MapEnums<SuperOffice.Security.Principal.SoPrincipal, To>(SuperOffice.Security.Principal.SoPrincipal)
  nameWithType.vb: EnumUtil.MapEnums(Of SoPrincipal, To)(SoPrincipal)
  fullName.vb: EnumUtil.MapEnums(Of SuperOffice.Security.Principal.SoPrincipal, To)(SuperOffice.Security.Principal.SoPrincipal)
  name.vb: MapEnums(Of SoPrincipal, To)(SoPrincipal)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.Principal.SoPrincipal)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(SuperOffice.Security.Principal.SoPrincipal)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  parent: SuperOffice.ErpSync.ConnectorWS.Converters
  definition: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<SoPrincipal, To>(SoPrincipal)
  nameWithType: Converters.MapEnums<SoPrincipal, To>(SoPrincipal)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<SuperOffice.Security.Principal.SoPrincipal, To>(SuperOffice.Security.Principal.SoPrincipal)
  nameWithType.vb: Converters.MapEnums(Of SoPrincipal, To)(SoPrincipal)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of SuperOffice.Security.Principal.SoPrincipal, To)(SuperOffice.Security.Principal.SoPrincipal)
  name.vb: MapEnums(Of SoPrincipal, To)(SoPrincipal)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.Principal.SoPrincipal)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(SuperOffice.Security.Principal.SoPrincipal)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid
  commentId: M:SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
  parent: SuperOffice.Security.Principal.SoPrincipalExtensions
  definition: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
  href: SuperOffice.Security.Principal.SoPrincipalExtensions.html#SuperOffice_Security_Principal_SoPrincipalExtensions_IsValid_SuperOffice_Security_Principal_SoPrincipal_
  name: IsValid(SoPrincipal)
  nameWithType: SoPrincipalExtensions.IsValid(SoPrincipal)
  fullName: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
    name: IsValid
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipalExtensions.html#SuperOffice_Security_Principal_SoPrincipalExtensions_IsValid_SuperOffice_Security_Principal_SoPrincipal_
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
    name: IsValid
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipalExtensions.html#SuperOffice_Security_Principal_SoPrincipalExtensions_IsValid_SuperOffice_Security_Principal_SoPrincipal_
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: System.Security.Principal
  commentId: N:System.Security.Principal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Security.Principal
  nameWithType: System.Security.Principal
  fullName: System.Security.Principal
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Principal
    name: Principal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.principal
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Security
    name: Security
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security
  - name: .
  - uid: System.Security.Principal
    name: Principal
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.principal
- uid: EnumUtil.MapEnums``2(``0)
  commentId: M:EnumUtil.MapEnums``2(``0)
  isExternal: true
  href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: EnumUtil.MapEnums<From, To>(From)
  fullName: EnumUtil.MapEnums<From, To>(From)
  nameWithType.vb: EnumUtil.MapEnums(Of From, To)(From)
  fullName.vb: EnumUtil.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: EnumUtil.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: EnumUtil.html#EnumUtil_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: EnumUtil
  commentId: T:EnumUtil
  isExternal: true
  href: EnumUtil.html
  name: EnumUtil
  nameWithType: EnumUtil
  fullName: EnumUtil
- uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  commentId: M:SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  name: MapEnums<From, To>(From)
  nameWithType: Converters.MapEnums<From, To>(From)
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums<From, To>(From)
  nameWithType.vb: Converters.MapEnums(Of From, To)(From)
  fullName.vb: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums(Of From, To)(From)
  name.vb: MapEnums(Of From, To)(From)
  spec.csharp:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: <
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: '>'
  - name: (
  - name: From
  - name: )
  spec.vb:
  - uid: SuperOffice.ErpSync.ConnectorWS.Converters.MapEnums``2(``0)
    name: MapEnums
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.Converters.html#SuperOffice_ErpSync_ConnectorWS_Converters_MapEnums__2___0_
  - name: (
  - name: Of
  - name: " "
  - name: From
  - name: ','
  - name: " "
  - name: To
  - name: )
  - name: (
  - name: From
  - name: )
- uid: SuperOffice.ErpSync.ConnectorWS.Converters
  commentId: T:SuperOffice.ErpSync.ConnectorWS.Converters
  parent: SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.ErpSync.ConnectorWS.Converters.html
  name: Converters
  nameWithType: Converters
  fullName: SuperOffice.ErpSync.ConnectorWS.Converters
- uid: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
  commentId: M:SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipalExtensions.html#SuperOffice_Security_Principal_SoPrincipalExtensions_IsValid_SuperOffice_Security_Principal_SoPrincipal_
  name: IsValid(SoPrincipal)
  nameWithType: SoPrincipalExtensions.IsValid(SoPrincipal)
  fullName: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
  spec.csharp:
  - uid: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
    name: IsValid
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipalExtensions.html#SuperOffice_Security_Principal_SoPrincipalExtensions_IsValid_SuperOffice_Security_Principal_SoPrincipal_
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
  spec.vb:
  - uid: SuperOffice.Security.Principal.SoPrincipalExtensions.IsValid(SuperOffice.Security.Principal.SoPrincipal)
    name: IsValid
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipalExtensions.html#SuperOffice_Security_Principal_SoPrincipalExtensions_IsValid_SuperOffice_Security_Principal_SoPrincipal_
  - name: (
  - uid: SuperOffice.Security.Principal.SoPrincipal
    name: SoPrincipal
    isExternal: true
    href: SuperOffice.Security.Principal.SoPrincipal.html
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipalExtensions
  commentId: T:SuperOffice.Security.Principal.SoPrincipalExtensions
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipalExtensions.html
  name: SoPrincipalExtensions
  nameWithType: SoPrincipalExtensions
  fullName: SuperOffice.Security.Principal.SoPrincipalExtensions
- uid: SuperOffice.ErpSync.ConnectorWS
  commentId: N:SuperOffice.ErpSync.ConnectorWS
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.ErpSync.ConnectorWS
  nameWithType: SuperOffice.ErpSync.ConnectorWS
  fullName: SuperOffice.ErpSync.ConnectorWS
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.ErpSync
    name: ErpSync
    isExternal: true
    href: SuperOffice.ErpSync.html
  - name: .
  - uid: SuperOffice.ErpSync.ConnectorWS
    name: ConnectorWS
    isExternal: true
    href: SuperOffice.ErpSync.ConnectorWS.html
- uid: SuperOffice.Security.Principal.SoPrincipal.#ctor*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.#ctor
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal__ctor_System_Collections_Generic_IEnumerable_System_Security_Claims_ClaimsIdentity__
  name: SoPrincipal
  nameWithType: SoPrincipal.SoPrincipal
  fullName: SuperOffice.Security.Principal.SoPrincipal.SoPrincipal
  nameWithType.vb: SoPrincipal.New
  fullName.vb: SuperOffice.Security.Principal.SoPrincipal.New
  name.vb: New
- uid: System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
  commentId: T:System.Collections.Generic.IEnumerable{System.Security.Claims.ClaimsIdentity}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.IEnumerable`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<ClaimsIdentity>
  nameWithType: IEnumerable<ClaimsIdentity>
  fullName: System.Collections.Generic.IEnumerable<System.Security.Claims.ClaimsIdentity>
  nameWithType.vb: IEnumerable(Of ClaimsIdentity)
  fullName.vb: System.Collections.Generic.IEnumerable(Of System.Security.Claims.ClaimsIdentity)
  name.vb: IEnumerable(Of ClaimsIdentity)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims.claimsidentity
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - uid: System.Security.Claims.ClaimsIdentity
    name: ClaimsIdentity
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.claims.claimsidentity
  - name: )
- uid: System.Collections.Generic.IEnumerable`1
  commentId: T:System.Collections.Generic.IEnumerable`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  name: IEnumerable<T>
  nameWithType: IEnumerable<T>
  fullName: System.Collections.Generic.IEnumerable<T>
  nameWithType.vb: IEnumerable(Of T)
  fullName.vb: System.Collections.Generic.IEnumerable(Of T)
  name.vb: IEnumerable(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.IEnumerable`1
    name: IEnumerable
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.ienumerable-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Collections.Generic
  commentId: N:System.Collections.Generic
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Collections.Generic
  nameWithType: System.Collections.Generic
  fullName: System.Collections.Generic
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Collections
    name: Collections
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections
  - name: .
  - uid: System.Collections.Generic
    name: Generic
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic
- uid: SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_SetAssociatePassword_System_String_
  name: SetAssociatePassword
  nameWithType: SoPrincipal.SetAssociatePassword
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetAssociatePassword
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInRole*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.IsInRole
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_IsInRole_System_String_
  name: IsInRole
  nameWithType: SoPrincipal.IsInRole
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInRole
- uid: System.Security.Principal.IPrincipal.IsInRole(System.String)
  commentId: M:System.Security.Principal.IPrincipal.IsInRole(System.String)
  parent: System.Security.Principal.IPrincipal
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.principal.iprincipal.isinrole
  name: IsInRole(string)
  nameWithType: IPrincipal.IsInRole(string)
  fullName: System.Security.Principal.IPrincipal.IsInRole(string)
  nameWithType.vb: IPrincipal.IsInRole(String)
  fullName.vb: System.Security.Principal.IPrincipal.IsInRole(String)
  name.vb: IsInRole(String)
  spec.csharp:
  - uid: System.Security.Principal.IPrincipal.IsInRole(System.String)
    name: IsInRole
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.principal.iprincipal.isinrole
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: System.Security.Principal.IPrincipal.IsInRole(System.String)
    name: IsInRole
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.security.principal.iprincipal.isinrole
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Security.SecurityException
  commentId: T:System.Security.SecurityException
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.security.securityexception
  name: SecurityException
  nameWithType: SecurityException
  fullName: System.Security.SecurityException
- uid: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetPrincipalCarrier
  name: GetPrincipalCarrier
  nameWithType: SoPrincipal.GetPrincipalCarrier
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetPrincipalCarrier
- uid: SuperOffice.CRM.Services.SoPrincipalCarrier
  commentId: T:SuperOffice.CRM.Services.SoPrincipalCarrier
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SoPrincipalCarrier.html
  name: SoPrincipalCarrier
  nameWithType: SoPrincipalCarrier
  fullName: SuperOffice.CRM.Services.SoPrincipalCarrier
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_SetPrincipalCarrier_SuperOffice_CRM_Services_SoPrincipalCarrier_
  name: SetPrincipalCarrier
  nameWithType: SoPrincipal.SetPrincipalCarrier
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetPrincipalCarrier
- uid: SuperOffice.Security.Principal.SoPrincipal.Authenticate*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.Authenticate
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_Authenticate
  name: Authenticate
  nameWithType: SoPrincipal.Authenticate
  fullName: SuperOffice.Security.Principal.SoPrincipal.Authenticate
- uid: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetSafeCredentials
  name: GetSafeCredentials
  nameWithType: SoPrincipal.GetSafeCredentials
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetSafeCredentials
- uid: SuperOffice.Security.Principal.SoCredentials
  commentId: T:SuperOffice.Security.Principal.SoCredentials
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoCredentials.html
  name: SoCredentials
  nameWithType: SoCredentials
  fullName: SuperOffice.Security.Principal.SoCredentials
- uid: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetAccessToken
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetAccessToken_System_String_System_Boolean_
  name: GetAccessToken
  nameWithType: SoPrincipal.GetAccessToken
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetAccessToken
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_IsInSameCompany_System_Int32_
  name: IsInSameCompany
  nameWithType: SoPrincipal.IsInSameCompany
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInSameCompany
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInCompany*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.IsInCompany
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_IsInCompany_System_Int32_
  name: IsInCompany
  nameWithType: SoPrincipal.IsInCompany
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInCompany
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInProject*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.IsInProject
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_IsInProject_System_Int32_
  name: IsInProject
  nameWithType: SoPrincipal.IsInProject
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInProject
- uid: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_IsInSameGroup_System_Int32_
  name: IsInSameGroup
  nameWithType: SoPrincipal.IsInSameGroup
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsInSameGroup
- uid: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetFunctionRights
  name: GetFunctionRights
  nameWithType: SoPrincipal.GetFunctionRights
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetFunctionRights
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.FunctionRightStrings
  commentId: T:SuperOffice.CRM.FunctionRightStrings
  isExternal: true
  href: SuperOffice.CRM.FunctionRightStrings.html
  name: FunctionRightStrings
  nameWithType: FunctionRightStrings
  fullName: SuperOffice.CRM.FunctionRightStrings
- uid: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HasFunctionRight_System_String_
  name: HasFunctionRight
  nameWithType: SoPrincipal.HasFunctionRight
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasFunctionRight
- uid: SuperOffice.License.SoLicenseNames
  commentId: T:SuperOffice.License.SoLicenseNames
  isExternal: true
  href: SuperOffice.License.SoLicenseNames.html
  name: SoLicenseNames
  nameWithType: SoLicenseNames
  fullName: SuperOffice.License.SoLicenseNames
- uid: SuperOffice.Security.Principal.SoPrincipal.HasLicense*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.HasLicense
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HasLicense_System_String_System_String_
  name: HasLicense
  nameWithType: SoPrincipal.HasLicense
  fullName: SuperOffice.Security.Principal.SoPrincipal.HasLicense
- uid: SuperOffice.Security.Principal.SoPrincipal.GetLicense*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetLicense
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetLicense_System_String_System_String_
  name: GetLicense
  nameWithType: SoPrincipal.GetLicense
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetLicense
- uid: SuperOffice.CRM.Services.GrantedModuleLicense
  commentId: T:SuperOffice.CRM.Services.GrantedModuleLicense
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.GrantedModuleLicense.html
  name: GrantedModuleLicense
  nameWithType: GrantedModuleLicense
  fullName: SuperOffice.CRM.Services.GrantedModuleLicense
- uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetGrantedLicensesAsString
  name: GetGrantedLicensesAsString
  nameWithType: SoPrincipal.GetGrantedLicensesAsString
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicensesAsString
- uid: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetGrantedLicenses
  name: GetGrantedLicenses
  nameWithType: SoPrincipal.GetGrantedLicenses
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetGrantedLicenses
- uid: System.Collections.Generic.List{SuperOffice.CRM.Services.GrantedModuleLicense}
  commentId: T:System.Collections.Generic.List{SuperOffice.CRM.Services.GrantedModuleLicense}
  parent: System.Collections.Generic
  definition: System.Collections.Generic.List`1
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<GrantedModuleLicense>
  nameWithType: List<GrantedModuleLicense>
  fullName: System.Collections.Generic.List<SuperOffice.CRM.Services.GrantedModuleLicense>
  nameWithType.vb: List(Of GrantedModuleLicense)
  fullName.vb: System.Collections.Generic.List(Of SuperOffice.CRM.Services.GrantedModuleLicense)
  name.vb: List(Of GrantedModuleLicense)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - uid: SuperOffice.CRM.Services.GrantedModuleLicense
    name: GrantedModuleLicense
    isExternal: true
    href: SuperOffice.CRM.Services.GrantedModuleLicense.html
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.GrantedModuleLicense
    name: GrantedModuleLicense
    isExternal: true
    href: SuperOffice.CRM.Services.GrantedModuleLicense.html
  - name: )
- uid: System.Collections.Generic.List`1
  commentId: T:System.Collections.Generic.List`1
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  name: List<T>
  nameWithType: List<T>
  fullName: System.Collections.Generic.List<T>
  nameWithType.vb: List(Of T)
  fullName.vb: System.Collections.Generic.List(Of T)
  name.vb: List(Of T)
  spec.csharp:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: <
  - name: T
  - name: '>'
  spec.vb:
  - uid: System.Collections.Generic.List`1
    name: List
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.collections.generic.list-1
  - name: (
  - name: Of
  - name: " "
  - name: T
  - name: )
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: SuperOffice.Security.Principal.SoPrincipal.ToString*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.ToString
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_ToString
  name: ToString
  nameWithType: SoPrincipal.ToString
  fullName: SuperOffice.Security.Principal.SoPrincipal.ToString
- uid: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.SetCachedItem
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_SetCachedItem_System_String_System_Object_System_Double_
  name: SetCachedItem
  nameWithType: SoPrincipal.SetCachedItem
  fullName: SuperOffice.Security.Principal.SoPrincipal.SetCachedItem
- uid: System.Double
  commentId: T:System.Double
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.double
  name: double
  nameWithType: double
  fullName: double
  nameWithType.vb: Double
  fullName.vb: Double
  name.vb: Double
- uid: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GetCachedItem
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GetCachedItem_System_String_
  name: GetCachedItem
  nameWithType: SoPrincipal.GetCachedItem
  fullName: SuperOffice.Security.Principal.SoPrincipal.GetCachedItem
- uid: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_RemoveCachedItem_System_String_
  name: RemoveCachedItem
  nameWithType: SoPrincipal.RemoveCachedItem
  fullName: SuperOffice.Security.Principal.SoPrincipal.RemoveCachedItem
- uid: SuperOffice.Security.Principal.SoPrincipal.ClearCache*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.ClearCache
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_ClearCache
  name: ClearCache
  nameWithType: SoPrincipal.ClearCache
  fullName: SuperOffice.Security.Principal.SoPrincipal.ClearCache
- uid: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_CacheKeyExist_System_String_
  name: CacheKeyExist
  nameWithType: SoPrincipal.CacheKeyExist
  fullName: SuperOffice.Security.Principal.SoPrincipal.CacheKeyExist
- uid: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_TryGetCachedItem_System_String_System_Object__
  name: TryGetCachedItem
  nameWithType: SoPrincipal.TryGetCachedItem
  fullName: SuperOffice.Security.Principal.SoPrincipal.TryGetCachedItem
- uid: SuperOffice.Security.Principal.SoPrincipal.Identities*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.Identities
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_Identities
  name: Identities
  nameWithType: SoPrincipal.Identities
  fullName: SuperOffice.Security.Principal.SoPrincipal.Identities
- uid: SuperOffice.Security.Principal.SoPrincipal.Identity*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.Identity
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_Identity
  name: Identity
  nameWithType: SoPrincipal.Identity
  fullName: SuperOffice.Security.Principal.SoPrincipal.Identity
- uid: SuperOffice.Security.Principal.ISoIdentity
  commentId: T:SuperOffice.Security.Principal.ISoIdentity
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.ISoIdentity.html
  name: ISoIdentity
  nameWithType: ISoIdentity
  fullName: SuperOffice.Security.Principal.ISoIdentity
- uid: SuperOffice.Security.Principal.SoPrincipal.TimeZone*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.TimeZone
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_TimeZone
  name: TimeZone
  nameWithType: SoPrincipal.TimeZone
  fullName: SuperOffice.Security.Principal.SoPrincipal.TimeZone
- uid: SuperOffice.Security.Principal.SoPrincipal.UserName*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.UserName
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_UserName
  name: UserName
  nameWithType: SoPrincipal.UserName
  fullName: SuperOffice.Security.Principal.SoPrincipal.UserName
- uid: SuperOffice.Security.Principal.SoPrincipal.UserType*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.UserType
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_UserType
  name: UserType
  nameWithType: SoPrincipal.UserType
  fullName: SuperOffice.Security.Principal.SoPrincipal.UserType
- uid: SuperOffice.License.UserType
  commentId: T:SuperOffice.License.UserType
  parent: SuperOffice.License
  isExternal: true
  name: UserType
  nameWithType: UserType
  fullName: SuperOffice.License.UserType
- uid: SuperOffice.License
  commentId: N:SuperOffice.License
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.License
  nameWithType: SuperOffice.License
  fullName: SuperOffice.License
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.License
    name: License
    isExternal: true
    href: SuperOffice.License.html
- uid: SuperOffice.Security.Principal.SoPrincipal.Associate*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.Associate
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_Associate
  name: Associate
  nameWithType: SoPrincipal.Associate
  fullName: SuperOffice.Security.Principal.SoPrincipal.Associate
- uid: SuperOffice.Security.Principal.SoPrincipal.AssociateId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.AssociateId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_AssociateId
  name: AssociateId
  nameWithType: SoPrincipal.AssociateId
  fullName: SuperOffice.Security.Principal.SoPrincipal.AssociateId
- uid: SuperOffice.Security.Principal.SoPrincipal.UserType
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.UserType
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_UserType
  name: UserType
  nameWithType: SoPrincipal.UserType
  fullName: SuperOffice.Security.Principal.SoPrincipal.UserType
- uid: SuperOffice.Security.Principal.SoPrincipal.CRM5Secret*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_CRM5Secret
  name: CRM5Secret
  nameWithType: SoPrincipal.CRM5Secret
  fullName: SuperOffice.Security.Principal.SoPrincipal.CRM5Secret
- uid: SuperOffice.Security.Principal.SoPrincipal
  commentId: T:SuperOffice.Security.Principal.SoPrincipal
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html
  name: SoPrincipal
  nameWithType: SoPrincipal
  fullName: SuperOffice.Security.Principal.SoPrincipal
- uid: SuperOffice.Security.Principal.SoPrincipal.IsPerson*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.IsPerson
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_IsPerson
  name: IsPerson
  nameWithType: SoPrincipal.IsPerson
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsPerson
- uid: SuperOffice.Security.Principal.SoPrincipal.PersonId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.PersonId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_PersonId
  name: PersonId
  nameWithType: SoPrincipal.PersonId
  fullName: SuperOffice.Security.Principal.SoPrincipal.PersonId
- uid: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HomeCountryId
  name: HomeCountryId
  nameWithType: SoPrincipal.HomeCountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
- uid: SuperOffice.Security.Principal.SoPrincipal.CountryId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.CountryId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_CountryId
  name: CountryId
  nameWithType: SoPrincipal.CountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.CountryId
- uid: SuperOffice.Security.Principal.SoPrincipal.CountryId
  commentId: P:SuperOffice.Security.Principal.SoPrincipal.CountryId
  parent: SuperOffice.Security.Principal.SoPrincipal
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_CountryId
  name: CountryId
  nameWithType: SoPrincipal.CountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.CountryId
- uid: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_HomeCountryId
  name: HomeCountryId
  nameWithType: SoPrincipal.HomeCountryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.HomeCountryId
- uid: SuperOffice.Security.Principal.SoPrincipal.ContactId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.ContactId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_ContactId
  name: ContactId
  nameWithType: SoPrincipal.ContactId
  fullName: SuperOffice.Security.Principal.SoPrincipal.ContactId
- uid: SuperOffice.Security.Principal.SoPrincipal.GroupId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.GroupId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_GroupId
  name: GroupId
  nameWithType: SoPrincipal.GroupId
  fullName: SuperOffice.Security.Principal.SoPrincipal.GroupId
- uid: SuperOffice.Security.Principal.SoPrincipal.BusinessId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.BusinessId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_BusinessId
  name: BusinessId
  nameWithType: SoPrincipal.BusinessId
  fullName: SuperOffice.Security.Principal.SoPrincipal.BusinessId
- uid: SuperOffice.Security.Principal.SoPrincipal.CategoryId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.CategoryId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_CategoryId
  name: CategoryId
  nameWithType: SoPrincipal.CategoryId
  fullName: SuperOffice.Security.Principal.SoPrincipal.CategoryId
- uid: SuperOffice.Security.Principal.SoPrincipal.ContactOwner*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.ContactOwner
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_ContactOwner
  name: ContactOwner
  nameWithType: SoPrincipal.ContactOwner
  fullName: SuperOffice.Security.Principal.SoPrincipal.ContactOwner
- uid: SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_DatabaseContextIdentifier
  name: DatabaseContextIdentifier
  nameWithType: SoPrincipal.DatabaseContextIdentifier
  fullName: SuperOffice.Security.Principal.SoPrincipal.DatabaseContextIdentifier
- uid: SuperOffice.Security.Principal.SoPrincipal.State*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.State
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_State
  name: State
  nameWithType: SoPrincipal.State
  fullName: SuperOffice.Security.Principal.SoPrincipal.State
- uid: SuperOffice.Security.Principal.AuthorizationState
  commentId: T:SuperOffice.Security.Principal.AuthorizationState
  parent: SuperOffice.Security.Principal
  isExternal: true
  href: SuperOffice.Security.Principal.AuthorizationState.html
  name: AuthorizationState
  nameWithType: AuthorizationState
  fullName: SuperOffice.Security.Principal.AuthorizationState
- uid: SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_CanCreateExternalPerson
  name: CanCreateExternalPerson
  nameWithType: SoPrincipal.CanCreateExternalPerson
  fullName: SuperOffice.Security.Principal.SoPrincipal.CanCreateExternalPerson
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.RoleId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_RoleId
  name: RoleId
  nameWithType: SoPrincipal.RoleId
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleId
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleName*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.RoleName
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_RoleName
  name: RoleName
  nameWithType: SoPrincipal.RoleName
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleName
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleDescription*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.RoleDescription
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_RoleDescription
  name: RoleDescription
  nameWithType: SoPrincipal.RoleDescription
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleDescription
- uid: SuperOffice.Security.Principal.SoPrincipal.RoleType*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.RoleType
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_RoleType
  name: RoleType
  nameWithType: SoPrincipal.RoleType
  fullName: SuperOffice.Security.Principal.SoPrincipal.RoleType
- uid: SuperOffice.Data.RoleType
  commentId: T:SuperOffice.Data.RoleType
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.RoleType.html
  name: RoleType
  nameWithType: RoleType
  fullName: SuperOffice.Data.RoleType
- uid: SuperOffice.Data
  commentId: N:SuperOffice.Data
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.Data
  nameWithType: SuperOffice.Data
  fullName: SuperOffice.Data
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.Data
    name: Data
    isExternal: true
    href: SuperOffice.Data.html
- uid: SuperOffice.Security.Principal.SoPrincipal.License*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.License
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_License
  name: License
  nameWithType: SoPrincipal.License
  fullName: SuperOffice.Security.Principal.SoPrincipal.License
- uid: SuperOffice.License.ProductLicense
  commentId: T:SuperOffice.License.ProductLicense
  parent: SuperOffice.License
  isExternal: true
  href: SuperOffice.License.ProductLicense.html
  name: ProductLicense
  nameWithType: ProductLicense
  fullName: SuperOffice.License.ProductLicense
- uid: SuperOffice.Security.Principal.SoPrincipal.FullName*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.FullName
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_FullName
  name: FullName
  nameWithType: SoPrincipal.FullName
  fullName: SuperOffice.Security.Principal.SoPrincipal.FullName
- uid: SuperOffice.Security.Principal.SoPrincipal.EMailAddress*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.EMailAddress
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_EMailAddress
  name: EMailAddress
  nameWithType: SoPrincipal.EMailAddress
  fullName: SuperOffice.Security.Principal.SoPrincipal.EMailAddress
- uid: SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_IsSaintEnabled
  name: IsSaintEnabled
  nameWithType: SoPrincipal.IsSaintEnabled
  fullName: SuperOffice.Security.Principal.SoPrincipal.IsSaintEnabled
- uid: SuperOffice.Security.Principal.SoPrincipal.EjUserId*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.EjUserId
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_EjUserId
  name: EjUserId
  nameWithType: SoPrincipal.EjUserId
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjUserId
- uid: SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_EjAccessLevel
  name: EjAccessLevel
  nameWithType: SoPrincipal.EjAccessLevel
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjAccessLevel
- uid: SuperOffice.Data.EjAccess
  commentId: T:SuperOffice.Data.EjAccess
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.EjAccess.html
  name: EjAccess
  nameWithType: EjAccess
  fullName: SuperOffice.Data.EjAccess
- uid: SuperOffice.Security.Principal.SoPrincipal.EjUserStatus*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_EjUserStatus
  name: EjUserStatus
  nameWithType: SoPrincipal.EjUserStatus
  fullName: SuperOffice.Security.Principal.SoPrincipal.EjUserStatus
- uid: SuperOffice.Data.EjUserStatus
  commentId: T:SuperOffice.Data.EjUserStatus
  parent: SuperOffice.Data
  isExternal: true
  href: SuperOffice.Data.EjUserStatus.html
  name: EjUserStatus
  nameWithType: EjUserStatus
  fullName: SuperOffice.Data.EjUserStatus
- uid: SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups*
  commentId: Overload:SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
  isExternal: true
  href: SuperOffice.Security.Principal.SoPrincipal.html#SuperOffice_Security_Principal_SoPrincipal_SecondaryGroups
  name: SecondaryGroups
  nameWithType: SoPrincipal.SecondaryGroups
  fullName: SuperOffice.Security.Principal.SoPrincipal.SecondaryGroups
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
