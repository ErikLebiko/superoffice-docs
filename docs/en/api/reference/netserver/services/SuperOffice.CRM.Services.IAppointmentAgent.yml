### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IAppointmentAgent
  commentId: T:SuperOffice.CRM.Services.IAppointmentAgent
  id: IAppointmentAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IAppointmentAgent.Accept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  - SuperOffice.CRM.Services.IAppointmentAgent.AssignTo(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays(SuperOffice.CRM.Services.AppointmentEntity)
  - SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted(System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID(SuperOffice.CRM.Services.AppointmentEntity,System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType(SuperOffice.Data.TaskType)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate(SuperOffice.Data.TaskType,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate(System.DateTime)
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity
  - SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem
  - SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem(System.Int32,System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.Delete(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  - SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms(System.Boolean,System.Boolean,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID(System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList(System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary(System.Int32[],System.DateTime,System.DateTime)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo(System.Int32[],System.DateTime,System.DateTime)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates(System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments(System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary(System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments(System.DateTime,System.DateTime)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale(System.Int32,System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments(System.Int32[])
  - SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems(System.Boolean)
  - SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IAppointmentAgent.Move(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.Reject(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  - SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.Save(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity(SuperOffice.CRM.Services.SuggestedAppointmentEntity)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem(SuperOffice.CRM.Services.TaskListItem)
  - SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus(System.String[],SuperOffice.Data.ActivityStatus)
  - SuperOffice.CRM.Services.IAppointmentAgent.SetSeen(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities(System.String[])
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity(System.String)
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities(System.String[])
  - SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus(System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse(System.String,System.IO.Stream)
  - SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  - SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[])
  - SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail(SuperOffice.CRM.Services.AppointmentEntity)
  langs:
  - csharp
  - vb
  name: IAppointmentAgent
  nameWithType: IAppointmentAgent
  fullName: SuperOffice.CRM.Services.IAppointmentAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Appointment Agent

    Collection of all services that works with Appointment data.
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (AppointmentAgent agent = new AppointmentAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Appointment Agent", "Interface for the Appointment Agent. Collection of all services that works with Appointment data.")]

      public interface IAppointmentAgent : IAgent
    content.vb: >-
      <Agent("Appointment Agent", "Interface for the Appointment Agent. Collection of all services that works with Appointment data.")>

      Public Interface IAppointmentAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Appointment Agent
    - type: System.String
      value: Interface for the Appointment Agent. Collection of all services that works with Appointment data.
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity
  id: CreateDefaultAppointmentEntity
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntity()
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntity()
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new AppointmentEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: AppointmentEntity CreateDefaultAppointmentEntity()
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: New AppointmentEntity with default values
    content.vb: Function CreateDefaultAppointmentEntity() As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  id: SaveAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveAppointmentEntity(AppointmentEntity)
  nameWithType: IAppointmentAgent.SaveAppointmentEntity(AppointmentEntity)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing AppointmentEntity or creates a new AppointmentEntity if the id parameter is empty
  example: []
  syntax:
    content: AppointmentEntity SaveAppointmentEntity(AppointmentEntity appointmentEntity)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The AppointmentEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: New or updated AppointmentEntity
    content.vb: Function SaveAppointmentEntity(appointmentEntity As AppointmentEntity) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity(System.Int32)
  id: DeleteAppointmentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeleteAppointmentEntity(int)
  nameWithType: IAppointmentAgent.DeleteAppointmentEntity(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes the AppointmentEntity
  example: []
  syntax:
    content: void DeleteAppointmentEntity(int appointmentEntityId)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identity of the AppointmentEntity
    content.vb: Sub DeleteAppointmentEntity(appointmentEntityId As Integer)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity*
  nameWithType.vb: IAppointmentAgent.DeleteAppointmentEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity(Integer)
  name.vb: DeleteAppointmentEntity(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity
  id: CreateDefaultSuggestedAppointmentEntity
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSuggestedAppointmentEntity()
  nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity()
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new SuggestedAppointmentEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: SuggestedAppointmentEntity CreateDefaultSuggestedAppointmentEntity()
    return:
      type: SuperOffice.CRM.Services.SuggestedAppointmentEntity
      description: New SuggestedAppointmentEntity with default values
    content.vb: Function CreateDefaultSuggestedAppointmentEntity() As SuggestedAppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity(SuperOffice.CRM.Services.SuggestedAppointmentEntity)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity(SuperOffice.CRM.Services.SuggestedAppointmentEntity)
  id: SaveSuggestedAppointmentEntity(SuperOffice.CRM.Services.SuggestedAppointmentEntity)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveSuggestedAppointmentEntity(SuggestedAppointmentEntity)
  nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntity(SuggestedAppointmentEntity)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity(SuperOffice.CRM.Services.SuggestedAppointmentEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing SuggestedAppointmentEntity or creates a new SuggestedAppointmentEntity if the id parameter is empty
  example: []
  syntax:
    content: SuggestedAppointmentEntity SaveSuggestedAppointmentEntity(SuggestedAppointmentEntity suggestedAppointmentEntity)
    parameters:
    - id: suggestedAppointmentEntity
      type: SuperOffice.CRM.Services.SuggestedAppointmentEntity
      description: The SuggestedAppointmentEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.SuggestedAppointmentEntity
      description: New or updated SuggestedAppointmentEntity
    content.vb: Function SaveSuggestedAppointmentEntity(suggestedAppointmentEntity As SuggestedAppointmentEntity) As SuggestedAppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem
  id: CreateDefaultTaskListItem
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTaskListItem()
  nameWithType: IAppointmentAgent.CreateDefaultTaskListItem()
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new TaskListItem.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: TaskListItem CreateDefaultTaskListItem()
    return:
      type: SuperOffice.CRM.Services.TaskListItem
      description: New TaskListItem with default values
    content.vb: Function CreateDefaultTaskListItem() As TaskListItem
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem(SuperOffice.CRM.Services.TaskListItem)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem(SuperOffice.CRM.Services.TaskListItem)
  id: SaveTaskListItem(SuperOffice.CRM.Services.TaskListItem)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveTaskListItem(TaskListItem)
  nameWithType: IAppointmentAgent.SaveTaskListItem(TaskListItem)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem(SuperOffice.CRM.Services.TaskListItem)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing TaskListItem or creates a new TaskListItem if the id parameter is empty
  example: []
  syntax:
    content: TaskListItem SaveTaskListItem(TaskListItem taskListItem)
    parameters:
    - id: taskListItem
      type: SuperOffice.CRM.Services.TaskListItem
      description: The TaskListItem that is saved.
    return:
      type: SuperOffice.CRM.Services.TaskListItem
      description: New or updated TaskListItem
    content.vb: Function SaveTaskListItem(taskListItem As TaskListItem) As TaskListItem
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment(System.Int32)
  id: GetAppointment(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointment(int)
  nameWithType: IAppointmentAgent.GetAppointment(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a Appointment object.
  example: []
  syntax:
    content: Appointment GetAppointment(int appointmentId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The identifier of the Appointment object
    return:
      type: SuperOffice.CRM.Services.Appointment
      description: Appointment
    content.vb: Function GetAppointment(appointmentId As Integer) As Appointment
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment*
  nameWithType.vb: IAppointmentAgent.GetAppointment(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment(Integer)
  name.vb: GetAppointment(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus(System.Int32)
  id: ToggleAppointmentStatus(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAppointmentStatus(int)
  nameWithType: IAppointmentAgent.ToggleAppointmentStatus(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets an appointment's status to Completed if the appointment had a different status, or sets the status to started if already set to completed.
  example: []
  syntax:
    content: AppointmentStatus ToggleAppointmentStatus(int appointmentId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id.
    return:
      type: SuperOffice.Data.AppointmentStatus
      description: The new AppointmentStatus
    content.vb: Function ToggleAppointmentStatus(appointmentId As Integer) As AppointmentStatus
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus*
  nameWithType.vb: IAppointmentAgent.ToggleAppointmentStatus(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus(Integer)
  name.vb: ToggleAppointmentStatus(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity(System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity(System.String)
  id: ToggleActivity(System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivity(string)
  nameWithType: IAppointmentAgent.ToggleActivity(string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggle the completed status for an activity. Activity may be sale, document or appointment. The changes are saved immediately.
  example: []
  syntax:
    content: ActivityStatus ToggleActivity(string activityIdentifier)
    parameters:
    - id: activityIdentifier
      type: System.String
      description: May contain of a mix of appointment_id, sale_id, document_id and todo_id
    return:
      type: SuperOffice.Data.ActivityStatus
      description: What the result after toggling was.
    content.vb: Function ToggleActivity(activityIdentifier As String) As ActivityStatus
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity*
  nameWithType.vb: IAppointmentAgent.ToggleActivity(String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity(String)
  name.vb: ToggleActivity(String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities(System.String[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities(System.String[])
  id: ToggleActivities(System.String[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleActivities(string[])
  nameWithType: IAppointmentAgent.ToggleActivities(string[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities(string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggle the completed status for an array of activities.
  example: []
  syntax:
    content: ActivityStatus ToggleActivities(string[] activityIdentifier)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Contain of a mix of appointment_id, sale_id, document_id and todo_id.
    return:
      type: SuperOffice.Data.ActivityStatus
      description: The resulting ActivityStatus of the first in the array
    content.vb: Function ToggleActivities(activityIdentifier As String()) As ActivityStatus
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities*
  nameWithType.vb: IAppointmentAgent.ToggleActivities(String())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities(String())
  name.vb: ToggleActivities(String())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus(System.String[],SuperOffice.Data.ActivityStatus)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus(System.String[],SuperOffice.Data.ActivityStatus)
  id: SetActivityStatus(System.String[],SuperOffice.Data.ActivityStatus)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetActivityStatus(string[], ActivityStatus)
  nameWithType: IAppointmentAgent.SetActivityStatus(string[], ActivityStatus)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus(string[], SuperOffice.Data.ActivityStatus)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets the completed status for an array of activities. The string activityIdentifier param may contain of a mix of appointment_id, sale_id, document_id and todo_id. The changes are saved immediately. If an invalid id is passed in (nonexistent record), no changes will be made. If there is no write access to the record being changed, a Sentry exception will be thrown in the usual manner.
  example: []
  syntax:
    content: void SetActivityStatus(string[] activityIdentifier, ActivityStatus activityStatus)
    parameters:
    - id: activityIdentifier
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    - id: activityStatus
      type: SuperOffice.Data.ActivityStatus
      description: The status to set the activities
    content.vb: Sub SetActivityStatus(activityIdentifier As String(), activityStatus As ActivityStatus)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus*
  nameWithType.vb: IAppointmentAgent.SetActivityStatus(String(), ActivityStatus)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus(String(), SuperOffice.Data.ActivityStatus)
  name.vb: SetActivityStatus(String(), ActivityStatus)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities(System.String[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities(System.String[])
  id: ToggleAndSetActivities(System.String[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ToggleAndSetActivities(string[])
  nameWithType: IAppointmentAgent.ToggleAndSetActivities(string[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities(string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Toggles the first activity and sets the rest of the activities to the result of the first toggle. However, there are some special rules for appointments that trigger a suggested appointment when they are completed. If more than one appointment in the set of identifiers triggers a suggestion, we will not toggle those appointments. This rule is only active when changing the status of an appointment to complete. There must be more than one appointment that triggers such an event for this rule to take effect.
  example: []
  syntax:
    content: string[] ToggleAndSetActivities(string[] activityIdentifiers)
    parameters:
    - id: activityIdentifiers
      type: System.String[]
      description: Array of activity ids. ex. appointment_id=666
    return:
      type: System.String[]
      description: The identifiers that were not toggled.
    content.vb: Function ToggleAndSetActivities(activityIdentifiers As String()) As String()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities*
  nameWithType.vb: IAppointmentAgent.ToggleAndSetActivities(String())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities(String())
  name.vb: ToggleAndSetActivities(String())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity(System.Int32)
  id: GetAppointmentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEntity(int)
  nameWithType: IAppointmentAgent.GetAppointmentEntity(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a AppointmentEntity object.
  example: []
  syntax:
    content: AppointmentEntity GetAppointmentEntity(int appointmentEntityId)
    parameters:
    - id: appointmentEntityId
      type: System.Int32
      description: The identifier of the AppointmentEntity object
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: AppointmentEntity
    content.vb: Function GetAppointmentEntity(appointmentEntityId As Integer) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity*
  nameWithType.vb: IAppointmentAgent.GetAppointmentEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity(Integer)
  name.vb: GetAppointmentEntity(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType(SuperOffice.Data.TaskType)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType(SuperOffice.Data.TaskType)
  id: CreateDefaultAppointmentEntityByType(SuperOffice.Data.TaskType)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByType(TaskType)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByType(TaskType)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType(SuperOffice.Data.TaskType)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates an AppointmentEntity populated with the default values for the specific type.
  example: []
  syntax:
    content: AppointmentEntity CreateDefaultAppointmentEntityByType(TaskType type)
    parameters:
    - id: type
      type: SuperOffice.Data.TaskType
      description: The type of task requested.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: AppointmentEntity with default values.
    content.vb: Function CreateDefaultAppointmentEntityByType(type As TaskType) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting(System.Int32,System.Int32)
  id: CreateAppointmentEntityFromExisting(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentEntityFromExisting(int, int)
  nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExisting(int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates an AppointmentEntity populated with values from an existing appointment. The new appointment will get the same task type and participant list as the source appointment. The date of the new appointment will be set to today, but the time component is kept.
  example: []
  syntax:
    content: AppointmentEntity CreateAppointmentEntityFromExisting(int appointmentId, int associateId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: Source appointment ID
    - id: associateId
      type: System.Int32
      description: Associate owning the new appointment. If 0 the current associate is used.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: AppointmentEntity with values copied from an existing appointment. Values that are not copied will be the default values.
    content.vb: Function CreateAppointmentEntityFromExisting(appointmentId As Integer, associateId As Integer) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting*
  nameWithType.vb: IAppointmentAgent.CreateAppointmentEntityFromExisting(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting(Integer, Integer)
  name.vb: CreateAppointmentEntityFromExisting(Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Accept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.Accept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  id: Accept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: Accept(int, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.Accept(int, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Accept(int, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accepting an appointment invitation.
  example: []
  syntax:
    content: void Accept(int appointmentId, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub Accept(appointmentId As Integer, updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.Accept*
  nameWithType.vb: IAppointmentAgent.Accept(Integer, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.Accept(Integer, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: Accept(Integer, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  id: CreateAndAccept(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAccept(int, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.CreateAndAccept(int, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept(int, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creating an appointment from an emailItem invitation and accepting it.
  example: []
  syntax:
    content: void CreateAndAccept(int emailItemId, RecurrenceUpdateMode updateMode)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub CreateAndAccept(emailItemId As Integer, updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept*
  nameWithType.vb: IAppointmentAgent.CreateAndAccept(Integer, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept(Integer, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: CreateAndAccept(Integer, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  id: AcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithEmailConfirmation(int, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.AcceptWithEmailConfirmation(int, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation(int, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accepting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: void AcceptWithEmailConfirmation(int appointmentId, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub AcceptWithEmailConfirmation(appointmentId As Integer, updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation*
  nameWithType.vb: IAppointmentAgent.AcceptWithEmailConfirmation(Integer, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation(Integer, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: AcceptWithEmailConfirmation(Integer, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  id: CreateAndAcceptWithEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAndAcceptWithEmailConfirmation(int, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmation(int, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation(int, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creating an appointment from an emailItem invitation and accepting it with email confirmation to the meeting organizer.
  example: []
  syntax:
    content: void CreateAndAcceptWithEmailConfirmation(int emailItemId, RecurrenceUpdateMode updateMode)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub CreateAndAcceptWithEmailConfirmation(emailItemId As Integer, updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation*
  nameWithType.vb: IAppointmentAgent.CreateAndAcceptWithEmailConfirmation(Integer, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation(Integer, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: CreateAndAcceptWithEmailConfirmation(Integer, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Reject(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.Reject(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  id: Reject(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: Reject(int, string, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.Reject(int, string, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Reject(int, string, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Rejecting an appointment invitation
  example: []
  syntax:
    content: void Reject(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub Reject(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.Reject*
  nameWithType.vb: IAppointmentAgent.Reject(Integer, String, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.Reject(Integer, String, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: Reject(Integer, String, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  id: RejectWithEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithEmailConfirmation(int, string, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.RejectWithEmailConfirmation(int, string, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation(int, string, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Rejecting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: void RejectWithEmailConfirmation(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub RejectWithEmailConfirmation(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation*
  nameWithType.vb: IAppointmentAgent.RejectWithEmailConfirmation(Integer, String, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation(Integer, String, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: RejectWithEmailConfirmation(Integer, String, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem(System.Int32,System.String)
  id: DeclineInvitationFromEmailItem(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: DeclineInvitationFromEmailItem(int, string)
  nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItem(int, string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Declining an appointment invitation where no tentative appointments have been created.
  example: []
  syntax:
    content: void DeclineInvitationFromEmailItem(int emailItemId, string rejectReason)
    parameters:
    - id: emailItemId
      type: System.Int32
      description: The emailItemId.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    content.vb: Sub DeclineInvitationFromEmailItem(emailItemId As Integer, rejectReason As String)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem*
  nameWithType.vb: IAppointmentAgent.DeclineInvitationFromEmailItem(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem(Integer, String)
  name.vb: DeclineInvitationFromEmailItem(Integer, String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName(System.Int32)
  id: GetOrganizerName(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetOrganizerName(int)
  nameWithType: IAppointmentAgent.GetOrganizerName(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Lookup the name / email of an event-organizer
  example: []
  syntax:
    content: string GetOrganizerName(int motherAppointmentId)
    parameters:
    - id: motherAppointmentId
      type: System.Int32
      description: The id of the mother-appointment.
    return:
      type: System.String
      description: 'The displayed name of the organizer: name or email'
    content.vb: Function GetOrganizerName(motherAppointmentId As Integer) As String
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName*
  nameWithType.vb: IAppointmentAgent.GetOrganizerName(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName(Integer)
  name.vb: GetOrganizerName(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Save(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.Save(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  id: Save(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: Save(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo)
  nameWithType: IAppointmentAgent.Save(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Save(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Saving a booking.
  example: []
  syntax:
    content: AppointmentEntity Save(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: Updated AppointmentEntity
    content.vb: Function Save(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.Save*
  nameWithType.vb: IAppointmentAgent.Save(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.Save(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo)
  name.vb: Save(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Delete(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.Delete(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  id: Delete(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: Delete(int, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo)
  nameWithType: IAppointmentAgent.Delete(int, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Delete(int, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deleting a booking
  example: []
  syntax:
    content: void Delete(int appointmentId, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    content.vb: Sub Delete(appointmentId As Integer, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.Delete*
  nameWithType.vb: IAppointmentAgent.Delete(Integer, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.Delete(Integer, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo)
  name.vb: Delete(Integer, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays(SuperOffice.CRM.Services.AppointmentEntity)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays(SuperOffice.CRM.Services.AppointmentEntity)
  id: CalculateDays(SuperOffice.CRM.Services.AppointmentEntity)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CalculateDays(AppointmentEntity)
  nameWithType: IAppointmentAgent.CalculateDays(AppointmentEntity)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays(SuperOffice.CRM.Services.AppointmentEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Calculates the set of dates that represents a recurrence pattern. Adds conflict information to each date.
  example: []
  syntax:
    content: RecurrenceInfo CalculateDays(AppointmentEntity appointmentEntity)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
      description: ''
    content.vb: Function CalculateDays(appointmentEntity As AppointmentEntity) As RecurrenceInfo
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[])
  id: ValidateDays(SuperOffice.CRM.Services.AppointmentEntity,System.DateTime[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateDays(AppointmentEntity, DateTime[])
  nameWithType: IAppointmentAgent.ValidateDays(AppointmentEntity, DateTime[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays(SuperOffice.CRM.Services.AppointmentEntity, System.DateTime[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Validates the set of dates to calculate any conflicts.
  example: []
  syntax:
    content: RecurrenceDate[] ValidateDays(AppointmentEntity appointmentEntity, DateTime[] dates)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: dates
      type: System.DateTime[]
      description: The dates to validate.
    return:
      type: SuperOffice.CRM.Services.RecurrenceDate[]
      description: Array of RecurrenceDate object for each validated date.
    content.vb: Function ValidateDays(appointmentEntity As AppointmentEntity, dates As Date()) As RecurrenceDate()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays*
  nameWithType.vb: IAppointmentAgent.ValidateDays(AppointmentEntity, Date())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays(SuperOffice.CRM.Services.AppointmentEntity, Date())
  name.vb: ValidateDays(AppointmentEntity, Date())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence
  id: CreateDefaultRecurrence
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrence()
  nameWithType: IAppointmentAgent.CreateDefaultRecurrence()
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a RecurrenceInfo object populated with the default values for the specific type.
  example: []
  syntax:
    content: RecurrenceInfo CreateDefaultRecurrence()
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
      description: RecurrenceInfo object with default values.
    content.vb: Function CreateDefaultRecurrence() As RecurrenceInfo
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AssignTo(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AssignTo(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode)
  id: AssignTo(System.Int32,SuperOffice.CRM.Services.ParticipantInfo,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AssignTo(int, ParticipantInfo, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.AssignTo(int, ParticipantInfo, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AssignTo(int, SuperOffice.CRM.Services.ParticipantInfo, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Assigning an appointment to another person.
  example: []
  syntax:
    content: AppointmentEntity AssignTo(int appointmentId, ParticipantInfo participant, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: participant
      type: SuperOffice.CRM.Services.ParticipantInfo
      description: ''
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: Updated AppointmentEntity
    content.vb: Function AssignTo(appointmentId As Integer, participant As ParticipantInfo, updateMode As RecurrenceUpdateMode) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AssignTo*
  nameWithType.vb: IAppointmentAgent.AssignTo(Integer, ParticipantInfo, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AssignTo(Integer, SuperOffice.CRM.Services.ParticipantInfo, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: AssignTo(Integer, ParticipantInfo, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeen(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SetSeen(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  id: SetSeen(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeen(int, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.SetSeen(int, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeen(int, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets an appointment invitiation to seen.
  example: []
  syntax:
    content: void SetSeen(int appointmentId, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub SetSeen(appointmentId As Integer, updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SetSeen*
  nameWithType.vb: IAppointmentAgent.SetSeen(Integer, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SetSeen(Integer, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: SetSeen(Integer, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  id: SetSeenMany(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SetSeenMany(int[], RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.SetSeenMany(int[], RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany(int[], SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets a list of appointment invitations to seen. The same update mode will be used for all appointments in this batch.
  example: []
  syntax:
    content: void SetSeenMany(int[] appointmentIds, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    content.vb: Sub SetSeenMany(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany*
  nameWithType.vb: IAppointmentAgent.SetSeenMany(Integer(), RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany(Integer(), SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: SetSeenMany(Integer(), RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Move(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.Move(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode)
  id: Move(System.Int32,System.DateTime,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: Move(int, DateTime, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.Move(int, DateTime, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Move(int, System.DateTime, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Moving a booking to another start time.
  example: []
  syntax:
    content: AppointmentEntity Move(int appointmentId, DateTime newStartTime, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: newStartTime
      type: System.DateTime
      description: The new start time for the moved booking.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: Updated AppointmentEntity
    content.vb: Function Move(appointmentId As Integer, newStartTime As Date, updateMode As RecurrenceUpdateMode) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.Move*
  nameWithType.vb: IAppointmentAgent.Move(Integer, Date, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.Move(Integer, Date, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: Move(Integer, Date, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  id: AcceptRejected(System.Int32,SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptRejected(int, RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.AcceptRejected(int, RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected(int, SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accept that an invited participant has rejected your invitation or assignment.
  example: []
  syntax:
    content: AppointmentEntity AcceptRejected(int appointmentId, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: Updated AppointmentEntity
    content.vb: Function AcceptRejected(appointmentId As Integer, updateMode As RecurrenceUpdateMode) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected*
  nameWithType.vb: IAppointmentAgent.AcceptRejected(Integer, RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected(Integer, SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: AcceptRejected(Integer, RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate(System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate(System.DateTime)
  id: CreateDefaultRecurrenceByDate(System.DateTime)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultRecurrenceByDate(DateTime)
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDate(DateTime)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate(System.DateTime)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a RecurrenceInfo object populated with the default values for the specific type. Using startDate as start date for the recurreing pattern.
  example: []
  syntax:
    content: RecurrenceInfo CreateDefaultRecurrenceByDate(DateTime startDate)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Date of which the recurring pattern should start.
    return:
      type: SuperOffice.CRM.Services.RecurrenceInfo
      description: ''
    content.vb: Function CreateDefaultRecurrenceByDate(startDate As Date) As RecurrenceInfo
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate*
  nameWithType.vb: IAppointmentAgent.CreateDefaultRecurrenceByDate(Date)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate(Date)
  name.vb: CreateDefaultRecurrenceByDate(Date)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted(System.Int32[])
  id: CleanUpBookingDeleted(System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeleted(int[])
  nameWithType: IAppointmentAgent.CleanUpBookingDeleted(int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all appointments(within the appointmentIds array) with status BookingDeleted.
  example: []
  syntax:
    content: int CleanUpBookingDeleted(int[] appointmentIds)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: ''
    return:
      type: System.Int32
      description: Number of modified or deleted appointments
    content.vb: Function CleanUpBookingDeleted(appointmentIds As Integer()) As Integer
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted*
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeleted(Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted(Integer())
  name.vb: CleanUpBookingDeleted(Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  id: CleanUpBookingDeletedWithUpdateMode(System.Int32[],SuperOffice.Data.RecurrenceUpdateMode)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpBookingDeletedWithUpdateMode(int[], RecurrenceUpdateMode)
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode(int[], RecurrenceUpdateMode)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode(int[], SuperOffice.Data.RecurrenceUpdateMode)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all appointments(within the appointmentIds array) with status BookingDeleted. All appointments in the list will be deleted using the same recurrence update mode.
  example: []
  syntax:
    content: void CleanUpBookingDeletedWithUpdateMode(int[] appointmentIds, RecurrenceUpdateMode updateMode)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: List of appointment IDs
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode
    content.vb: Sub CleanUpBookingDeletedWithUpdateMode(appointmentIds As Integer(), updateMode As RecurrenceUpdateMode)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode*
  nameWithType.vb: IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode(Integer(), RecurrenceUpdateMode)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode(Integer(), SuperOffice.Data.RecurrenceUpdateMode)
  name.vb: CleanUpBookingDeletedWithUpdateMode(Integer(), RecurrenceUpdateMode)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted
  id: CleanUpRecurringBookingDeleted
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CleanUpRecurringBookingDeleted()
  nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeleted()
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all appointments with status BookingDeleted and for in logged user.
  example: []
  syntax:
    content: int CleanUpRecurringBookingDeleted()
    return:
      type: System.Int32
      description: ''
    content.vb: Function CleanUpRecurringBookingDeleted() As Integer
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate(SuperOffice.Data.TaskType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate(SuperOffice.Data.TaskType,System.Int32)
  id: CreateDefaultAppointmentEntityByTypeAndAssociate(SuperOffice.Data.TaskType,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityByTypeAndAssociate(TaskType, int)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate(TaskType, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate(SuperOffice.Data.TaskType, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a AppointmentEntity populated with the default values for the specific type and owner.
  example: []
  syntax:
    content: AppointmentEntity CreateDefaultAppointmentEntityByTypeAndAssociate(TaskType type, int associateId)
    parameters:
    - id: type
      type: SuperOffice.Data.TaskType
      description: The type of task requested.
    - id: associateId
      type: System.Int32
      description: The associateId of the appointment owner.
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: AppointmentEntity with default values.
    content.vb: Function CreateDefaultAppointmentEntityByTypeAndAssociate(type As TaskType, associateId As Integer) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate*
  nameWithType.vb: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate(TaskType, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate(SuperOffice.Data.TaskType, Integer)
  name.vb: CreateDefaultAppointmentEntityByTypeAndAssociate(TaskType, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates(System.Int32[])
  id: GetCanInsertForAssociates(System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetCanInsertForAssociates(int[])
  nameWithType: IAppointmentAgent.GetCanInsertForAssociates(int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check if current associate can create appointments in the diary of other associates.
  example: []
  syntax:
    content: bool[] GetCanInsertForAssociates(int[] associateIds)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: Array of associate ids to check for.
    return:
      type: System.Boolean[]
      description: Returns an array of bool corresponding to the associate array input parameter.
    content.vb: Function GetCanInsertForAssociates(associateIds As Integer()) As Boolean()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates*
  nameWithType.vb: IAppointmentAgent.GetCanInsertForAssociates(Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates(Integer())
  name.vb: GetCanInsertForAssociates(Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail(System.Int32)
  id: GetAppointmentHaveParticipantsWithEmail(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentHaveParticipantsWithEmail(int)
  nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: GetAppointmentHaveParticipantsWithEmail will check if any of the participants is marked to receive emails on this appointment. If no participants are defined, false will be returned.
  example: []
  syntax:
    content: bool GetAppointmentHaveParticipantsWithEmail(int appointmentId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId.
    return:
      type: System.Boolean
      description: Return true or false.
    content.vb: Function GetAppointmentHaveParticipantsWithEmail(appointmentId As Integer) As Boolean
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail*
  nameWithType.vb: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail(Integer)
  name.vb: GetAppointmentHaveParticipantsWithEmail(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: CreateDefaultAppointmentEntityFromSaleSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromSaleSuggestion(int, int, bool, int)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion(int, int, bool, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion(int, int, bool, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates an appointment based on a suggested appointment.
  example: []
  syntax:
    content: AppointmentEntity CreateDefaultAppointmentEntityFromSaleSuggestion(int suggestedAppointmentId, int saleId, bool createNow, int ownerId)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The id of the suggested appointment
    - id: saleId
      type: System.Int32
      description: This is the id of the sale the appointment is connected to. This will be used to give the appointment it's starting date. If the id is 0 or invalid, we assume the start date is now
    - id: createNow
      type: System.Boolean
      description: If this parameter is true, we override the suggested start time and create the appointment with the current date and time
    - id: ownerId
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The newly created appointment
    content.vb: Function CreateDefaultAppointmentEntityFromSaleSuggestion(suggestedAppointmentId As Integer, saleId As Integer, createNow As Boolean, ownerId As Integer) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion*
  nameWithType.vb: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion(Integer, Integer, Boolean, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion(Integer, Integer, Boolean, Integer)
  name.vb: CreateDefaultAppointmentEntityFromSaleSuggestion(Integer, Integer, Boolean, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale(System.Int32,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale(System.Int32,System.Int32,System.Boolean)
  id: GetNextSuggestedAppointmentBySale(System.Int32,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextSuggestedAppointmentBySale(int, int, bool)
  nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySale(int, int, bool)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale(int, int, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the next suggested appointment for a given sale (or rather a given sale's guide).
  example: []
  syntax:
    content: SuggestedAppointment GetNextSuggestedAppointmentBySale(int saleId, int currentAppointmentId, bool skipCompleteCheck)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the (guided) sale from which we want to find a suggested appointment
    - id: currentAppointmentId
      type: System.Int32
      description: The identifier of the appointment from which we calculate the next suggestion. The next suggested appointment is the subsequent appointment defined in the SoAdmin's sales guide.
    - id: skipCompleteCheck
      type: System.Boolean
      description: If you want to get the next appointment step in a sales guide for an appointment which is not completed, this value must be true. In all other cases, this value should be false, as it would return the value of null if the current appointment is not completes.
    return:
      type: SuperOffice.CRM.Services.SuggestedAppointment
      description: The next suggestion based on the sale id of a guided sale and the id of the current apopintment. If we cannot find a next suggestion or the sale is not guided (or if any of the paramters are invalid), we will return null.
    content.vb: Function GetNextSuggestedAppointmentBySale(saleId As Integer, currentAppointmentId As Integer, skipCompleteCheck As Boolean) As SuggestedAppointment
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale*
  nameWithType.vb: IAppointmentAgent.GetNextSuggestedAppointmentBySale(Integer, Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale(Integer, Integer, Boolean)
  name.vb: GetNextSuggestedAppointmentBySale(Integer, Integer, Boolean)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment(System.Int32)
  id: CreateDefaultReOpenAppointment(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultReOpenAppointment(int)
  nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointment(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: A re-open appointment should be created as a reminder to re-open the sale at a certain date with information regarding the stalled sale.
  example: []
  syntax:
    content: AppointmentEntity CreateDefaultReOpenAppointment(int saleId)
    parameters:
    - id: saleId
      type: System.Int32
      description: The identifier of the stalled sale from which we create a re-open appointment
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The re-open appointment with start date = the re-open date of the sale and a description matching the sales stalled reason.
    content.vb: Function CreateDefaultReOpenAppointment(saleId As Integer) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment*
  nameWithType.vb: IAppointmentAgent.CreateDefaultReOpenAppointment(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment(Integer)
  name.vb: CreateDefaultReOpenAppointment(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  id: CreateDefaultAppointmentEntityFromProjectSuggestion(System.Int32,System.Int32,System.Boolean,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAppointmentEntityFromProjectSuggestion(int, int, bool, int)
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion(int, int, bool, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion(int, int, bool, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: AppointmentEntity CreateDefaultAppointmentEntityFromProjectSuggestion(int suggestedAppointmentId, int projectId, bool createNow, int ownerId)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: ''
    - id: projectId
      type: System.Int32
      description: ''
    - id: createNow
      type: System.Boolean
      description: ''
    - id: ownerId
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    content.vb: Function CreateDefaultAppointmentEntityFromProjectSuggestion(suggestedAppointmentId As Integer, projectId As Integer, createNow As Boolean, ownerId As Integer) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion*
  nameWithType.vb: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion(Integer, Integer, Boolean, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion(Integer, Integer, Boolean, Integer)
  name.vb: CreateDefaultAppointmentEntityFromProjectSuggestion(Integer, Integer, Boolean, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID(SuperOffice.CRM.Services.AppointmentEntity,System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID(SuperOffice.CRM.Services.AppointmentEntity,System.String)
  id: CreateAppointmentForUID(SuperOffice.CRM.Services.AppointmentEntity,System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CreateAppointmentForUID(AppointmentEntity, string)
  nameWithType: IAppointmentAgent.CreateAppointmentForUID(AppointmentEntity, string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID(SuperOffice.CRM.Services.AppointmentEntity, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create an invitation record and an appointment with a given UID to reserve it if the UID is unused, otherwise null.
  example: []
  syntax:
    content: AppointmentEntity CreateAppointmentForUID(AppointmentEntity appointmentEntity, string uID)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The newly created AppointmentEntity or null if the UID is in the DB already.
    content.vb: Function CreateAppointmentForUID(appointmentEntity As AppointmentEntity, uID As String) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID*
  nameWithType.vb: IAppointmentAgent.CreateAppointmentForUID(AppointmentEntity, String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID(SuperOffice.CRM.Services.AppointmentEntity, String)
  name.vb: CreateAppointmentForUID(AppointmentEntity, String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID(System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID(System.String)
  id: GetAppointmentFromUID(System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentFromUID(string)
  nameWithType: IAppointmentAgent.GetAppointmentFromUID(string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the appointment that corresponds to the given UID.
  example: []
  syntax:
    content: AppointmentEntity GetAppointmentFromUID(string uID)
    parameters:
    - id: uID
      type: System.String
      description: The UID associated with the appointment
    return:
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The corresponding AppointmentEntity if exists or a default appointment entity.
    content.vb: Function GetAppointmentFromUID(uID As String) As AppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID*
  nameWithType.vb: IAppointmentAgent.GetAppointmentFromUID(String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID(String)
  name.vb: GetAppointmentFromUID(String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember(System.Int32,System.Int32)
  id: CanAssignToProjectMember(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: CanAssignToProjectMember(int, int)
  nameWithType: IAppointmentAgent.CanAssignToProjectMember(int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: bool CanAssignToProjectMember(int projectId, int suggestedAppointmentId)
    parameters:
    - id: projectId
      type: System.Int32
      description: ''
    - id: suggestedAppointmentId
      type: System.Int32
      description: ''
    return:
      type: System.Boolean
      description: ''
    content.vb: Function CanAssignToProjectMember(projectId As Integer, suggestedAppointmentId As Integer) As Boolean
  overload: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember*
  nameWithType.vb: IAppointmentAgent.CanAssignToProjectMember(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember(Integer, Integer)
  name.vb: CanAssignToProjectMember(Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId(System.Int32,System.Boolean)
  id: GetUIDFromAppointmentId(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetUIDFromAppointmentId(int, bool)
  nameWithType: IAppointmentAgent.GetUIDFromAppointmentId(int, bool)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId(int, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the UID associated with the appointment id in the Invitation table.
  example: []
  syntax:
    content: string GetUIDFromAppointmentId(int appointmentId, bool useMotherId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: ''
    - id: useMotherId
      type: System.Boolean
      description: Uses motherId if no UID is found for appointmentId.
    return:
      type: System.String
      description: The associated UID, or null if none exist.
    content.vb: Function GetUIDFromAppointmentId(appointmentId As Integer, useMotherId As Boolean) As String
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId*
  nameWithType.vb: IAppointmentAgent.GetUIDFromAppointmentId(Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId(Integer, Boolean)
  name.vb: GetUIDFromAppointmentId(Integer, Boolean)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse(System.String,System.IO.Stream)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse(System.String,System.IO.Stream)
  id: UpdateAppointmentFromIcsResponse(System.String,System.IO.Stream)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointmentFromIcsResponse(string, Stream)
  nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponse(string, Stream)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse(string, System.IO.Stream)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Update the attendance to an appointment based on incoming ICS RSVPs.
  example: []
  syntax:
    content: bool UpdateAppointmentFromIcsResponse(string emailAddress, Stream icsData)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email-address of the person responding to our meeting-request.
    - id: icsData
      type: System.IO.Stream
      description: The iCal ICS RSVP-content in byte-form.
    return:
      type: System.Boolean
      description: True if successfull.
    content.vb: Function UpdateAppointmentFromIcsResponse(emailAddress As String, icsData As Stream) As Boolean
  overload: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse*
  nameWithType.vb: IAppointmentAgent.UpdateAppointmentFromIcsResponse(String, Stream)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse(String, System.IO.Stream)
  name.vb: UpdateAppointmentFromIcsResponse(String, Stream)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  id: ValidateAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: ValidateAppointmentEntity(AppointmentEntity)
  nameWithType: IAppointmentAgent.ValidateAppointmentEntity(AppointmentEntity)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity(SuperOffice.CRM.Services.AppointmentEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check that entity is ready for saving.
  example: []
  syntax:
    content: StringDictionary ValidateAppointmentEntity(AppointmentEntity appointmentEntity)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: Entity to be checked.
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Error messages tagged by field.
    content.vb: Function ValidateAppointmentEntity(appointmentEntity As AppointmentEntity) As StringDictionary
  overload: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail(SuperOffice.CRM.Services.AppointmentEntity)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail(SuperOffice.CRM.Services.AppointmentEntity)
  id: WillSendEmail(SuperOffice.CRM.Services.AppointmentEntity)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: WillSendEmail(AppointmentEntity)
  nameWithType: IAppointmentAgent.WillSendEmail(AppointmentEntity)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail(SuperOffice.CRM.Services.AppointmentEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns true if the changes will trigger email sending on Save, so you can inform the user.
  example: []
  syntax:
    content: bool WillSendEmail(AppointmentEntity appointment)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The appointment carrier with changes made, before saving the changes.
    return:
      type: System.Boolean
      description: True if the changes to the appointment and preference settings etc. indicates an email should be sent.
    content.vb: Function WillSendEmail(appointment As AppointmentEntity) As Boolean
  overload: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  id: AcceptWithSmtpEmailConfirmation(System.Int32,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: AcceptWithSmtpEmailConfirmation(int, RecurrenceUpdateMode, EMailConnectionInfo)
  nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmation(int, RecurrenceUpdateMode, EMailConnectionInfo)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation(int, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Accepting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: void AcceptWithSmtpEmailConfirmation(int appointmentId, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    content.vb: Sub AcceptWithSmtpEmailConfirmation(appointmentId As Integer, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation*
  nameWithType.vb: IAppointmentAgent.AcceptWithSmtpEmailConfirmation(Integer, RecurrenceUpdateMode, EMailConnectionInfo)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation(Integer, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo)
  name.vb: AcceptWithSmtpEmailConfirmation(Integer, RecurrenceUpdateMode, EMailConnectionInfo)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  id: RejectWithSmtpEmailConfirmation(System.Int32,System.String,SuperOffice.Data.RecurrenceUpdateMode,SuperOffice.CRM.Services.EMailConnectionInfo)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RejectWithSmtpEmailConfirmation(int, string, RecurrenceUpdateMode, EMailConnectionInfo)
  nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmation(int, string, RecurrenceUpdateMode, EMailConnectionInfo)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation(int, string, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Rejecting an appointment invitation and send an email confirmation to the meeting organizer.
  example: []
  syntax:
    content: void RejectWithSmtpEmailConfirmation(int appointmentId, string rejectReason, RecurrenceUpdateMode updateMode, EMailConnectionInfo smtpEMailConnectionInfo)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointmentId. Both master and child record ids are accepted.
    - id: rejectReason
      type: System.String
      description: The reason the invitation was rejected.
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    content.vb: Sub RejectWithSmtpEmailConfirmation(appointmentId As Integer, rejectReason As String, updateMode As RecurrenceUpdateMode, smtpEMailConnectionInfo As EMailConnectionInfo)
  overload: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation*
  nameWithType.vb: IAppointmentAgent.RejectWithSmtpEmailConfirmation(Integer, String, RecurrenceUpdateMode, EMailConnectionInfo)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation(Integer, String, SuperOffice.Data.RecurrenceUpdateMode, SuperOffice.CRM.Services.EMailConnectionInfo)
  name.vb: RejectWithSmtpEmailConfirmation(Integer, String, RecurrenceUpdateMode, EMailConnectionInfo)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String)
  id: GetAppointmentEmailInvitation(SuperOffice.CRM.Services.AppointmentEntity,System.String,System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentEmailInvitation(AppointmentEntity, string, string)
  nameWithType: IAppointmentAgent.GetAppointmentEmailInvitation(AppointmentEntity, string, string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation(SuperOffice.CRM.Services.AppointmentEntity, string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create an EMailEntity (without an ical attachment) with the email sent to participants when the appointment is saved
  example: []
  syntax:
    content: EMailEntity GetAppointmentEmailInvitation(AppointmentEntity appointment, string templateName, string language)
    parameters:
    - id: appointment
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The appointment carrier with changes made.
    - id: templateName
      type: System.String
      description: Filename of invitation template
    - id: language
      type: System.String
      description: The desired SO-language for the template
    return:
      type: SuperOffice.CRM.Services.EMailEntity
      description: Email entity with the preview in HTMLBody
    content.vb: Function GetAppointmentEmailInvitation(appointment As AppointmentEntity, templateName As String, language As String) As EMailEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation*
  nameWithType.vb: IAppointmentAgent.GetAppointmentEmailInvitation(AppointmentEntity, String, String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation(SuperOffice.CRM.Services.AppointmentEntity, String, String)
  name.vb: GetAppointmentEmailInvitation(AppointmentEntity, String, String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String)
  id: SaveWithCustomInvitation(SuperOffice.CRM.Services.AppointmentEntity,SuperOffice.Data.RecurrenceUpdateMode,System.Boolean,SuperOffice.CRM.Services.EMailConnectionInfo,SuperOffice.CRM.Services.EMailConnectionInfo,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: SaveWithCustomInvitation(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, string, string, string)
  nameWithType: IAppointmentAgent.SaveWithCustomInvitation(AppointmentEntity, RecurrenceUpdateMode, bool, EMailConnectionInfo, EMailConnectionInfo, string, string, string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, bool, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, string, string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Save a booking and send a custom invitation email to participants
  example: []
  syntax:
    content: AppointmentSaveData SaveWithCustomInvitation(AppointmentEntity appointmentEntity, RecurrenceUpdateMode updateMode, bool sendEmailToParticipants, EMailConnectionInfo smtpEMailConnectionInfo, EMailConnectionInfo imapEMailConnectionInfo, string emailBody, string subject, string templateLanguage)
    parameters:
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: ''
    - id: updateMode
      type: SuperOffice.Data.RecurrenceUpdateMode
      description: Update mode for a recurring appointment.
    - id: sendEmailToParticipants
      type: System.Boolean
      description: If true, emails will be sent to all participants that is marked with send email flag. If false no mails will be sent even if the send email flag is true.
    - id: smtpEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for outgoing smtp email server. Will be null if no login information is relevant.
    - id: imapEMailConnectionInfo
      type: SuperOffice.CRM.Services.EMailConnectionInfo
      description: Login information for imap server. Will be null if no login information is relevant.
    - id: emailBody
      type: System.String
      description: The email-body to be used for new invitations
    - id: subject
      type: System.String
      description: The email-subject to be used for new invitations
    - id: templateLanguage
      type: System.String
      description: The template language to use for invitation updates
    return:
      type: SuperOffice.CRM.Services.AppointmentSaveData
      description: Appointment entity and flag for if email was queued to be sent
    content.vb: Function SaveWithCustomInvitation(appointmentEntity As AppointmentEntity, updateMode As RecurrenceUpdateMode, sendEmailToParticipants As Boolean, smtpEMailConnectionInfo As EMailConnectionInfo, imapEMailConnectionInfo As EMailConnectionInfo, emailBody As String, subject As String, templateLanguage As String) As AppointmentSaveData
  overload: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation*
  nameWithType.vb: IAppointmentAgent.SaveWithCustomInvitation(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation(SuperOffice.CRM.Services.AppointmentEntity, SuperOffice.Data.RecurrenceUpdateMode, Boolean, SuperOffice.CRM.Services.EMailConnectionInfo, SuperOffice.CRM.Services.EMailConnectionInfo, String, String, String)
  name.vb: SaveWithCustomInvitation(AppointmentEntity, RecurrenceUpdateMode, Boolean, EMailConnectionInfo, EMailConnectionInfo, String, String, String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList(System.Int32[])
  id: GetAppointmentList(System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentList(int[])
  nameWithType: IAppointmentAgent.GetAppointmentList(int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets an array of Appointment objects.
  example: []
  syntax:
    content: Appointment[] GetAppointmentList(int[] appointmentIds)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The identifiers of the Appointment object
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointment objects
    content.vb: Function GetAppointmentList(appointmentIds As Integer()) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList*
  nameWithType.vb: IAppointmentAgent.GetAppointmentList(Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList(Integer())
  name.vb: GetAppointmentList(Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments(System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments(System.DateTime,System.DateTime,System.Int32)
  id: GetMyAppointments(System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyAppointments(DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetMyAppointments(DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments(System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: Appointment[] GetMyAppointments(DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetMyAppointments(startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments*
  nameWithType.vb: IAppointmentAgent.GetMyAppointments(Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments(Date, Date, Integer)
  name.vb: GetMyAppointments(Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  id: GetPersonAppointments(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointments(int, bool, DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetPersonAppointments(int, bool, DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments(int, bool, System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Appointment[] GetPersonAppointments(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetPersonAppointments(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointments(Integer, Boolean, Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments(Integer, Boolean, Date, Date, Integer)
  name.vb: GetPersonAppointments(Integer, Boolean, Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary(System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary(System.DateTime,System.DateTime,System.Int32)
  id: GetMyDiary(System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyDiary(DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetMyDiary(DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary(System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's diary. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: Appointment[] GetMyDiary(DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetMyDiary(startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary*
  nameWithType.vb: IAppointmentAgent.GetMyDiary(Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary(Date, Date, Integer)
  name.vb: GetMyDiary(Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks(System.Int32)
  id: GetMyTasks(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyTasks(int)
  nameWithType: IAppointmentAgent.GetMyTasks(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's task list. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: Appointment[] GetMyTasks(int count)
    parameters:
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetMyTasks(count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks*
  nameWithType.vb: IAppointmentAgent.GetMyTasks(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks(Integer)
  name.vb: GetMyTasks(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetPersonDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonDiary(int, DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetPersonDiary(int, DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary(int, System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's diary. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Appointment[] GetPersonDiary(int personId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetPersonDiary(personId As Integer, startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary*
  nameWithType.vb: IAppointmentAgent.GetPersonDiary(Integer, Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary(Integer, Date, Date, Integer)
  name.vb: GetPersonDiary(Integer, Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks(System.Int32,System.Int32)
  id: GetPersonTasks(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonTasks(int, int)
  nameWithType: IAppointmentAgent.GetPersonTasks(int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. It only returns appointments that would be displayed in the user's task list. The appointments belong to the person specified. If the person not is a SuperOffice user (associate) or the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Appointment[] GetPersonTasks(int personId, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetPersonTasks(personId As Integer, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks*
  nameWithType.vb: IAppointmentAgent.GetPersonTasks(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks(Integer, Integer)
  name.vb: GetPersonTasks(Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  id: GetPersonAppointmentsByType(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByType(int, bool, DateTime, DateTime, int, AppointmentType)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByType(int, bool, DateTime, DateTime, int, AppointmentType)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType(int, bool, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the person specified.
  example: []
  syntax:
    content: Appointment[] GetPersonAppointmentsByType(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByType(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByType(Integer, Boolean, Date, Date, Integer, AppointmentType)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType(Integer, Boolean, Date, Date, Integer, SuperOffice.Data.AppointmentType)
  name.vb: GetPersonAppointmentsByType(Integer, Boolean, Date, Date, Integer, AppointmentType)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetProjectAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointments(int, DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetProjectAppointments(int, DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments(int, System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the project specified. If the logged on user is not allowed to view this projects appointments an exception is thrown.
  example: []
  syntax:
    content: Appointment[] GetProjectAppointments(int projectId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectAppointments(projectId As Integer, startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointments(Integer, Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments(Integer, Date, Date, Integer)
  name.vb: GetProjectAppointments(Integer, Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  id: GetProjectAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByType(int, DateTime, DateTime, int, AppointmentType)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByType(int, DateTime, DateTime, int, AppointmentType)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType(int, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the project specified.
  example: []
  syntax:
    content: Appointment[] GetProjectAppointmentsByType(int projectId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByType(projectId As Integer, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByType(Integer, Date, Date, Integer, AppointmentType)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType(Integer, Date, Date, Integer, SuperOffice.Data.AppointmentType)
  name.vb: GetProjectAppointmentsByType(Integer, Date, Date, Integer, AppointmentType)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetContactAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointments(int, DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetContactAppointments(int, DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments(int, System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this persons appointments an exception is thrown.
  example: []
  syntax:
    content: Appointment[] GetContactAppointments(int contactId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetContactAppointments(contactId As Integer, startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments*
  nameWithType.vb: IAppointmentAgent.GetContactAppointments(Integer, Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments(Integer, Date, Date, Integer)
  name.vb: GetContactAppointments(Integer, Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  id: GetContactAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByType(int, DateTime, DateTime, int, AppointmentType)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByType(int, DateTime, DateTime, int, AppointmentType)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType(int, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the contact specified. If the logged on user is not allowed to view this contacts appointments an exception is thrown.
  example: []
  syntax:
    content: Appointment[] GetContactAppointmentsByType(int contactId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByType(contactId As Integer, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByType(Integer, Date, Date, Integer, AppointmentType)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType(Integer, Date, Date, Integer, SuperOffice.Data.AppointmentType)
  name.vb: GetContactAppointmentsByType(Integer, Date, Date, Integer, AppointmentType)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetProjectMemberAppointments(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointments(int, DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointments(int, DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments(int, System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the projects where the person specified is member.
  example: []
  syntax:
    content: Appointment[] GetProjectMemberAppointments(int personId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointments(personId As Integer, startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointments(Integer, Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments(Integer, Date, Date, Integer)
  name.vb: GetProjectMemberAppointments(Integer, Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  id: GetProjectMemberAppointmentsByType(System.Int32,System.DateTime,System.DateTime,System.Int32,SuperOffice.Data.AppointmentType)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByType(int, DateTime, DateTime, int, AppointmentType)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByType(int, DateTime, DateTime, int, AppointmentType)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType(int, System.DateTime, System.DateTime, int, SuperOffice.Data.AppointmentType)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment type within a time range. The appointments belong to the projects where the person specified is member.
  example: []
  syntax:
    content: Appointment[] GetProjectMemberAppointmentsByType(int personId, DateTime startTime, DateTime endTime, int count, AppointmentType appointmentType)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: appointmentType
      type: SuperOffice.Data.AppointmentType
      description: The appointment type, e.g. inDiary, inChecklist etc.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByType(personId As Integer, startTime As Date, endTime As Date, count As Integer, appointmentType As AppointmentType) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByType(Integer, Date, Date, Integer, AppointmentType)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType(Integer, Date, Date, Integer, SuperOffice.Data.AppointmentType)
  name.vb: GetProjectMemberAppointmentsByType(Integer, Date, Date, Integer, AppointmentType)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetPersonAppointmentsByTask(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTask(int, bool, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTask(int, bool, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask(int, bool, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetPersonAppointmentsByTask(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTask(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, taskId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTask(Integer, Boolean, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask(Integer, Boolean, Date, Date, Integer, Integer)
  name.vb: GetPersonAppointmentsByTask(Integer, Boolean, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetPersonAppointmentsByTasks(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTasks(int, bool, DateTime, DateTime, int, int[])
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasks(int, bool, DateTime, DateTime, int, int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks(int, bool, System.DateTime, System.DateTime, int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments from a list of appointment task types within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetPersonAppointmentsByTasks(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int[] taskIds)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTasks(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, taskIds As Integer()) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTasks(Integer, Boolean, Date, Date, Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks(Integer, Boolean, Date, Date, Integer, Integer())
  name.vb: GetPersonAppointmentsByTasks(Integer, Boolean, Date, Date, Integer, Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetPersonAppointmentsByTaskHeading(System.Int32,System.Boolean,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPersonAppointmentsByTaskHeading(int, bool, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeading(int, bool, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading(int, bool, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the person specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Appointment[] GetPersonAppointmentsByTaskHeading(int personId, bool includeProjectAppointments, DateTime startTime, DateTime endTime, int count, int taskHeadingId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the SuperOffice user (associate).
    - id: includeProjectAppointments
      type: System.Boolean
      description: If true, all appointments that belong to projects where the user is a project member are included as well as the appointments belonging to the person.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetPersonAppointmentsByTaskHeading(personId As Integer, includeProjectAppointments As Boolean, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading*
  nameWithType.vb: IAppointmentAgent.GetPersonAppointmentsByTaskHeading(Integer, Boolean, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading(Integer, Boolean, Date, Date, Integer, Integer)
  name.vb: GetPersonAppointmentsByTaskHeading(Integer, Boolean, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTask(int, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTask(int, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask(int, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetProjectAppointmentsByTask(int projectId, DateTime startTime, DateTime endTime, int count, int taskId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTask(projectId As Integer, startTime As Date, endTime As Date, count As Integer, taskId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTask(Integer, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask(Integer, Date, Date, Integer, Integer)
  name.vb: GetProjectAppointmentsByTask(Integer, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetProjectAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTasks(int, DateTime, DateTime, int, int[])
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasks(int, DateTime, DateTime, int, int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks(int, System.DateTime, System.DateTime, int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments matching the list of appointment task types within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetProjectAppointmentsByTasks(int projectId, DateTime startTime, DateTime endTime, int count, int[] taskIds)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTasks(projectId As Integer, startTime As Date, endTime As Date, count As Integer, taskIds As Integer()) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
  name.vb: GetProjectAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectAppointmentsByTaskHeading(int, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeading(int, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading(int, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the project specified.  Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Appointment[] GetProjectAppointmentsByTaskHeading(int projectId, DateTime startTime, DateTime endTime, int count, int taskHeadingId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectAppointmentsByTaskHeading(projectId As Integer, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading*
  nameWithType.vb: IAppointmentAgent.GetProjectAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
  name.vb: GetProjectAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectMemberAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTask(int, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTask(int, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask(int, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetProjectMemberAppointmentsByTask(int personId, DateTime startTime, DateTime endTime, int count, int taskId)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTask(personId As Integer, startTime As Date, endTime As Date, count As Integer, taskId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTask(Integer, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask(Integer, Date, Date, Integer, Integer)
  name.vb: GetProjectMemberAppointmentsByTask(Integer, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetProjectMemberAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTasks(int, DateTime, DateTime, int, int[])
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasks(int, DateTime, DateTime, int, int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks(int, System.DateTime, System.DateTime, int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments matching a set of appointment task types within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetProjectMemberAppointmentsByTasks(int personId, DateTime startTime, DateTime endTime, int count, int[] taskIds)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTasks(personId As Integer, startTime As Date, endTime As Date, count As Integer, taskIds As Integer()) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
  name.vb: GetProjectMemberAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetProjectMemberAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetProjectMemberAppointmentsByTaskHeading(int, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading(int, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading(int, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the projects where the person specified is member. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Appointment[] GetProjectMemberAppointmentsByTaskHeading(int personId, DateTime startTime, DateTime endTime, int count, int taskHeadingId)
    parameters:
    - id: personId
      type: System.Int32
      description: The project member's person id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetProjectMemberAppointmentsByTaskHeading(personId As Integer, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading*
  nameWithType.vb: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
  name.vb: GetProjectMemberAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetContactAppointmentsByTask(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTask(int, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTask(int, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask(int, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task type within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetContactAppointmentsByTask(int contactId, DateTime startTime, DateTime endTime, int count, int taskId)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskId
      type: System.Int32
      description: The task id. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTask(contactId As Integer, startTime As Date, endTime As Date, count As Integer, taskId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTask(Integer, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask(Integer, Date, Date, Integer, Integer)
  name.vb: GetContactAppointmentsByTask(Integer, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  id: GetContactAppointmentsByTasks(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTasks(int, DateTime, DateTime, int, int[])
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTasks(int, DateTime, DateTime, int, int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks(int, System.DateTime, System.DateTime, int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments belonging to an array of appointment task types within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
  example: []
  syntax:
    content: Appointment[] GetContactAppointmentsByTasks(int contactId, DateTime startTime, DateTime endTime, int count, int[] taskIds)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskIds
      type: System.Int32[]
      description: The task ids as an integer array. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTasks(contactId As Integer, startTime As Date, endTime As Date, count As Integer, taskIds As Integer()) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
  name.vb: GetContactAppointmentsByTasks(Integer, Date, Date, Integer, Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  id: GetContactAppointmentsByTaskHeading(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetContactAppointmentsByTaskHeading(int, DateTime, DateTime, int, int)
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeading(int, DateTime, DateTime, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading(int, System.DateTime, System.DateTime, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments of a specific appointment task heading within a time range. The appointments belong to the contact specified. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Appointment[] GetContactAppointmentsByTaskHeading(int contactId, DateTime startTime, DateTime endTime, int count, int taskHeadingId)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact id
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: The maximum number of appointments that should be returned. -1 means no count restrictions.
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on.
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetContactAppointmentsByTaskHeading(contactId As Integer, startTime As Date, endTime As Date, count As Integer, taskHeadingId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading*
  nameWithType.vb: IAppointmentAgent.GetContactAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
  name.vb: GetContactAppointmentsByTaskHeading(Integer, Date, Date, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment(System.Int32)
  id: GetPublishedAppointment(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointment(int)
  nameWithType: IAppointmentAgent.GetPublishedAppointment(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointment by appointment id.
  example: []
  syntax:
    content: Appointment GetPublishedAppointment(int appointmentId)
    parameters:
    - id: appointmentId
      type: System.Int32
      description: The appointment id
    return:
      type: SuperOffice.CRM.Services.Appointment
      description: Appointment
    content.vb: Function GetPublishedAppointment(appointmentId As Integer) As Appointment
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment*
  nameWithType.vb: IAppointmentAgent.GetPublishedAppointment(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment(Integer)
  name.vb: GetPublishedAppointment(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments(System.Int32[])
  id: GetPublishedAppointments(System.Int32[])
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedAppointments(int[])
  nameWithType: IAppointmentAgent.GetPublishedAppointments(int[])
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointments by appointment ids.
  example: []
  syntax:
    content: Appointment[] GetPublishedAppointments(int[] appointmentIds)
    parameters:
    - id: appointmentIds
      type: System.Int32[]
      description: The array of appointment ids
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointment
    content.vb: Function GetPublishedAppointments(appointmentIds As Integer()) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments*
  nameWithType.vb: IAppointmentAgent.GetPublishedAppointments(Integer())
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments(Integer())
  name.vb: GetPublishedAppointments(Integer())
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments
  id: GetMyPublishedAppointments
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMyPublishedAppointments()
  nameWithType: IAppointmentAgent.GetMyPublishedAppointments()
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointments from the logged in user.
  example: []
  syntax:
    content: Appointment[] GetMyPublishedAppointments()
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Appointments
    content.vb: Function GetMyPublishedAppointments() As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments*
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments(System.Int32)
  id: GetPublishedProjectAppointments(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetPublishedProjectAppointments(int)
  nameWithType: IAppointmentAgent.GetPublishedProjectAppointments(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get published appointments by project id.
  example: []
  syntax:
    content: Appointment[] GetPublishedProjectAppointments(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointment
    content.vb: Function GetPublishedProjectAppointments(projectId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments*
  nameWithType.vb: IAppointmentAgent.GetPublishedProjectAppointments(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments(Integer)
  name.vb: GetPublishedProjectAppointments(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading(System.Int32)
  id: GetAppointmentsByTaskHeading(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentsByTaskHeading(int)
  nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeading(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns appointments of a specific appointment task heading. Task represents the different types of activities, like “Phone call”, “Meeting” and so on. The heading represents a grouping or filtering of tasks.
  example: []
  syntax:
    content: Appointment[] GetAppointmentsByTaskHeading(int taskHeadingId)
    parameters:
    - id: taskHeadingId
      type: System.Int32
      description: The task heading id. The heading represents a grouping or filtering of tasks. Task represents the different types of activities, like “Phone call”, “Meeting” and so on
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: Array of Appointments.
    content.vb: Function GetAppointmentsByTaskHeading(taskHeadingId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading*
  nameWithType.vb: IAppointmentAgent.GetAppointmentsByTaskHeading(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading(Integer)
  name.vb: GetAppointmentsByTaskHeading(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetAssociateDiary(System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociateDiary(int, DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetAssociateDiary(int, DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary(int, System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Appointment[] GetAssociateDiary(int associateId, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: associateId
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: count
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: ''
    content.vb: Function GetAssociateDiary(associateId As Integer, startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary*
  nameWithType.vb: IAppointmentAgent.GetAssociateDiary(Integer, Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary(Integer, Date, Date, Integer)
  name.vb: GetAssociateDiary(Integer, Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)
  id: GetDiaryByGroup(System.Int32,System.Int32,System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDiaryByGroup(int, int, DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetDiaryByGroup(int, int, DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup(int, int, System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: Appointment[] GetDiaryByGroup(int groupId, int groupType, DateTime startTime, DateTime endTime, int count)
    parameters:
    - id: groupId
      type: System.Int32
      description: ''
    - id: groupType
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: count
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: ''
    content.vb: Function GetDiaryByGroup(groupId As Integer, groupType As Integer, startTime As Date, endTime As Date, count As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup*
  nameWithType.vb: IAppointmentAgent.GetDiaryByGroup(Integer, Integer, Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup(Integer, Integer, Date, Date, Integer)
  name.vb: GetDiaryByGroup(Integer, Integer, Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32)
  id: UpdateAppointment(System.Int32,System.DateTime,System.DateTime,System.Int32,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: UpdateAppointment(int, DateTime, DateTime, int, int, int)
  nameWithType: IAppointmentAgent.UpdateAppointment(int, DateTime, DateTime, int, int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment(int, System.DateTime, System.DateTime, int, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates an appointment record.
  example: []
  syntax:
    content: Appointment UpdateAppointment(int id, DateTime startTime, DateTime endTime, int status, int type, int associateId)
    parameters:
    - id: id
      type: System.Int32
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    - id: status
      type: System.Int32
      description: ''
    - id: type
      type: System.Int32
      description: ''
    - id: associateId
      type: System.Int32
      description: The appointment owner's id (associate id)
    return:
      type: SuperOffice.CRM.Services.Appointment
      description: ''
    content.vb: Function UpdateAppointment(id As Integer, startTime As Date, endTime As Date, status As Integer, type As Integer, associateId As Integer) As Appointment
  overload: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment*
  nameWithType.vb: IAppointmentAgent.UpdateAppointment(Integer, Date, Date, Integer, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment(Integer, Date, Date, Integer, Integer, Integer)
  name.vb: UpdateAppointment(Integer, Date, Date, Integer, Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary(System.Int32[],System.DateTime,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary(System.Int32[],System.DateTime,System.DateTime)
  id: GetAssociatesDiary(System.Int32[],System.DateTime,System.DateTime)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiary(int[], DateTime, DateTime)
  nameWithType: IAppointmentAgent.GetAssociatesDiary(int[], DateTime, DateTime)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary(int[], System.DateTime, System.DateTime)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Fetch appointments for given associates
  example: []
  syntax:
    content: Appointment[] GetAssociatesDiary(int[] associateIds, DateTime startTime, DateTime endTime)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: ''
    content.vb: Function GetAssociatesDiary(associateIds As Integer(), startTime As Date, endTime As Date) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary*
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiary(Integer(), Date, Date)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary(Integer(), Date, Date)
  name.vb: GetAssociatesDiary(Integer(), Date, Date)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo(System.Int32[],System.DateTime,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo(System.Int32[],System.DateTime,System.DateTime)
  id: GetAssociatesDiaryInfo(System.Int32[],System.DateTime,System.DateTime)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAssociatesDiaryInfo(int[], DateTime, DateTime)
  nameWithType: IAppointmentAgent.GetAssociatesDiaryInfo(int[], DateTime, DateTime)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo(int[], System.DateTime, System.DateTime)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Fetch appointment info for given associates
  example: []
  syntax:
    content: AppointmentInfo[] GetAssociatesDiaryInfo(int[] associateIds, DateTime startTime, DateTime endTime)
    parameters:
    - id: associateIds
      type: System.Int32[]
      description: ''
    - id: startTime
      type: System.DateTime
      description: ''
    - id: endTime
      type: System.DateTime
      description: ''
    return:
      type: SuperOffice.CRM.Services.AppointmentInfo[]
      description: ''
    content.vb: Function GetAssociatesDiaryInfo(associateIds As Integer(), startTime As Date, endTime As Date) As AppointmentInfo()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo*
  nameWithType.vb: IAppointmentAgent.GetAssociatesDiaryInfo(Integer(), Date, Date)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo(Integer(), Date, Date)
  name.vb: GetAssociatesDiaryInfo(Integer(), Date, Date)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords(System.Int32,System.Int32)
  id: GetAppointmentRecords(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAppointmentRecords(int, int)
  nameWithType: IAppointmentAgent.GetAppointmentRecords(int, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all records involved in a booking and/or recurring appointments. MotherId can be zero for repeating appointments or bookings, and recurrenceRuleId can be zero for bookings that are not repeating.
  example: []
  syntax:
    content: Appointment[] GetAppointmentRecords(int motherId, int recurrenceRuleId)
    parameters:
    - id: motherId
      type: System.Int32
      description: Appointment id of the owner of a booking
    - id: recurrenceRuleId
      type: System.Int32
      description: RecurrenceId of a recuring appointment
    return:
      type: SuperOffice.CRM.Services.Appointment[]
      description: ''
    content.vb: Function GetAppointmentRecords(motherId As Integer, recurrenceRuleId As Integer) As Appointment()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords*
  nameWithType.vb: IAppointmentAgent.GetAppointmentRecords(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords(Integer, Integer)
  name.vb: GetAppointmentRecords(Integer, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments(System.DateTime,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments(System.DateTime,System.DateTime)
  id: GetMySyncAppointments(System.DateTime,System.DateTime)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetMySyncAppointments(DateTime, DateTime)
  nameWithType: IAppointmentAgent.GetMySyncAppointments(DateTime, DateTime)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments(System.DateTime, System.DateTime)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Method that returns a specified number of appointments within a time range. The appointments belong to the currently logged on user.
  example: []
  syntax:
    content: AppointmentSyncData[] GetMySyncAppointments(DateTime startTime, DateTime endTime)
    parameters:
    - id: startTime
      type: System.DateTime
      description: The start of the time interval in which we want appointments. This will usually be the current time.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    return:
      type: SuperOffice.CRM.Services.AppointmentSyncData[]
      description: Array of Appointments.
    content.vb: Function GetMySyncAppointments(startTime As Date, endTime As Date) As AppointmentSyncData()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments*
  nameWithType.vb: IAppointmentAgent.GetMySyncAppointments(Date, Date)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments(Date, Date)
  name.vb: GetMySyncAppointments(Date, Date)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  id: GetDayInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetDayInformationListByDatesAndAssociate(DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociate(DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate(System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get combined day information (activity + redletter summary) for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.
  example: []
  syntax:
    content: DayInformationListItem[] GetDayInformationListByDatesAndAssociate(DateTime startDate, DateTime endDate, int associateId)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    return:
      type: SuperOffice.CRM.Services.DayInformationListItem[]
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetDayInformationListByDatesAndAssociate(startDate As Date, endDate As Date, associateId As Integer) As DayInformationListItem()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate*
  nameWithType.vb: IAppointmentAgent.GetDayInformationListByDatesAndAssociate(Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate(Date, Date, Integer)
  name.vb: GetDayInformationListByDatesAndAssociate(Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  id: GetActivityInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetActivityInformationListByDatesAndAssociate(DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociate(DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate(System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get activity information for one or more days according to the given date interval. The time portion of the dates is ignored. Private appointments are counted, but may not be visible through tooltips or other more detailed services.
  example: []
  syntax:
    content: ActivityInformationListItem[] GetActivityInformationListByDatesAndAssociate(DateTime startDate, DateTime endDate, int associateId)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    return:
      type: SuperOffice.CRM.Services.ActivityInformationListItem[]
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetActivityInformationListByDatesAndAssociate(startDate As Date, endDate As Date, associateId As Integer) As ActivityInformationListItem()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate*
  nameWithType.vb: IAppointmentAgent.GetActivityInformationListByDatesAndAssociate(Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate(Date, Date, Integer)
  name.vb: GetActivityInformationListByDatesAndAssociate(Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  id: GetRedLetterInformationListByDatesAndAssociate(System.DateTime,System.DateTime,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetRedLetterInformationListByDatesAndAssociate(DateTime, DateTime, int)
  nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate(DateTime, DateTime, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate(System.DateTime, System.DateTime, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get detailed red letter day information (redletter summary + individual day texts) for one or more days according to the given date interval. The time portion of the dates is ignored.
  example: []
  syntax:
    content: RedLetterInformationListItem[] GetRedLetterInformationListByDatesAndAssociate(DateTime startDate, DateTime endDate, int associateId)
    parameters:
    - id: startDate
      type: System.DateTime
      description: Start date of interval. Time portion is ignored.
    - id: endDate
      type: System.DateTime
      description: End date of interval. Time portion is ignored.
    - id: associateId
      type: System.Int32
      description: Associate id to identify the calendar to scan. If 0 is passed in, the currently authenticated associate is used instead.
    return:
      type: SuperOffice.CRM.Services.RedLetterInformationListItem[]
      description: Exactly one item per day of the given time span is returned. Days where nothing happens will have all values set to 0, but will still be in the returned array. Start end dates are treated as inclusive.
    content.vb: Function GetRedLetterInformationListByDatesAndAssociate(startDate As Date, endDate As Date, associateId As Integer) As RedLetterInformationListItem()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate*
  nameWithType.vb: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate(Date, Date, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate(Date, Date, Integer)
  name.vb: GetRedLetterInformationListByDatesAndAssociate(Date, Date, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms(System.Boolean,System.Boolean,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms(System.Boolean,System.Boolean,System.Int32)
  id: GetAlarms(System.Boolean,System.Boolean,System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetAlarms(bool, bool, int)
  nameWithType: IAppointmentAgent.GetAlarms(bool, bool, int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms(bool, bool, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: MultiAlarmData GetAlarms(bool includeInvitations, bool includeAllAppointments, int defaultAlarmLeadTimeInMinutes)
    parameters:
    - id: includeInvitations
      type: System.Boolean
      description: ''
    - id: includeAllAppointments
      type: System.Boolean
      description: ''
    - id: defaultAlarmLeadTimeInMinutes
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.MultiAlarmData
      description: ''
    content.vb: Function GetAlarms(includeInvitations As Boolean, includeAllAppointments As Boolean, defaultAlarmLeadTimeInMinutes As Integer) As MultiAlarmData
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms*
  nameWithType.vb: IAppointmentAgent.GetAlarms(Boolean, Boolean, Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms(Boolean, Boolean, Integer)
  name.vb: GetAlarms(Boolean, Boolean, Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean)
  id: GetNextAvailableTime(System.Int32[],System.DateTime,System.DateTime,System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetNextAvailableTime(int[], DateTime, DateTime, int, bool)
  nameWithType: IAppointmentAgent.GetNextAvailableTime(int[], DateTime, DateTime, int, bool)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime(int[], System.DateTime, System.DateTime, int, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: An array of the soonest-available working time slots.
  example: []
  syntax:
    content: NextAvailableTime[] GetNextAvailableTime(int[] associates, DateTime startTime, DateTime endTime, int count, bool isAllDay)
    parameters:
    - id: associates
      type: System.Int32[]
      description: Associate participants we want to account for while finding the next available times.
    - id: startTime
      type: System.DateTime
      description: The start of the time interval we want appointments from.
    - id: endTime
      type: System.DateTime
      description: The end of the time interval.
    - id: count
      type: System.Int32
      description: How many next-available date time slots should be returned.
    - id: isAllDay
      type: System.Boolean
      description: Is the appointment an all day event.
    return:
      type: SuperOffice.CRM.Services.NextAvailableTime[]
      description: Array of the soonest-available working time slots.
    content.vb: Function GetNextAvailableTime(associates As Integer(), startTime As Date, endTime As Date, count As Integer, isAllDay As Boolean) As NextAvailableTime()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime*
  nameWithType.vb: IAppointmentAgent.GetNextAvailableTime(Integer(), Date, Date, Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime(Integer(), Date, Date, Integer, Boolean)
  name.vb: GetNextAvailableTime(Integer(), Date, Date, Integer, Boolean)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: GenerateLead(System.Int32,System.String,System.String,System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GenerateLead(int, string, string, int, string, string, string, string, string, string, string, string)
  nameWithType: IAppointmentAgent.GenerateLead(int, string, string, int, string, string, string, string, string, string, string, string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead(int, string, string, int, string, string, string, string, string, string, string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "Adds a sales lead (task) to a contact in SuperOffice. If the contact or person is known, the sales lead is added to the current contact. If not, a new contact is created, with the associate with ownerIdForNewContact as responsible (Our Contact). A relation is created between the contact and the person submitting the lead. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person's contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person's contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned."
  example: []
  syntax:
    content: SalesActivity GenerateLead(int associateIdForNewContact, string leadDescription, string relation, int relationId, string leadContact, string leadPersonFirstname, string leadPersonLastname, string leadPersonEmail, string leadPhoneNumber, string creatorsContact, string creatorsFirstname, string creatorsLastname)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as "Our Contact" if a new Contact is created. Ensures that the sales lead is assigned to the correct salesman.
    - id: leadDescription
      type: System.String
      description: Description of the lead. The lead text as shown in SuperOffice
    - id: relation
      type: System.String
      description: The relation the person submitting the lead has to the contact.
    - id: relationId
      type: System.Int32
      description: Id of the relation type. Database specific.
    - id: leadContact
      type: System.String
      description: Name of the new or existing contact (company) the lead is created for.
    - id: leadPersonFirstname
      type: System.String
      description: Firstname of the contact's person.
    - id: leadPersonLastname
      type: System.String
      description: Lastname of the contact's person.
    - id: leadPersonEmail
      type: System.String
      description: Email to the contact's person.
    - id: leadPhoneNumber
      type: System.String
      description: Phone number of the contact or contact's person.
    - id: creatorsContact
      type: System.String
      description: The contact (company) of the person creating the lead
    - id: creatorsFirstname
      type: System.String
      description: The firstname of the person creating the lead
    - id: creatorsLastname
      type: System.String
      description: The lastname of the person creating the lead
    return:
      type: SuperOffice.CRM.Services.SalesActivity
      description: True if successfull.
    content.vb: Function GenerateLead(associateIdForNewContact As Integer, leadDescription As String, relation As String, relationId As Integer, leadContact As String, leadPersonFirstname As String, leadPersonLastname As String, leadPersonEmail As String, leadPhoneNumber As String, creatorsContact As String, creatorsFirstname As String, creatorsLastname As String) As SalesActivity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead*
  nameWithType.vb: IAppointmentAgent.GenerateLead(Integer, String, String, Integer, String, String, String, String, String, String, String, String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead(Integer, String, String, Integer, String, String, String, String, String, String, String, String)
  name.vb: GenerateLead(Integer, String, String, Integer, String, String, String, String, String, String, String, String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  id: RequestForInfo(System.Int32,System.String,System.String,System.String,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: RequestForInfo(int, string, string, string, string, string, string, string)
  nameWithType: IAppointmentAgent.RequestForInfo(int, string, string, string, string, string, string, string)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo(int, string, string, string, string, string, string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "Submits a request for information. The request is added to the task list of the user that is responsible for this contact. Based on wether the person the request is made for is found or not, the following happens: If the person is found, the person, person's contact and sales representative is returned. If neither the person nor the contact is found a new person and contact is created (if sufficient data is supplied), and the person, person's contact and sales representative is returned. If the contact and not the person is found a new person is created on this contact, and the contact, salesrep, and person is returned (if there was enough data to return the person). If more than one contact is found a list of contacts is returned."
  example: []
  syntax:
    content: SalesActivity RequestForInfo(int associateIdForNewContact, string channel, string regarding, string contactName, string personFirstname, string personLastname, string emailAddress, string phoneNumber)
    parameters:
    - id: associateIdForNewContact
      type: System.Int32
      description: Associate id of the person set as "Our Contact" if a new Contact is created. Ensures that the request is assigned to the correct salesman.
    - id: channel
      type: System.String
      description: The requested channel, e.g. "Phone"
    - id: regarding
      type: System.String
      description: The text submitted by the user.
    - id: contactName
      type: System.String
      description: The name of the contact that the RFI will be added to. May be empty.
    - id: personFirstname
      type: System.String
      description: The firstname of the person that the RFI will be added to. May be empty.
    - id: personLastname
      type: System.String
      description: The lastname of the person that the RFI will be added to. May be empty.
    - id: emailAddress
      type: System.String
      description: The email address of the person that the RFI will be added to.
    - id: phoneNumber
      type: System.String
      description: Phone number of the contact or contact's person.
    return:
      type: SuperOffice.CRM.Services.SalesActivity
      description: True if the submission was successful.
    content.vb: Function RequestForInfo(associateIdForNewContact As Integer, channel As String, regarding As String, contactName As String, personFirstname As String, personLastname As String, emailAddress As String, phoneNumber As String) As SalesActivity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo*
  nameWithType.vb: IAppointmentAgent.RequestForInfo(Integer, String, String, String, String, String, String, String)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo(Integer, String, String, String, String, String, String, String)
  name.vb: RequestForInfo(Integer, String, String, String, String, String, String, String)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment(System.Int32)
  id: GetSuggestedAppointment(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointment(int)
  nameWithType: IAppointmentAgent.GetSuggestedAppointment(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a SuggestedAppointment object.
  example: []
  syntax:
    content: SuggestedAppointment GetSuggestedAppointment(int suggestedAppointmentId)
    parameters:
    - id: suggestedAppointmentId
      type: System.Int32
      description: The identifier of the SuggestedAppointment object
    return:
      type: SuperOffice.CRM.Services.SuggestedAppointment
      description: SuggestedAppointment
    content.vb: Function GetSuggestedAppointment(suggestedAppointmentId As Integer) As SuggestedAppointment
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment*
  nameWithType.vb: IAppointmentAgent.GetSuggestedAppointment(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment(Integer)
  name.vb: GetSuggestedAppointment(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity(System.Int32)
  id: GetSuggestedAppointmentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetSuggestedAppointmentEntity(int)
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntity(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a SuggestedAppointmentEntity object.
  example: []
  syntax:
    content: SuggestedAppointmentEntity GetSuggestedAppointmentEntity(int suggestedAppointmentEntityId)
    parameters:
    - id: suggestedAppointmentEntityId
      type: System.Int32
      description: The identifier of the SuggestedAppointmentEntity object
    return:
      type: SuperOffice.CRM.Services.SuggestedAppointmentEntity
      description: SuggestedAppointmentEntity
    content.vb: Function GetSuggestedAppointmentEntity(suggestedAppointmentEntityId As Integer) As SuggestedAppointmentEntity
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity*
  nameWithType.vb: IAppointmentAgent.GetSuggestedAppointmentEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity(Integer)
  name.vb: GetSuggestedAppointmentEntity(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem(System.Int32)
  id: GetTaskListItem(System.Int32)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItem(int)
  nameWithType: IAppointmentAgent.GetTaskListItem(int)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a TaskListItem object.
  example: []
  syntax:
    content: TaskListItem GetTaskListItem(int taskListItemId)
    parameters:
    - id: taskListItemId
      type: System.Int32
      description: The identifier of the TaskListItem object
    return:
      type: SuperOffice.CRM.Services.TaskListItem
      description: TaskListItem
    content.vb: Function GetTaskListItem(taskListItemId As Integer) As TaskListItem
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem*
  nameWithType.vb: IAppointmentAgent.GetTaskListItem(Integer)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem(Integer)
  name.vb: GetTaskListItem(Integer)
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems(System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems(System.Boolean)
  id: GetTaskListItems(System.Boolean)
  parent: SuperOffice.CRM.Services.IAppointmentAgent
  langs:
  - csharp
  - vb
  name: GetTaskListItems(bool)
  nameWithType: IAppointmentAgent.GetTaskListItems(bool)
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems(bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets all takslist items
  example: []
  syntax:
    content: TaskListItem[] GetTaskListItems(bool includeDeleted)
    parameters:
    - id: includeDeleted
      type: System.Boolean
      description: Include deleted items
    return:
      type: SuperOffice.CRM.Services.TaskListItem[]
      description: An array of tasklist items
    content.vb: Function GetTaskListItems(includeDeleted As Boolean) As TaskListItem()
  overload: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems*
  nameWithType.vb: IAppointmentAgent.GetTaskListItems(Boolean)
  fullName.vb: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems(Boolean)
  name.vb: GetTaskListItems(Boolean)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntity
  name: CreateDefaultAppointmentEntity
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntity
- uid: SuperOffice.CRM.Services.AppointmentEntity
  commentId: T:SuperOffice.CRM.Services.AppointmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentEntity.html
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.CRM.Services.AppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveAppointmentEntity_SuperOffice_CRM_Services_AppointmentEntity_
  name: SaveAppointmentEntity
  nameWithType: IAppointmentAgent.SaveAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveAppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_DeleteAppointmentEntity_System_Int32_
  name: DeleteAppointmentEntity
  nameWithType: IAppointmentAgent.DeleteAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeleteAppointmentEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultSuggestedAppointmentEntity
  name: CreateDefaultSuggestedAppointmentEntity
  nameWithType: IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultSuggestedAppointmentEntity
- uid: SuperOffice.CRM.Services.SuggestedAppointmentEntity
  commentId: T:SuperOffice.CRM.Services.SuggestedAppointmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SuggestedAppointmentEntity.html
  name: SuggestedAppointmentEntity
  nameWithType: SuggestedAppointmentEntity
  fullName: SuperOffice.CRM.Services.SuggestedAppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveSuggestedAppointmentEntity_SuperOffice_CRM_Services_SuggestedAppointmentEntity_
  name: SaveSuggestedAppointmentEntity
  nameWithType: IAppointmentAgent.SaveSuggestedAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveSuggestedAppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultTaskListItem
  name: CreateDefaultTaskListItem
  nameWithType: IAppointmentAgent.CreateDefaultTaskListItem
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultTaskListItem
- uid: SuperOffice.CRM.Services.TaskListItem
  commentId: T:SuperOffice.CRM.Services.TaskListItem
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TaskListItem.html
  name: TaskListItem
  nameWithType: TaskListItem
  fullName: SuperOffice.CRM.Services.TaskListItem
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveTaskListItem_SuperOffice_CRM_Services_TaskListItem_
  name: SaveTaskListItem
  nameWithType: IAppointmentAgent.SaveTaskListItem
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveTaskListItem
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointment_System_Int32_
  name: GetAppointment
  nameWithType: IAppointmentAgent.GetAppointment
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointment
- uid: SuperOffice.CRM.Services.Appointment
  commentId: T:SuperOffice.CRM.Services.Appointment
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.Appointment.html
  name: Appointment
  nameWithType: Appointment
  fullName: SuperOffice.CRM.Services.Appointment
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleAppointmentStatus_System_Int32_
  name: ToggleAppointmentStatus
  nameWithType: IAppointmentAgent.ToggleAppointmentStatus
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAppointmentStatus
- uid: SuperOffice.Data.AppointmentStatus
  isExternal: true
  name: AppointmentStatus
  nameWithType: AppointmentStatus
  fullName: SuperOffice.Data.AppointmentStatus
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleActivity_System_String_
  name: ToggleActivity
  nameWithType: IAppointmentAgent.ToggleActivity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.Data.ActivityStatus
  isExternal: true
  name: ActivityStatus
  nameWithType: ActivityStatus
  fullName: SuperOffice.Data.ActivityStatus
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleActivities_System_String___
  name: ToggleActivities
  nameWithType: IAppointmentAgent.ToggleActivities
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleActivities
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SetActivityStatus_System_String___SuperOffice_Data_ActivityStatus_
  name: SetActivityStatus
  nameWithType: IAppointmentAgent.SetActivityStatus
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetActivityStatus
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ToggleAndSetActivities_System_String___
  name: ToggleAndSetActivities
  nameWithType: IAppointmentAgent.ToggleAndSetActivities
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ToggleAndSetActivities
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentEntity_System_Int32_
  name: GetAppointmentEntity
  nameWithType: IAppointmentAgent.GetAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityByType_SuperOffice_Data_TaskType_
  name: CreateDefaultAppointmentEntityByType
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByType
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByType
- uid: SuperOffice.Data.TaskType
  isExternal: true
  name: TaskType
  nameWithType: TaskType
  fullName: SuperOffice.Data.TaskType
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAppointmentEntityFromExisting_System_Int32_System_Int32_
  name: CreateAppointmentEntityFromExisting
  nameWithType: IAppointmentAgent.CreateAppointmentEntityFromExisting
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentEntityFromExisting
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Accept*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.Accept
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_Accept_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_
  name: Accept
  nameWithType: IAppointmentAgent.Accept
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Accept
- uid: SuperOffice.Data.RecurrenceUpdateMode
  isExternal: true
  name: RecurrenceUpdateMode
  nameWithType: RecurrenceUpdateMode
  fullName: SuperOffice.Data.RecurrenceUpdateMode
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAndAccept_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_
  name: CreateAndAccept
  nameWithType: IAppointmentAgent.CreateAndAccept
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAccept
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AcceptWithEmailConfirmation_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_
  name: AcceptWithEmailConfirmation
  nameWithType: IAppointmentAgent.AcceptWithEmailConfirmation
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithEmailConfirmation
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAndAcceptWithEmailConfirmation_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_
  name: CreateAndAcceptWithEmailConfirmation
  nameWithType: IAppointmentAgent.CreateAndAcceptWithEmailConfirmation
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAndAcceptWithEmailConfirmation
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Reject*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.Reject
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_Reject_System_Int32_System_String_SuperOffice_Data_RecurrenceUpdateMode_
  name: Reject
  nameWithType: IAppointmentAgent.Reject
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Reject
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_RejectWithEmailConfirmation_System_Int32_System_String_SuperOffice_Data_RecurrenceUpdateMode_
  name: RejectWithEmailConfirmation
  nameWithType: IAppointmentAgent.RejectWithEmailConfirmation
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithEmailConfirmation
- uid: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_DeclineInvitationFromEmailItem_System_Int32_System_String_
  name: DeclineInvitationFromEmailItem
  nameWithType: IAppointmentAgent.DeclineInvitationFromEmailItem
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.DeclineInvitationFromEmailItem
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetOrganizerName_System_Int32_
  name: GetOrganizerName
  nameWithType: IAppointmentAgent.GetOrganizerName
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetOrganizerName
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Save*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.Save
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_Save_SuperOffice_CRM_Services_AppointmentEntity_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_
  name: Save
  nameWithType: IAppointmentAgent.Save
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Save
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.EMailConnectionInfo
  commentId: T:SuperOffice.CRM.Services.EMailConnectionInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.EMailConnectionInfo.html
  name: EMailConnectionInfo
  nameWithType: EMailConnectionInfo
  fullName: SuperOffice.CRM.Services.EMailConnectionInfo
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Delete*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.Delete
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_Delete_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_
  name: Delete
  nameWithType: IAppointmentAgent.Delete
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Delete
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CalculateDays_SuperOffice_CRM_Services_AppointmentEntity_
  name: CalculateDays
  nameWithType: IAppointmentAgent.CalculateDays
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CalculateDays
- uid: SuperOffice.CRM.Services.RecurrenceInfo
  isExternal: true
  name: RecurrenceInfo
  nameWithType: RecurrenceInfo
  fullName: SuperOffice.CRM.Services.RecurrenceInfo
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ValidateDays_SuperOffice_CRM_Services_AppointmentEntity_System_DateTime___
  name: ValidateDays
  nameWithType: IAppointmentAgent.ValidateDays
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateDays
- uid: System.DateTime[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime[]
  nameWithType: DateTime[]
  fullName: System.DateTime[]
  nameWithType.vb: Date()
  fullName.vb: Date()
  name.vb: Date()
  spec.csharp:
  - uid: System.DateTime
    name: DateTime
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.DateTime
    name: Date
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.datetime
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.RecurrenceDate[]
  isExternal: true
  name: RecurrenceDate[]
  nameWithType: RecurrenceDate[]
  fullName: SuperOffice.CRM.Services.RecurrenceDate[]
  nameWithType.vb: RecurrenceDate()
  fullName.vb: SuperOffice.CRM.Services.RecurrenceDate()
  name.vb: RecurrenceDate()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.RecurrenceDate
    name: RecurrenceDate
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultRecurrence
  name: CreateDefaultRecurrence
  nameWithType: IAppointmentAgent.CreateDefaultRecurrence
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrence
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AssignTo*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AssignTo
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AssignTo_System_Int32_SuperOffice_CRM_Services_ParticipantInfo_SuperOffice_Data_RecurrenceUpdateMode_
  name: AssignTo
  nameWithType: IAppointmentAgent.AssignTo
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AssignTo
- uid: SuperOffice.CRM.Services.ParticipantInfo
  isExternal: true
  name: ParticipantInfo
  nameWithType: ParticipantInfo
  fullName: SuperOffice.CRM.Services.ParticipantInfo
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeen*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SetSeen
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SetSeen_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_
  name: SetSeen
  nameWithType: IAppointmentAgent.SetSeen
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeen
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SetSeenMany_System_Int32___SuperOffice_Data_RecurrenceUpdateMode_
  name: SetSeenMany
  nameWithType: IAppointmentAgent.SetSeenMany
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SetSeenMany
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.Move*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.Move
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_Move_System_Int32_System_DateTime_SuperOffice_Data_RecurrenceUpdateMode_
  name: Move
  nameWithType: IAppointmentAgent.Move
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.Move
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AcceptRejected_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_
  name: AcceptRejected
  nameWithType: IAppointmentAgent.AcceptRejected
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptRejected
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultRecurrenceByDate_System_DateTime_
  name: CreateDefaultRecurrenceByDate
  nameWithType: IAppointmentAgent.CreateDefaultRecurrenceByDate
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultRecurrenceByDate
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CleanUpBookingDeleted_System_Int32___
  name: CleanUpBookingDeleted
  nameWithType: IAppointmentAgent.CleanUpBookingDeleted
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeleted
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CleanUpBookingDeletedWithUpdateMode_System_Int32___SuperOffice_Data_RecurrenceUpdateMode_
  name: CleanUpBookingDeletedWithUpdateMode
  nameWithType: IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpBookingDeletedWithUpdateMode
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CleanUpRecurringBookingDeleted
  name: CleanUpRecurringBookingDeleted
  nameWithType: IAppointmentAgent.CleanUpRecurringBookingDeleted
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CleanUpRecurringBookingDeleted
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityByTypeAndAssociate_SuperOffice_Data_TaskType_System_Int32_
  name: CreateDefaultAppointmentEntityByTypeAndAssociate
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityByTypeAndAssociate
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetCanInsertForAssociates_System_Int32___
  name: GetCanInsertForAssociates
  nameWithType: IAppointmentAgent.GetCanInsertForAssociates
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetCanInsertForAssociates
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentHaveParticipantsWithEmail_System_Int32_
  name: GetAppointmentHaveParticipantsWithEmail
  nameWithType: IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentHaveParticipantsWithEmail
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityFromSaleSuggestion_System_Int32_System_Int32_System_Boolean_System_Int32_
  name: CreateDefaultAppointmentEntityFromSaleSuggestion
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromSaleSuggestion
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetNextSuggestedAppointmentBySale_System_Int32_System_Int32_System_Boolean_
  name: GetNextSuggestedAppointmentBySale
  nameWithType: IAppointmentAgent.GetNextSuggestedAppointmentBySale
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextSuggestedAppointmentBySale
- uid: SuperOffice.CRM.Services.SuggestedAppointment
  commentId: T:SuperOffice.CRM.Services.SuggestedAppointment
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SuggestedAppointment.html
  name: SuggestedAppointment
  nameWithType: SuggestedAppointment
  fullName: SuperOffice.CRM.Services.SuggestedAppointment
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultReOpenAppointment_System_Int32_
  name: CreateDefaultReOpenAppointment
  nameWithType: IAppointmentAgent.CreateDefaultReOpenAppointment
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultReOpenAppointment
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateDefaultAppointmentEntityFromProjectSuggestion_System_Int32_System_Int32_System_Boolean_System_Int32_
  name: CreateDefaultAppointmentEntityFromProjectSuggestion
  nameWithType: IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateDefaultAppointmentEntityFromProjectSuggestion
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CreateAppointmentForUID_SuperOffice_CRM_Services_AppointmentEntity_System_String_
  name: CreateAppointmentForUID
  nameWithType: IAppointmentAgent.CreateAppointmentForUID
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CreateAppointmentForUID
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentFromUID_System_String_
  name: GetAppointmentFromUID
  nameWithType: IAppointmentAgent.GetAppointmentFromUID
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentFromUID
- uid: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_CanAssignToProjectMember_System_Int32_System_Int32_
  name: CanAssignToProjectMember
  nameWithType: IAppointmentAgent.CanAssignToProjectMember
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.CanAssignToProjectMember
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetUIDFromAppointmentId_System_Int32_System_Boolean_
  name: GetUIDFromAppointmentId
  nameWithType: IAppointmentAgent.GetUIDFromAppointmentId
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetUIDFromAppointmentId
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_UpdateAppointmentFromIcsResponse_System_String_System_IO_Stream_
  name: UpdateAppointmentFromIcsResponse
  nameWithType: IAppointmentAgent.UpdateAppointmentFromIcsResponse
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointmentFromIcsResponse
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_ValidateAppointmentEntity_SuperOffice_CRM_Services_AppointmentEntity_
  name: ValidateAppointmentEntity
  nameWithType: IAppointmentAgent.ValidateAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.ValidateAppointmentEntity
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_WillSendEmail_SuperOffice_CRM_Services_AppointmentEntity_
  name: WillSendEmail
  nameWithType: IAppointmentAgent.WillSendEmail
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.WillSendEmail
- uid: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_AcceptWithSmtpEmailConfirmation_System_Int32_SuperOffice_Data_RecurrenceUpdateMode_SuperOffice_CRM_Services_EMailConnectionInfo_
  name: AcceptWithSmtpEmailConfirmation
  nameWithType: IAppointmentAgent.AcceptWithSmtpEmailConfirmation
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.AcceptWithSmtpEmailConfirmation
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_RejectWithSmtpEmailConfirmation_System_Int32_System_String_SuperOffice_Data_RecurrenceUpdateMode_SuperOffice_CRM_Services_EMailConnectionInfo_
  name: RejectWithSmtpEmailConfirmation
  nameWithType: IAppointmentAgent.RejectWithSmtpEmailConfirmation
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RejectWithSmtpEmailConfirmation
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentEmailInvitation_SuperOffice_CRM_Services_AppointmentEntity_System_String_System_String_
  name: GetAppointmentEmailInvitation
  nameWithType: IAppointmentAgent.GetAppointmentEmailInvitation
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentEmailInvitation
- uid: SuperOffice.CRM.Services.EMailEntity
  commentId: T:SuperOffice.CRM.Services.EMailEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.EMailEntity.html
  name: EMailEntity
  nameWithType: EMailEntity
  fullName: SuperOffice.CRM.Services.EMailEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_SaveWithCustomInvitation_SuperOffice_CRM_Services_AppointmentEntity_SuperOffice_Data_RecurrenceUpdateMode_System_Boolean_SuperOffice_CRM_Services_EMailConnectionInfo_SuperOffice_CRM_Services_EMailConnectionInfo_System_String_System_String_System_String_
  name: SaveWithCustomInvitation
  nameWithType: IAppointmentAgent.SaveWithCustomInvitation
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.SaveWithCustomInvitation
- uid: SuperOffice.CRM.Services.AppointmentSaveData
  commentId: T:SuperOffice.CRM.Services.AppointmentSaveData
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentSaveData.html
  name: AppointmentSaveData
  nameWithType: AppointmentSaveData
  fullName: SuperOffice.CRM.Services.AppointmentSaveData
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentList_System_Int32___
  name: GetAppointmentList
  nameWithType: IAppointmentAgent.GetAppointmentList
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentList
- uid: SuperOffice.CRM.Services.Appointment[]
  isExternal: true
  href: SuperOffice.CRM.Services.Appointment.html
  name: Appointment[]
  nameWithType: Appointment[]
  fullName: SuperOffice.CRM.Services.Appointment[]
  nameWithType.vb: Appointment()
  fullName.vb: SuperOffice.CRM.Services.Appointment()
  name.vb: Appointment()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Services.Appointment.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Appointment
    name: Appointment
    isExternal: true
    href: SuperOffice.CRM.Services.Appointment.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyAppointments_System_DateTime_System_DateTime_System_Int32_
  name: GetMyAppointments
  nameWithType: IAppointmentAgent.GetMyAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointments_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_
  name: GetPersonAppointments
  nameWithType: IAppointmentAgent.GetPersonAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyDiary_System_DateTime_System_DateTime_System_Int32_
  name: GetMyDiary
  nameWithType: IAppointmentAgent.GetMyDiary
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyDiary
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyTasks_System_Int32_
  name: GetMyTasks
  nameWithType: IAppointmentAgent.GetMyTasks
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyTasks
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonDiary_System_Int32_System_DateTime_System_DateTime_System_Int32_
  name: GetPersonDiary
  nameWithType: IAppointmentAgent.GetPersonDiary
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonDiary
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonTasks_System_Int32_System_Int32_
  name: GetPersonTasks
  nameWithType: IAppointmentAgent.GetPersonTasks
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonTasks
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByType_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_
  name: GetPersonAppointmentsByType
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByType
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByType
- uid: SuperOffice.Data.AppointmentType
  isExternal: true
  name: AppointmentType
  nameWithType: AppointmentType
  fullName: SuperOffice.Data.AppointmentType
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointments_System_Int32_System_DateTime_System_DateTime_System_Int32_
  name: GetProjectAppointments
  nameWithType: IAppointmentAgent.GetProjectAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByType_System_Int32_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_
  name: GetProjectAppointmentsByType
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByType
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByType
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointments_System_Int32_System_DateTime_System_DateTime_System_Int32_
  name: GetContactAppointments
  nameWithType: IAppointmentAgent.GetContactAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByType_System_Int32_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_
  name: GetContactAppointmentsByType
  nameWithType: IAppointmentAgent.GetContactAppointmentsByType
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByType
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointments_System_Int32_System_DateTime_System_DateTime_System_Int32_
  name: GetProjectMemberAppointments
  nameWithType: IAppointmentAgent.GetProjectMemberAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByType_System_Int32_System_DateTime_System_DateTime_System_Int32_SuperOffice_Data_AppointmentType_
  name: GetProjectMemberAppointmentsByType
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByType
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByType
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByTask_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetPersonAppointmentsByTask
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTask
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTask
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByTasks_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_System_Int32___
  name: GetPersonAppointmentsByTasks
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTasks
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTasks
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPersonAppointmentsByTaskHeading_System_Int32_System_Boolean_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetPersonAppointmentsByTaskHeading
  nameWithType: IAppointmentAgent.GetPersonAppointmentsByTaskHeading
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPersonAppointmentsByTaskHeading
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByTask_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetProjectAppointmentsByTask
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTask
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTask
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByTasks_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32___
  name: GetProjectAppointmentsByTasks
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTasks
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTasks
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectAppointmentsByTaskHeading_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetProjectAppointmentsByTaskHeading
  nameWithType: IAppointmentAgent.GetProjectAppointmentsByTaskHeading
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectAppointmentsByTaskHeading
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByTask_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetProjectMemberAppointmentsByTask
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTask
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTask
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByTasks_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32___
  name: GetProjectMemberAppointmentsByTasks
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTasks
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTasks
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetProjectMemberAppointmentsByTaskHeading_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetProjectMemberAppointmentsByTaskHeading
  nameWithType: IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetProjectMemberAppointmentsByTaskHeading
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByTask_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetContactAppointmentsByTask
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTask
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTask
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByTasks_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32___
  name: GetContactAppointmentsByTasks
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTasks
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTasks
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetContactAppointmentsByTaskHeading_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_
  name: GetContactAppointmentsByTaskHeading
  nameWithType: IAppointmentAgent.GetContactAppointmentsByTaskHeading
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetContactAppointmentsByTaskHeading
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPublishedAppointment_System_Int32_
  name: GetPublishedAppointment
  nameWithType: IAppointmentAgent.GetPublishedAppointment
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointment
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPublishedAppointments_System_Int32___
  name: GetPublishedAppointments
  nameWithType: IAppointmentAgent.GetPublishedAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMyPublishedAppointments
  name: GetMyPublishedAppointments
  nameWithType: IAppointmentAgent.GetMyPublishedAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMyPublishedAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetPublishedProjectAppointments_System_Int32_
  name: GetPublishedProjectAppointments
  nameWithType: IAppointmentAgent.GetPublishedProjectAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetPublishedProjectAppointments
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentsByTaskHeading_System_Int32_
  name: GetAppointmentsByTaskHeading
  nameWithType: IAppointmentAgent.GetAppointmentsByTaskHeading
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentsByTaskHeading
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAssociateDiary_System_Int32_System_DateTime_System_DateTime_System_Int32_
  name: GetAssociateDiary
  nameWithType: IAppointmentAgent.GetAssociateDiary
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociateDiary
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetDiaryByGroup_System_Int32_System_Int32_System_DateTime_System_DateTime_System_Int32_
  name: GetDiaryByGroup
  nameWithType: IAppointmentAgent.GetDiaryByGroup
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDiaryByGroup
- uid: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_UpdateAppointment_System_Int32_System_DateTime_System_DateTime_System_Int32_System_Int32_System_Int32_
  name: UpdateAppointment
  nameWithType: IAppointmentAgent.UpdateAppointment
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.UpdateAppointment
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAssociatesDiary_System_Int32___System_DateTime_System_DateTime_
  name: GetAssociatesDiary
  nameWithType: IAppointmentAgent.GetAssociatesDiary
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiary
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAssociatesDiaryInfo_System_Int32___System_DateTime_System_DateTime_
  name: GetAssociatesDiaryInfo
  nameWithType: IAppointmentAgent.GetAssociatesDiaryInfo
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAssociatesDiaryInfo
- uid: SuperOffice.CRM.Services.AppointmentInfo[]
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentInfo.html
  name: AppointmentInfo[]
  nameWithType: AppointmentInfo[]
  fullName: SuperOffice.CRM.Services.AppointmentInfo[]
  nameWithType.vb: AppointmentInfo()
  fullName.vb: SuperOffice.CRM.Services.AppointmentInfo()
  name.vb: AppointmentInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AppointmentInfo
    name: AppointmentInfo
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AppointmentInfo
    name: AppointmentInfo
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAppointmentRecords_System_Int32_System_Int32_
  name: GetAppointmentRecords
  nameWithType: IAppointmentAgent.GetAppointmentRecords
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAppointmentRecords
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetMySyncAppointments_System_DateTime_System_DateTime_
  name: GetMySyncAppointments
  nameWithType: IAppointmentAgent.GetMySyncAppointments
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetMySyncAppointments
- uid: SuperOffice.CRM.Services.AppointmentSyncData[]
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentSyncData.html
  name: AppointmentSyncData[]
  nameWithType: AppointmentSyncData[]
  fullName: SuperOffice.CRM.Services.AppointmentSyncData[]
  nameWithType.vb: AppointmentSyncData()
  fullName.vb: SuperOffice.CRM.Services.AppointmentSyncData()
  name.vb: AppointmentSyncData()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AppointmentSyncData
    name: AppointmentSyncData
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentSyncData.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AppointmentSyncData
    name: AppointmentSyncData
    isExternal: true
    href: SuperOffice.CRM.Services.AppointmentSyncData.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetDayInformationListByDatesAndAssociate_System_DateTime_System_DateTime_System_Int32_
  name: GetDayInformationListByDatesAndAssociate
  nameWithType: IAppointmentAgent.GetDayInformationListByDatesAndAssociate
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetDayInformationListByDatesAndAssociate
- uid: SuperOffice.CRM.Services.DayInformationListItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.DayInformationListItem.html
  name: DayInformationListItem[]
  nameWithType: DayInformationListItem[]
  fullName: SuperOffice.CRM.Services.DayInformationListItem[]
  nameWithType.vb: DayInformationListItem()
  fullName.vb: SuperOffice.CRM.Services.DayInformationListItem()
  name.vb: DayInformationListItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.DayInformationListItem
    name: DayInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.DayInformationListItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.DayInformationListItem
    name: DayInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.DayInformationListItem.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetActivityInformationListByDatesAndAssociate_System_DateTime_System_DateTime_System_Int32_
  name: GetActivityInformationListByDatesAndAssociate
  nameWithType: IAppointmentAgent.GetActivityInformationListByDatesAndAssociate
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetActivityInformationListByDatesAndAssociate
- uid: SuperOffice.CRM.Services.ActivityInformationListItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.ActivityInformationListItem.html
  name: ActivityInformationListItem[]
  nameWithType: ActivityInformationListItem[]
  fullName: SuperOffice.CRM.Services.ActivityInformationListItem[]
  nameWithType.vb: ActivityInformationListItem()
  fullName.vb: SuperOffice.CRM.Services.ActivityInformationListItem()
  name.vb: ActivityInformationListItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ActivityInformationListItem
    name: ActivityInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.ActivityInformationListItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ActivityInformationListItem
    name: ActivityInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.ActivityInformationListItem.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetRedLetterInformationListByDatesAndAssociate_System_DateTime_System_DateTime_System_Int32_
  name: GetRedLetterInformationListByDatesAndAssociate
  nameWithType: IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetRedLetterInformationListByDatesAndAssociate
- uid: SuperOffice.CRM.Services.RedLetterInformationListItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.RedLetterInformationListItem.html
  name: RedLetterInformationListItem[]
  nameWithType: RedLetterInformationListItem[]
  fullName: SuperOffice.CRM.Services.RedLetterInformationListItem[]
  nameWithType.vb: RedLetterInformationListItem()
  fullName.vb: SuperOffice.CRM.Services.RedLetterInformationListItem()
  name.vb: RedLetterInformationListItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.RedLetterInformationListItem
    name: RedLetterInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.RedLetterInformationListItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.RedLetterInformationListItem
    name: RedLetterInformationListItem
    isExternal: true
    href: SuperOffice.CRM.Services.RedLetterInformationListItem.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetAlarms_System_Boolean_System_Boolean_System_Int32_
  name: GetAlarms
  nameWithType: IAppointmentAgent.GetAlarms
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetAlarms
- uid: SuperOffice.CRM.Services.MultiAlarmData
  commentId: T:SuperOffice.CRM.Services.MultiAlarmData
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.MultiAlarmData.html
  name: MultiAlarmData
  nameWithType: MultiAlarmData
  fullName: SuperOffice.CRM.Services.MultiAlarmData
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetNextAvailableTime_System_Int32___System_DateTime_System_DateTime_System_Int32_System_Boolean_
  name: GetNextAvailableTime
  nameWithType: IAppointmentAgent.GetNextAvailableTime
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetNextAvailableTime
- uid: SuperOffice.CRM.Services.NextAvailableTime[]
  isExternal: true
  href: SuperOffice.CRM.Services.NextAvailableTime.html
  name: NextAvailableTime[]
  nameWithType: NextAvailableTime[]
  fullName: SuperOffice.CRM.Services.NextAvailableTime[]
  nameWithType.vb: NextAvailableTime()
  fullName.vb: SuperOffice.CRM.Services.NextAvailableTime()
  name.vb: NextAvailableTime()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.NextAvailableTime
    name: NextAvailableTime
    isExternal: true
    href: SuperOffice.CRM.Services.NextAvailableTime.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.NextAvailableTime
    name: NextAvailableTime
    isExternal: true
    href: SuperOffice.CRM.Services.NextAvailableTime.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GenerateLead_System_Int32_System_String_System_String_System_Int32_System_String_System_String_System_String_System_String_System_String_System_String_System_String_System_String_
  name: GenerateLead
  nameWithType: IAppointmentAgent.GenerateLead
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GenerateLead
- uid: SuperOffice.CRM.Services.SalesActivity
  commentId: T:SuperOffice.CRM.Services.SalesActivity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SalesActivity.html
  name: SalesActivity
  nameWithType: SalesActivity
  fullName: SuperOffice.CRM.Services.SalesActivity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_RequestForInfo_System_Int32_System_String_System_String_System_String_System_String_System_String_System_String_System_String_
  name: RequestForInfo
  nameWithType: IAppointmentAgent.RequestForInfo
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.RequestForInfo
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetSuggestedAppointment_System_Int32_
  name: GetSuggestedAppointment
  nameWithType: IAppointmentAgent.GetSuggestedAppointment
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointment
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetSuggestedAppointmentEntity_System_Int32_
  name: GetSuggestedAppointmentEntity
  nameWithType: IAppointmentAgent.GetSuggestedAppointmentEntity
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetSuggestedAppointmentEntity
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetTaskListItem_System_Int32_
  name: GetTaskListItem
  nameWithType: IAppointmentAgent.GetTaskListItem
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItem
- uid: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems*
  commentId: Overload:SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems
  isExternal: true
  href: SuperOffice.CRM.Services.IAppointmentAgent.html#SuperOffice_CRM_Services_IAppointmentAgent_GetTaskListItems_System_Boolean_
  name: GetTaskListItems
  nameWithType: IAppointmentAgent.GetTaskListItems
  fullName: SuperOffice.CRM.Services.IAppointmentAgent.GetTaskListItems
- uid: SuperOffice.CRM.Services.TaskListItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.TaskListItem.html
  name: TaskListItem[]
  nameWithType: TaskListItem[]
  fullName: SuperOffice.CRM.Services.TaskListItem[]
  nameWithType.vb: TaskListItem()
  fullName.vb: SuperOffice.CRM.Services.TaskListItem()
  name.vb: TaskListItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.TaskListItem
    name: TaskListItem
    isExternal: true
    href: SuperOffice.CRM.Services.TaskListItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.TaskListItem
    name: TaskListItem
    isExternal: true
    href: SuperOffice.CRM.Services.TaskListItem.html
  - name: (
  - name: )
