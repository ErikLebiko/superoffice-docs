### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ITicketAgent
  commentId: T:SuperOffice.CRM.Services.ITicketAgent
  id: ITicketAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  - SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  - SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
  - SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
  - SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
  - SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
  - SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
  - SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
  - SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
  - SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
  - SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  - SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  - SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  - SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  - SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  - SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  - SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
  - SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  - SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  - SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  - SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
  langs:
  - csharp
  - vb
  name: ITicketAgent
  nameWithType: ITicketAgent
  fullName: SuperOffice.CRM.Services.ITicketAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Ticket Agent

    Agent used for Ticket functions
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (TicketAgent agent = new TicketAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Ticket Agent", "Interface for the Ticket Agent. Agent used for Ticket functions")]

      public interface ITicketAgent : IAgent
    content.vb: >-
      <Agent("Ticket Agent", "Interface for the Ticket Agent. Agent used for Ticket functions")>

      Public Interface ITicketAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Ticket Agent
    - type: System.String
      value: Interface for the Ticket Agent. Agent used for Ticket functions
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
  id: CreateDefaultAttachmentEntity
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultAttachmentEntity()
  nameWithType: ITicketAgent.CreateDefaultAttachmentEntity()
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new AttachmentEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: AttachmentEntity CreateDefaultAttachmentEntity()
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: New AttachmentEntity with default values
    content.vb: Function CreateDefaultAttachmentEntity() As AttachmentEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity*
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  id: SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SaveAttachmentEntity(AttachmentEntity)
  nameWithType: ITicketAgent.SaveAttachmentEntity(AttachmentEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity(SuperOffice.CRM.Services.AttachmentEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing AttachmentEntity or creates a new AttachmentEntity if the id parameter is empty
  example: []
  syntax:
    content: AttachmentEntity SaveAttachmentEntity(AttachmentEntity attachmentEntity)
    parameters:
    - id: attachmentEntity
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: The AttachmentEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: New or updated AttachmentEntity
    content.vb: Function SaveAttachmentEntity(attachmentEntity As AttachmentEntity) As AttachmentEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity*
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
  id: CreateDefaultTicketEntity
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketEntity()
  nameWithType: ITicketAgent.CreateDefaultTicketEntity()
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new TicketEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: TicketEntity CreateDefaultTicketEntity()
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: New TicketEntity with default values
    content.vb: Function CreateDefaultTicketEntity() As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity*
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  id: SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketEntity(TicketEntity)
  nameWithType: ITicketAgent.SaveTicketEntity(TicketEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity(SuperOffice.CRM.Services.TicketEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing TicketEntity or creates a new TicketEntity if the id parameter is empty
  example: []
  syntax:
    content: TicketEntity SaveTicketEntity(TicketEntity ticketEntity)
    parameters:
    - id: ticketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The TicketEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: New or updated TicketEntity
    content.vb: Function SaveTicketEntity(ticketEntity As TicketEntity) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity*
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
  id: CreateDefaultTicketMessageEntity
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTicketMessageEntity()
  nameWithType: ITicketAgent.CreateDefaultTicketMessageEntity()
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new TicketMessageEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: TicketMessageEntity CreateDefaultTicketMessageEntity()
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: New TicketMessageEntity with default values
    content.vb: Function CreateDefaultTicketMessageEntity() As TicketMessageEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity*
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  id: SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntity(TicketMessageEntity)
  nameWithType: ITicketAgent.SaveTicketMessageEntity(TicketMessageEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity(SuperOffice.CRM.Services.TicketMessageEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing TicketMessageEntity or creates a new TicketMessageEntity if the id parameter is empty
  example: []
  syntax:
    content: TicketMessageEntity SaveTicketMessageEntity(TicketMessageEntity ticketMessageEntity)
    parameters:
    - id: ticketMessageEntity
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The TicketMessageEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: New or updated TicketMessageEntity
    content.vb: Function SaveTicketMessageEntity(ticketMessageEntity As TicketMessageEntity) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity*
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(System.Int32)
  id: GetAttachmentEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentEntity(int)
  nameWithType: ITicketAgent.GetAttachmentEntity(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a AttachmentEntity object.
  example: []
  syntax:
    content: AttachmentEntity GetAttachmentEntity(int attachmentEntityId)
    parameters:
    - id: attachmentEntityId
      type: System.Int32
      description: The identifier of the AttachmentEntity object
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: AttachmentEntity
    content.vb: Function GetAttachmentEntity(attachmentEntityId As Integer) As AttachmentEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity*
  nameWithType.vb: ITicketAgent.GetAttachmentEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity(Integer)
  name.vb: GetAttachmentEntity(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(System.Int32)
  id: CopyFromCRMDocument(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: CopyFromCRMDocument(int)
  nameWithType: ITicketAgent.CopyFromCRMDocument(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Copy CRM document to an attachment
  example: []
  syntax:
    content: AttachmentEntity CopyFromCRMDocument(int documentId)
    parameters:
    - id: documentId
      type: System.Int32
      description: The id of the document to copy to an attachment
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity
      description: ''
    content.vb: Function CopyFromCRMDocument(documentId As Integer) As AttachmentEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument*
  nameWithType.vb: ITicketAgent.CopyFromCRMDocument(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument(Integer)
  name.vb: CopyFromCRMDocument(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(System.String,System.Int32)
  id: CopyToTempFile(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: CopyToTempFile(string, int)
  nameWithType: ITicketAgent.CopyToTempFile(string, int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(string, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Copy ticket attachment to temporary file. Needed for existing document dialog compatibility
  example: []
  syntax:
    content: string CopyToTempFile(string filename, int attachmentId)
    parameters:
    - id: filename
      type: System.String
      description: Preferred filename
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to copy
    return:
      type: System.String
      description: Temporary document filename
    content.vb: Function CopyToTempFile(filename As String, attachmentId As Integer) As String
  overload: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile*
  nameWithType.vb: ITicketAgent.CopyToTempFile(String, Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile(String, Integer)
  name.vb: CopyToTempFile(String, Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(System.Int32,System.IO.Stream)
  id: UploadAttachment(System.Int32,System.IO.Stream)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: UploadAttachment(int, Stream)
  nameWithType: ITicketAgent.UploadAttachment(int, Stream)
  fullName: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(int, System.IO.Stream)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Upload the content for an attachment
  example: []
  syntax:
    content: void UploadAttachment(int attachmentId, Stream content)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment row, for which to attach the upload data
    - id: content
      type: System.IO.Stream
      description: A stream to the content to be uploaded
    content.vb: Sub UploadAttachment(attachmentId As Integer, content As Stream)
  overload: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment*
  nameWithType.vb: ITicketAgent.UploadAttachment(Integer, Stream)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment(Integer, System.IO.Stream)
  name.vb: UploadAttachment(Integer, Stream)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(System.Int32)
  id: GetAttachmentStream(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentStream(int)
  nameWithType: ITicketAgent.GetAttachmentStream(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the content of an attachment
  example: []
  syntax:
    content: Stream GetAttachmentStream(int attachmentId)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    return:
      type: System.IO.Stream
      description: A stream to the attachment content
    content.vb: Function GetAttachmentStream(attachmentId As Integer) As Stream
  overload: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream*
  nameWithType.vb: ITicketAgent.GetAttachmentStream(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream(Integer)
  name.vb: GetAttachmentStream(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicket(System.Int32)
  id: GetTicket(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicket(int)
  nameWithType: ITicketAgent.GetTicket(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicket(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a Ticket object.
  example: []
  syntax:
    content: Ticket GetTicket(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The identifier of the Ticket object
    return:
      type: SuperOffice.CRM.Services.Ticket
      description: Ticket
    content.vb: Function GetTicket(ticketId As Integer) As Ticket
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicket*
  nameWithType.vb: ITicketAgent.GetTicket(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicket(Integer)
  name.vb: GetTicket(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTickets(System.Int32[])
  id: GetTickets(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTickets(int[])
  nameWithType: ITicketAgent.GetTickets(int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTickets(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get multiple tickets
  example: []
  syntax:
    content: Ticket[] GetTickets(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: The ids of tickets to get
    return:
      type: SuperOffice.CRM.Services.Ticket[]
      description: Returns array of tickets in same order as input ids
    content.vb: Function GetTickets(ticketIds As Integer()) As Ticket()
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTickets*
  nameWithType.vb: ITicketAgent.GetTickets(Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTickets(Integer())
  name.vb: GetTickets(Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(System.Int32)
  id: GetTicketEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketEntity(int)
  nameWithType: ITicketAgent.GetTicketEntity(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a TicketEntity object.
  example: []
  syntax:
    content: TicketEntity GetTicketEntity(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The identifier of the TicketEntity object
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: TicketEntity
    content.vb: Function GetTicketEntity(ticketEntityId As Integer) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity*
  nameWithType.vb: ITicketAgent.GetTicketEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity(Integer)
  name.vb: GetTicketEntity(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(System.Int32)
  id: GetForRmUi(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetForRmUi(int)
  nameWithType: ITicketAgent.GetForRmUi(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Get a ticket entity, adapted to the specific needs of the Request Management UI. WARNING: This endpoint is not guaranteed to be stable/compatible between versions'
  example: []
  syntax:
    content: TicketEntity GetForRmUi(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Primary key of ticket to fetch
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity. Information is filtered/adapted to the current needs of the UI
    content.vb: Function GetForRmUi(ticketId As Integer) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi*
  nameWithType.vb: ITicketAgent.GetForRmUi(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi(Integer)
  name.vb: GetForRmUi(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(System.Int32)
  id: DeleteTicketEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketEntity(int)
  nameWithType: ITicketAgent.DeleteTicketEntity(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Delete a ticket
  example: []
  syntax:
    content: void DeleteTicketEntity(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The ticket to delete
    content.vb: Sub DeleteTicketEntity(ticketEntityId As Integer)
  overload: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity*
  nameWithType.vb: ITicketAgent.DeleteTicketEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity(Integer)
  name.vb: DeleteTicketEntity(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(System.Int32)
  id: NotifyNewTicket(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: NotifyNewTicket(int)
  nameWithType: ITicketAgent.NotifyNewTicket(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Notify user agents about the creation of a new ticket
  example: []
  syntax:
    content: void NotifyNewTicket(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to notify about
    content.vb: Sub NotifyNewTicket(ticketEntityId As Integer)
  overload: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket*
  nameWithType.vb: ITicketAgent.NotifyNewTicket(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket(Integer)
  name.vb: NotifyNewTicket(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(System.Int32)
  id: NotifyNewTicketMessage(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: NotifyNewTicketMessage(int)
  nameWithType: ITicketAgent.NotifyNewTicketMessage(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Notify user agents about the creation of a new message on a ticket
  example: []
  syntax:
    content: void NotifyNewTicketMessage(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to notify about
    content.vb: Sub NotifyNewTicketMessage(ticketEntityId As Integer)
  overload: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage*
  nameWithType.vb: ITicketAgent.NotifyNewTicketMessage(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage(Integer)
  name.vb: NotifyNewTicketMessage(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(System.Int32)
  id: GetTicketAttachments(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketAttachments(int)
  nameWithType: ITicketAgent.GetTicketAttachments(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get attachment infos for all attachments connected to messages in specified ticket
  example: []
  syntax:
    content: AttachmentEntity[] GetTicketAttachments(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to get attachment infos from
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity[]
      description: An array containing attachment info objects for all the attachments
    content.vb: Function GetTicketAttachments(ticketEntityId As Integer) As AttachmentEntity()
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments*
  nameWithType.vb: ITicketAgent.GetTicketAttachments(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments(Integer)
  name.vb: GetTicketAttachments(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(System.Int32[])
  id: ValidateAttachments(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: ValidateAttachments(int[])
  nameWithType: ITicketAgent.ValidateAttachments(int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check attachments, return validation result for each item
  example: []
  syntax:
    content: AttachmentValidationResult[] ValidateAttachments(int[] attachmentIds)
    parameters:
    - id: attachmentIds
      type: System.Int32[]
      description: The IDs of the attachments to validate
    return:
      type: SuperOffice.CRM.Services.AttachmentValidationResult[]
      description: Validation result
    content.vb: Function ValidateAttachments(attachmentIds As Integer()) As AttachmentValidationResult()
  overload: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments*
  nameWithType.vb: ITicketAgent.ValidateAttachments(Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments(Integer())
  name.vb: ValidateAttachments(Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  id: SetTicketReadByOwner(System.Int32,SuperOffice.Data.TicketReadStatus,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SetTicketReadByOwner(int, TicketReadStatus, bool)
  nameWithType: ITicketAgent.SetTicketReadByOwner(int, TicketReadStatus, bool)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(int, SuperOffice.Data.TicketReadStatus, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Set the ReadByOwner status for a ticket. It will only have an effect if the calling user is the same as the owner of the ticket
  example: []
  syntax:
    content: TicketEntity SetTicketReadByOwner(int ticketEntityId, TicketReadStatus readStatus, bool checkEscalating)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to set
    - id: readStatus
      type: SuperOffice.Data.TicketReadStatus
      description: The read status to set. See the enum for explanation of the different colors. Setting Unknown does nothing
    - id: checkEscalating
      type: System.Boolean
      description: If true, then the escalation system will be called and executed when setting the ReadByOwner
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity after setting the ReadByOwner
    content.vb: Function SetTicketReadByOwner(ticketEntityId As Integer, readStatus As TicketReadStatus, checkEscalating As Boolean) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner*
  nameWithType.vb: ITicketAgent.SetTicketReadByOwner(Integer, TicketReadStatus, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner(Integer, SuperOffice.Data.TicketReadStatus, Boolean)
  name.vb: SetTicketReadByOwner(Integer, TicketReadStatus, Boolean)
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  id: SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketEntityWithNotify(TicketEntity, bool)
  nameWithType: ITicketAgent.SaveTicketEntityWithNotify(TicketEntity, bool)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Saves a ticket and performs any user notifications
  example: []
  syntax:
    content: TicketEntity SaveTicketEntityWithNotify(TicketEntity newEntity, bool notify)
    parameters:
    - id: newEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket to save
    - id: notify
      type: System.Boolean
      description: If true, then the notifications will be sent
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly saved entity
    content.vb: Function SaveTicketEntityWithNotify(newEntity As TicketEntity, notify As Boolean) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify*
  nameWithType.vb: ITicketAgent.SaveTicketEntityWithNotify(TicketEntity, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify(SuperOffice.CRM.Services.TicketEntity, Boolean)
  name.vb: SaveTicketEntityWithNotify(TicketEntity, Boolean)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
  id: GetNextInQueue
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetNextInQueue()
  nameWithType: ITicketAgent.GetNextInQueue()
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Assign a ticket to the caller based on intelligent queue system
  example: []
  syntax:
    content: TicketEntity GetNextInQueue()
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity after assigning it to the caller
    content.vb: Function GetNextInQueue() As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue*
- uid: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(System.Int32)
  id: ProcessTicketWhenRead(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: ProcessTicketWhenRead(int)
  nameWithType: ITicketAgent.ProcessTicketWhenRead(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'When a user view/read a ticket, a number of action should be performed: set read status, escalation handling, remove notifications, etc. Which actions will be performed depends on owner, caller and configuration'
  example: []
  syntax:
    content: TicketEntity ProcessTicketWhenRead(int ticketEntityId)
    parameters:
    - id: ticketEntityId
      type: System.Int32
      description: The id of the ticket to mark as read
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The ticket entity after marking it as read
    content.vb: Function ProcessTicketWhenRead(ticketEntityId As Integer) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead*
  nameWithType.vb: ITicketAgent.ProcessTicketWhenRead(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead(Integer)
  name.vb: ProcessTicketWhenRead(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  id: SplitTicket(System.Int32,System.Int32,System.DateTime,System.Int32[],SuperOffice.CRM.Services.TicketEntity)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SplitTicket(int, int, DateTime, int[], TicketEntity)
  nameWithType: ITicketAgent.SplitTicket(int, int, DateTime, int[], TicketEntity)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(int, int, System.DateTime, int[], SuperOffice.CRM.Services.TicketEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Save new ticket and move/copy data from existing ticket in a single request. Specified messages will be moved.
  example: []
  syntax:
    content: TicketEntity SplitTicket(int sourceTicketEntityId, int sourceTicketEntityStatusId, DateTime sourceTicketEntityActivate, int[] transferMessageIds, TicketEntity newTicketEntity)
    parameters:
    - id: sourceTicketEntityId
      type: System.Int32
      description: The id of the ticket to split
    - id: sourceTicketEntityStatusId
      type: System.Int32
      description: The id of the source ticket's status
    - id: sourceTicketEntityActivate
      type: System.DateTime
      description: The activate date of the source ticket
    - id: transferMessageIds
      type: System.Int32[]
      description: IDs of messages that should be transferred from the original ticket to the new one
    - id: newTicketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The new ticket to save. Includes new values for simple properties like title, category, status, etc., but not messages.
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly created entity
    content.vb: Function SplitTicket(sourceTicketEntityId As Integer, sourceTicketEntityStatusId As Integer, sourceTicketEntityActivate As Date, transferMessageIds As Integer(), newTicketEntity As TicketEntity) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SplitTicket*
  nameWithType.vb: ITicketAgent.SplitTicket(Integer, Integer, Date, Integer(), TicketEntity)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SplitTicket(Integer, Integer, Date, Integer(), SuperOffice.CRM.Services.TicketEntity)
  name.vb: SplitTicket(Integer, Integer, Date, Integer(), TicketEntity)
- uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  id: SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity,SuperOffice.CRM.Services.TicketEntity,SuperOffice.CRM.Services.TicketMessageEntity,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, int[])
  nameWithType: ITicketAgent.SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity, SuperOffice.CRM.Services.TicketEntity, SuperOffice.CRM.Services.TicketMessageEntity, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create new ticket and move/copy data from existing ticket in addition update old message and save new message in a single request.
  example: []
  syntax:
    content: TicketEntity SplitTicketMessage(TicketMessageEntity sourceTicketMessage, TicketEntity newTicketEntity, TicketMessageEntity newTicketMessage, int[] transferAttachmentsIds)
    parameters:
    - id: sourceTicketMessage
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The message being splitted, content can be modified as part of the split.
    - id: newTicketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: The new ticket to save. Includes new values for simple properties like title, category, status, etc., but not messages.
    - id: newTicketMessage
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The new message to be saved
    - id: transferAttachmentsIds
      type: System.Int32[]
      description: IDs of attachments that should be transferred from the original message to the new one
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly created entity
    content.vb: Function SplitTicketMessage(sourceTicketMessage As TicketMessageEntity, newTicketEntity As TicketEntity, newTicketMessage As TicketMessageEntity, transferAttachmentsIds As Integer()) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage*
  nameWithType.vb: ITicketAgent.SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage(SuperOffice.CRM.Services.TicketMessageEntity, SuperOffice.CRM.Services.TicketEntity, SuperOffice.CRM.Services.TicketMessageEntity, Integer())
  name.vb: SplitTicketMessage(TicketMessageEntity, TicketEntity, TicketMessageEntity, Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  id: UpdateTicketsReadStatus(System.Int32[],SuperOffice.Data.TicketReadStatus)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: UpdateTicketsReadStatus(int[], TicketReadStatus)
  nameWithType: ITicketAgent.UpdateTicketsReadStatus(int[], TicketReadStatus)
  fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(int[], SuperOffice.Data.TicketReadStatus)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method changes multiple tickets' read status
  example: []
  syntax:
    content: int[] UpdateTicketsReadStatus(int[] ticketIds, TicketReadStatus newStatus)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ticket ids to be updated
    - id: newStatus
      type: SuperOffice.Data.TicketReadStatus
      description: New read status
    return:
      type: System.Int32[]
      description: Updated ticket ids
    content.vb: Function UpdateTicketsReadStatus(ticketIds As Integer(), newStatus As TicketReadStatus) As Integer()
  overload: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus*
  nameWithType.vb: ITicketAgent.UpdateTicketsReadStatus(Integer(), TicketReadStatus)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus(Integer(), SuperOffice.Data.TicketReadStatus)
  name.vb: UpdateTicketsReadStatus(Integer(), TicketReadStatus)
- uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  id: UpdateTicketsReadStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],SuperOffice.Data.TicketReadStatus)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: UpdateTicketsReadStatusByProvider(string, ArchiveRestrictionInfo[], TicketReadStatus)
  nameWithType: ITicketAgent.UpdateTicketsReadStatusByProvider(string, ArchiveRestrictionInfo[], TicketReadStatus)
  fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(string, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], SuperOffice.Data.TicketReadStatus)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This method changes multiple tickets' read status
  example: []
  syntax:
    content: int[] UpdateTicketsReadStatusByProvider(string provider, ArchiveRestrictionInfo[] restrictions, TicketReadStatus newStatus)
    parameters:
    - id: provider
      type: System.String
      description: Name of the provider that returns ticket rows.
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Query restrictions to be added to provider. Fixed providers, such as LastTicketsProvider, FavouriteTicketsProvider etc. already have mandatory restrictions setup - in such case extra restrictions will be combined, however for general use case for fixed providers you can pass an empty array and provider will return default results. For selection providers generally you should pass selectionId as a restriction.
    - id: newStatus
      type: SuperOffice.Data.TicketReadStatus
      description: New read status
    return:
      type: System.Int32[]
      description: Updated ticket ids
    content.vb: Function UpdateTicketsReadStatusByProvider(provider As String, restrictions As ArchiveRestrictionInfo(), newStatus As TicketReadStatus) As Integer()
  overload: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider*
  nameWithType.vb: ITicketAgent.UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo(), TicketReadStatus)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider(String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), SuperOffice.Data.TicketReadStatus)
  name.vb: UpdateTicketsReadStatusByProvider(String, ArchiveRestrictionInfo(), TicketReadStatus)
- uid: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  id: MergeTickets(SuperOffice.CRM.Services.TicketEntity,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: MergeTickets(TicketEntity, int[])
  nameWithType: ITicketAgent.MergeTickets(TicketEntity, int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Merge one or more tickets into one primary ticket
  example: []
  syntax:
    content: TicketEntity MergeTickets(TicketEntity mergedTicketEntity, int[] secondaryTicketIds)
    parameters:
    - id: mergedTicketEntity
      type: SuperOffice.CRM.Services.TicketEntity
      description: Merged ticket entity
    - id: secondaryTicketIds
      type: System.Int32[]
      description: Ids of secondary tickets
    return:
      type: SuperOffice.CRM.Services.TicketEntity
      description: The newly merged entity
    content.vb: Function MergeTickets(mergedTicketEntity As TicketEntity, secondaryTicketIds As Integer()) As TicketEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.MergeTickets*
  nameWithType.vb: ITicketAgent.MergeTickets(TicketEntity, Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.MergeTickets(SuperOffice.CRM.Services.TicketEntity, Integer())
  name.vb: MergeTickets(TicketEntity, Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(System.Int32[])
  id: SetDeletedStatusByIds(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SetDeletedStatusByIds(int[])
  nameWithType: ITicketAgent.SetDeletedStatusByIds(int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets tickets' status to Deleted. After a grace period these tickets will be deleted by a background job.
  example: []
  syntax:
    content: int[] SetDeletedStatusByIds(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be set for deletion.
    return:
      type: System.Int32[]
      description: Ids of tickets set for deletion.
    content.vb: Function SetDeletedStatusByIds(ticketIds As Integer()) As Integer()
  overload: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds*
  nameWithType.vb: ITicketAgent.SetDeletedStatusByIds(Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds(Integer())
  name.vb: SetDeletedStatusByIds(Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: SetDeletedStatusByProvider(System.String,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SetDeletedStatusByProvider(string, ArchiveRestrictionInfo[])
  nameWithType: ITicketAgent.SetDeletedStatusByProvider(string, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(string, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets tickets' status to Deleted. After a grace period these tickets will be deleted by a background job.
  example: []
  syntax:
    content: int[] SetDeletedStatusByProvider(string providerName, ArchiveRestrictionInfo[] restrictions)
    parameters:
    - id: providerName
      type: System.String
      description: Name of the provider that returns ticket rows.
    - id: restrictions
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Query restrictions to be added to provider. Fixed providers, such as LastTicketsProvider, FavouriteTicketsProvider etc. already have mandatory restrictions setup - in such case extra restrictions will be combined, however for general use case for fixed providers you can pass an empty array and provider will return default results. For selection providers generally you should pass selectionId as a restriction.
    return:
      type: System.Int32[]
      description: Ids of tickets set for deletion.
    content.vb: Function SetDeletedStatusByProvider(providerName As String, restrictions As ArchiveRestrictionInfo()) As Integer()
  overload: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider*
  nameWithType.vb: ITicketAgent.SetDeletedStatusByProvider(String, ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider(String, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetDeletedStatusByProvider(String, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(System.Int32[])
  id: UndeleteByIds(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: UndeleteByIds(int[])
  nameWithType: ITicketAgent.UndeleteByIds(int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Restores deleted tickets by their ids. Status is set to a default open status defined in Registry table
  example: []
  syntax:
    content: void UndeleteByIds(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be restored.
    content.vb: Sub UndeleteByIds(ticketIds As Integer())
  overload: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds*
  nameWithType.vb: ITicketAgent.UndeleteByIds(Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds(Integer())
  name.vb: UndeleteByIds(Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(System.Int32)
  id: ResolveTicketId(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: ResolveTicketId(int)
  nameWithType: ITicketAgent.ResolveTicketId(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Ticket can be connected (merged) to another ticket. This method traverses through its connection(s) and returns proper ticketId
  example: []
  syntax:
    content: int ResolveTicketId(int ticketId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: Potentially correct ticketId
    return:
      type: System.Int32
      description: Correct ticketId. Returns 0 in case ticket does not exists
    content.vb: Function ResolveTicketId(ticketId As Integer) As Integer
  overload: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId*
  nameWithType.vb: ITicketAgent.ResolveTicketId(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId(Integer)
  name.vb: ResolveTicketId(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  id: BatchForward(System.Int32[],System.String[],System.String[],System.String[],System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: BatchForward(int[], string[], string[], string[], string, bool)
  nameWithType: ITicketAgent.BatchForward(int[], string[], string[], string[], string, bool)
  fullName: SuperOffice.CRM.Services.ITicketAgent.BatchForward(int[], string[], string[], string[], string, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Forwards selected tickets to specified recipients. This method starts a batch task.
  example: []
  syntax:
    content: int BatchForward(int[] ticketIds, string[] to, string[] cc, string[] bcc, string comment, bool closeTicket)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: Ids of tickets to be forwarded.
    - id: to
      type: System.String[]
      description: The To-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com&gt;).
    - id: cc
      type: System.String[]
      description: The Cc-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com&gt;).
    - id: bcc
      type: System.String[]
      description: The Bcc-recipients. Each recipient must be in correct mailbox format (john@example.com or John Doe &lt;john@example.com&gt;).
    - id: comment
      type: System.String
      description: Comment will be included before ticket messages. Might be empty
    - id: closeTicket
      type: System.Boolean
      description: If true, ticket will be closed after forwarding
    return:
      type: System.Int32
      description: ID of the new batch task.
    content.vb: Function BatchForward(ticketIds As Integer(), [to] As String(), cc As String(), bcc As String(), comment As String, closeTicket As Boolean) As Integer
  overload: SuperOffice.CRM.Services.ITicketAgent.BatchForward*
  nameWithType.vb: ITicketAgent.BatchForward(Integer(), String(), String(), String(), String, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.BatchForward(Integer(), String(), String(), String(), String, Boolean)
  name.vb: BatchForward(Integer(), String(), String(), String(), String, Boolean)
- uid: SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  id: BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: BatchReply(TicketBatchReplyData)
  nameWithType: ITicketAgent.BatchReply(TicketBatchReplyData)
  fullName: SuperOffice.CRM.Services.ITicketAgent.BatchReply(SuperOffice.CRM.Services.TicketBatchReplyData)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Replies to the specified tickets. This method starts a batch task.
  example: []
  syntax:
    content: int BatchReply(TicketBatchReplyData batchReplyData)
    parameters:
    - id: batchReplyData
      type: SuperOffice.CRM.Services.TicketBatchReplyData
      description: All data needed to initiate a mass ticket reply sending.
    return:
      type: System.Int32
      description: ID of the new batch task.
    content.vb: Function BatchReply(batchReplyData As TicketBatchReplyData) As Integer
  overload: SuperOffice.CRM.Services.ITicketAgent.BatchReply*
- uid: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.ClearNotify(System.Int32[])
  id: ClearNotify(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: ClearNotify(int[])
  nameWithType: ITicketAgent.ClearNotify(int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Clear notification status for one or more tickets.
  example: []
  syntax:
    content: void ClearNotify(int[] ids)
    parameters:
    - id: ids
      type: System.Int32[]
      description: List of notify IDs.
    content.vb: Sub ClearNotify(ids As Integer())
  overload: SuperOffice.CRM.Services.ITicketAgent.ClearNotify*
  nameWithType.vb: ITicketAgent.ClearNotify(Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.ClearNotify(Integer())
  name.vb: ClearNotify(Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(System.Int32,System.Int32[])
  id: GetTicketMessageEntities(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageEntities(int, int[])
  nameWithType: ITicketAgent.GetTicketMessageEntities(int, int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get ticket message entities with attachment info for given ticket
  example: []
  syntax:
    content: TicketMessageEntity[] GetTicketMessageEntities(int ticketId, int[] messageIds)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket to get message entities from
    - id: messageIds
      type: System.Int32[]
      description: Optional ids of message entities to get. If not provided, all ticket message entities will be returned.
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity[]
      description: An array containing ticket message entities
    content.vb: Function GetTicketMessageEntities(ticketId As Integer, messageIds As Integer()) As TicketMessageEntity()
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities*
  nameWithType.vb: ITicketAgent.GetTicketMessageEntities(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities(Integer, Integer())
  name.vb: GetTicketMessageEntities(Integer, Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(System.Int32)
  id: GetTicketMessage(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessage(int)
  nameWithType: ITicketAgent.GetTicketMessage(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a TicketMessage object.
  example: []
  syntax:
    content: TicketMessage GetTicketMessage(int ticketMessageId)
    parameters:
    - id: ticketMessageId
      type: System.Int32
      description: The identifier of the TicketMessage object
    return:
      type: SuperOffice.CRM.Services.TicketMessage
      description: TicketMessage
    content.vb: Function GetTicketMessage(ticketMessageId As Integer) As TicketMessage
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage*
  nameWithType.vb: ITicketAgent.GetTicketMessage(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage(Integer)
  name.vb: GetTicketMessage(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(System.Int32)
  id: GetTicketMessageEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageEntity(int)
  nameWithType: ITicketAgent.GetTicketMessageEntity(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a TicketMessageEntity object.
  example: []
  syntax:
    content: TicketMessageEntity GetTicketMessageEntity(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The identifier of the TicketMessageEntity object
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: TicketMessageEntity
    content.vb: Function GetTicketMessageEntity(ticketMessageEntityId As Integer) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity*
  nameWithType.vb: ITicketAgent.GetTicketMessageEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity(Integer)
  name.vb: GetTicketMessageEntity(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(System.Int32)
  id: DeleteTicketMessageEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: DeleteTicketMessageEntity(int)
  nameWithType: ITicketAgent.DeleteTicketMessageEntity(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Delete a ticket message
  example: []
  syntax:
    content: void DeleteTicketMessageEntity(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The ticket message to delete
    content.vb: Sub DeleteTicketMessageEntity(ticketMessageEntityId As Integer)
  overload: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity*
  nameWithType.vb: ITicketAgent.DeleteTicketMessageEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity(Integer)
  name.vb: DeleteTicketMessageEntity(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(System.String)
  id: SanitizeMailContent(System.String)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContent(string)
  nameWithType: ITicketAgent.SanitizeMailContent(string)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Remove harmful HTML tags and attributes from an email
  example: []
  syntax:
    content: string SanitizeMailContent(string content)
    parameters:
    - id: content
      type: System.String
      description: The email content to sanitize
    return:
      type: System.String
      description: The sanitized email content
    content.vb: Function SanitizeMailContent(content As String) As String
  overload: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent*
  nameWithType.vb: ITicketAgent.SanitizeMailContent(String)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent(String)
  name.vb: SanitizeMailContent(String)
- uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(System.String[])
  id: SanitizeMailContents(System.String[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SanitizeMailContents(string[])
  nameWithType: ITicketAgent.SanitizeMailContents(string[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Remove harmful HTML tags and attributes from an email
  example: []
  syntax:
    content: string[] SanitizeMailContents(string[] contents)
    parameters:
    - id: contents
      type: System.String[]
      description: The email contents to sanitize
    return:
      type: System.String[]
      description: The sanitized email contents
    content.vb: Function SanitizeMailContents(contents As String()) As String()
  overload: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents*
  nameWithType.vb: ITicketAgent.SanitizeMailContents(String())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents(String())
  name.vb: SanitizeMailContents(String())
- uid: SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.Html2Text(System.String)
  id: Html2Text(System.String)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: Html2Text(string)
  nameWithType: ITicketAgent.Html2Text(string)
  fullName: SuperOffice.CRM.Services.ITicketAgent.Html2Text(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create a plain text version of the html, suitable for email
  example: []
  syntax:
    content: string Html2Text(string content)
    parameters:
    - id: content
      type: System.String
      description: The html version
    return:
      type: System.String
      description: The plain text version
    content.vb: Function Html2Text(content As String) As String
  overload: SuperOffice.CRM.Services.ITicketAgent.Html2Text*
  nameWithType.vb: ITicketAgent.Html2Text(String)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.Html2Text(String)
  name.vb: Html2Text(String)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(System.Int32)
  id: GetAttachmentInfo(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentInfo(int)
  nameWithType: ITicketAgent.GetAttachmentInfo(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a list with meta data for all attached attachments
  example: []
  syntax:
    content: AttachmentEntity[] GetAttachmentInfo(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to get attachment infos for
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity[]
      description: An array with AttachmentEntity objects, describing each attachment
    content.vb: Function GetAttachmentInfo(ticketMessageEntityId As Integer) As AttachmentEntity()
  overload: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo*
  nameWithType.vb: ITicketAgent.GetAttachmentInfo(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo(Integer)
  name.vb: GetAttachmentInfo(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(System.Int32)
  id: GetAttachmentInfoNonInline(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetAttachmentInfoNonInline(int)
  nameWithType: ITicketAgent.GetAttachmentInfoNonInline(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a list with meta data for all attached attachments, EXCEPT those marked as inline
  example: []
  syntax:
    content: AttachmentEntity[] GetAttachmentInfoNonInline(int ticketMessageEntityId)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to get attachment infos for
    return:
      type: SuperOffice.CRM.Services.AttachmentEntity[]
      description: An array with AttachmentEntity objects, describing each attachment; those marked as INLINE will be skipped
    content.vb: Function GetAttachmentInfoNonInline(ticketMessageEntityId As Integer) As AttachmentEntity()
  overload: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline*
  nameWithType.vb: ITicketAgent.GetAttachmentInfoNonInline(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline(Integer)
  name.vb: GetAttachmentInfoNonInline(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.AddAttachments(System.Int32,System.Int32[])
  id: AddAttachments(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: AddAttachments(int, int[])
  nameWithType: ITicketAgent.AddAttachments(int, int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Connect existing attachments with this TicketMessage. Can connect multiple attachments
  example: []
  syntax:
    content: void AddAttachments(int ticketMessageEntityId, int[] attachmentIds)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to connect the attachments to
    - id: attachmentIds
      type: System.Int32[]
      description: An array of attachments to connect to this TicketMessage
    content.vb: Sub AddAttachments(ticketMessageEntityId As Integer, attachmentIds As Integer())
  overload: SuperOffice.CRM.Services.ITicketAgent.AddAttachments*
  nameWithType.vb: ITicketAgent.AddAttachments(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.AddAttachments(Integer, Integer())
  name.vb: AddAttachments(Integer, Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(System.Int32,System.Int32[])
  id: RemoveMessageAttachments(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: RemoveMessageAttachments(int, int[])
  nameWithType: ITicketAgent.RemoveMessageAttachments(int, int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes attachments from the message as specified in the collection of entity ids. The ids are attachment ids (attachment primary key)
  example: []
  syntax:
    content: void RemoveMessageAttachments(int ticketMessageEntityId, int[] attachmentIds)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to remove attachments from
    - id: attachmentIds
      type: System.Int32[]
      description: Attachment primary keys
    content.vb: Sub RemoveMessageAttachments(ticketMessageEntityId As Integer, attachmentIds As Integer())
  overload: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments*
  nameWithType.vb: ITicketAgent.RemoveMessageAttachments(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments(Integer, Integer())
  name.vb: RemoveMessageAttachments(Integer, Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(System.Int32)
  id: GetPreviewAttachmentStream(System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetPreviewAttachmentStream(int)
  nameWithType: ITicketAgent.GetPreviewAttachmentStream(int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Retrieve an attachment from ticket message. The returned data is intended to be used for a preview. The returned data is sanitized.
  example: []
  syntax:
    content: DocumentPreview GetPreviewAttachmentStream(int attachmentId)
    parameters:
    - id: attachmentId
      type: System.Int32
      description: The id of the attachment to retrieve
    return:
      type: SuperOffice.CRM.Services.DocumentPreview
      description: Sanitized preview version of the attachment
    content.vb: Function GetPreviewAttachmentStream(attachmentId As Integer) As DocumentPreview
  overload: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream*
  nameWithType.vb: ITicketAgent.GetPreviewAttachmentStream(Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream(Integer)
  name.vb: GetPreviewAttachmentStream(Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  id: SendTicketMessage(System.Int32,System.String[],System.String[],System.String[],System.String,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SendTicketMessage(int, string[], string[], string[], string, int, string)
  nameWithType: ITicketAgent.SendTicketMessage(int, string[], string[], string[], string, int, string)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(int, string[], string[], string[], string, int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Send a message to recipients by email
  example: []
  syntax:
    content: void SendTicketMessage(int ticketMessageEntityId, string[] to, string[] cc, string[] bcc, string subject, int replyTemplateId, string gdprSource)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to send
    - id: to
      type: System.String[]
      description: The To-recipients. Each recipient must be in correct format
    - id: cc
      type: System.String[]
      description: The Cc-recipients. Each recipient must be in correct format
    - id: bcc
      type: System.String[]
      description: The Bcc-recipients. Each recipient must be in correct format
    - id: subject
      type: System.String
      description: The subject
    - id: replyTemplateId
      type: System.Int32
      description: Optional ID of reply template to merge message with. &lt;= 0 to skip.
    - id: gdprSource
      type: System.String
      description: Obsolete
    content.vb: Sub SendTicketMessage(ticketMessageEntityId As Integer, [to] As String(), cc As String(), bcc As String(), subject As String, replyTemplateId As Integer, gdprSource As String)
  overload: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage*
  nameWithType.vb: ITicketAgent.SendTicketMessage(Integer, String(), String(), String(), String, Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage(Integer, String(), String(), String(), String, Integer, String)
  name.vb: SendTicketMessage(Integer, String(), String(), String(), String, Integer, String)
- uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  id: SendTicketMessageSms(System.Int32,System.Int32,System.String[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SendTicketMessageSms(int, int, string[])
  nameWithType: ITicketAgent.SendTicketMessageSms(int, int, string[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(int, int, string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Send a message to recipients by sms
  example: []
  syntax:
    content: void SendTicketMessageSms(int ticketMessageEntityId, int replyTemplateId, string[] sms)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message to send
    - id: replyTemplateId
      type: System.Int32
      description: Optional ID of reply template to merge message with. &lt;= 0 to skip.
    - id: sms
      type: System.String[]
      description: The Sms-recipients. Each recipient must be in correct format
    content.vb: Sub SendTicketMessageSms(ticketMessageEntityId As Integer, replyTemplateId As Integer, sms As String())
  overload: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms*
  nameWithType.vb: ITicketAgent.SendTicketMessageSms(Integer, Integer, String())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms(Integer, Integer, String())
  name.vb: SendTicketMessageSms(Integer, Integer, String())
- uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(System.Int32,System.Boolean)
  id: SetTicketMessageImportant(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SetTicketMessageImportant(int, bool)
  nameWithType: ITicketAgent.SetTicketMessageImportant(int, bool)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(int, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Set the important flag on or off for a ticket message
  example: []
  syntax:
    content: void SetTicketMessageImportant(int ticketMessageId, bool important)
    parameters:
    - id: ticketMessageId
      type: System.Int32
      description: The id of the ticket message to set the important flag on
    - id: important
      type: System.Boolean
      description: Turn on or off the important flag
    content.vb: Sub SetTicketMessageImportant(ticketMessageId As Integer, important As Boolean)
  overload: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant*
  nameWithType.vb: ITicketAgent.SetTicketMessageImportant(Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant(Integer, Boolean)
  name.vb: SetTicketMessageImportant(Integer, Boolean)
- uid: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  id: CalculateMessageRecipients(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: CalculateMessageRecipients(int, MessageActionType, int)
  nameWithType: ITicketAgent.CalculateMessageRecipients(int, MessageActionType, int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(int, SuperOffice.Data.MessageActionType, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets recipients for new message
  example: []
  syntax:
    content: Recipient[] CalculateMessageRecipients(int ticketId, MessageActionType actionType, int messageId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: actionType
      type: SuperOffice.Data.MessageActionType
      description: Message action
    - id: messageId
      type: System.Int32
      description: Optional ID of message being replied. Value &lt;= 0 ignores parameter
    return:
      type: SuperOffice.CRM.Services.Recipient[]
      description: An array with Recipient objects
    content.vb: Function CalculateMessageRecipients(ticketId As Integer, actionType As MessageActionType, messageId As Integer) As Recipient()
  overload: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients*
  nameWithType.vb: ITicketAgent.CalculateMessageRecipients(Integer, MessageActionType, Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients(Integer, SuperOffice.Data.MessageActionType, Integer)
  name.vb: CalculateMessageRecipients(Integer, MessageActionType, Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  id: SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntityWithNotify(TicketMessageEntity, bool)
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotify(TicketMessageEntity, bool)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Saves a ticket message and performs any user notifications
  example: []
  syntax:
    content: TicketMessageEntity SaveTicketMessageEntityWithNotify(TicketMessageEntity newEntity, bool notify)
    parameters:
    - id: newEntity
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The ticket message to save
    - id: notify
      type: System.Boolean
      description: If true, then the notification will be sent along with the save
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The saved entity
    content.vb: Function SaveTicketMessageEntityWithNotify(newEntity As TicketMessageEntity, notify As Boolean) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify*
  nameWithType.vb: ITicketAgent.SaveTicketMessageEntityWithNotify(TicketMessageEntity, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify(SuperOffice.CRM.Services.TicketMessageEntity, Boolean)
  name.vb: SaveTicketMessageEntityWithNotify(TicketMessageEntity, Boolean)
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  id: SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity,System.Boolean,System.Int32[],System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: SaveTicketMessageEntityWithOptions(TicketMessageEntity, bool, int[], bool)
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptions(TicketMessageEntity, bool, int[], bool)
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity, bool, int[], bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Saves a ticket message and performs additional actions
  example: []
  syntax:
    content: TicketMessageEntity SaveTicketMessageEntityWithOptions(TicketMessageEntity entity, bool notify, int[] attachmentIds, bool updateRepliedAt)
    parameters:
    - id: entity
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The ticket message to save
    - id: notify
      type: System.Boolean
      description: If true, then the notification will be sent along with the save
    - id: attachmentIds
      type: System.Int32[]
      description: An array of attachments to connect to this TicketMessage
    - id: updateRepliedAt
      type: System.Boolean
      description: Updates ticket's replied_at field if needed
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The saved entity
    content.vb: Function SaveTicketMessageEntityWithOptions(entity As TicketMessageEntity, notify As Boolean, attachmentIds As Integer(), updateRepliedAt As Boolean) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions*
  nameWithType.vb: ITicketAgent.SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Integer(), Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions(SuperOffice.CRM.Services.TicketMessageEntity, Boolean, Integer(), Boolean)
  name.vb: SaveTicketMessageEntityWithOptions(TicketMessageEntity, Boolean, Integer(), Boolean)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  id: GetDefaultMessageContent(System.Int32,SuperOffice.Data.MessageActionType,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContent(int, MessageActionType, int)
  nameWithType: ITicketAgent.GetDefaultMessageContent(int, MessageActionType, int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(int, SuperOffice.Data.MessageActionType, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Obsolete, use GetDefaultMessageContentFull instead
  example: []
  syntax:
    content: string GetDefaultMessageContent(int ticketId, MessageActionType messageActionType, int ticketMessageId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    return:
      type: System.String
      description: Sanitized HTML content
    content.vb: Function GetDefaultMessageContent(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer) As String
  overload: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent*
  nameWithType.vb: ITicketAgent.GetDefaultMessageContent(Integer, MessageActionType, Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent(Integer, SuperOffice.Data.MessageActionType, Integer)
  name.vb: GetDefaultMessageContent(Integer, MessageActionType, Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  id: GetDefaultMessageContentFull(System.Int32,SuperOffice.Data.MessageActionType,System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetDefaultMessageContentFull(int, MessageActionType, int, int)
  nameWithType: ITicketAgent.GetDefaultMessageContentFull(int, MessageActionType, int, int)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(int, SuperOffice.Data.MessageActionType, int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Generate a default message content: attachments and body as sanitized HTML'
  example: []
  syntax:
    content: TicketMessageContent GetDefaultMessageContentFull(int ticketId, MessageActionType messageActionType, int ticketMessageId, int ticketTypeId)
    parameters:
    - id: ticketId
      type: System.Int32
      description: The id of the ticket
    - id: messageActionType
      type: SuperOffice.Data.MessageActionType
      description: 'Message action type: None/Reply/ReplyAll/Forward'
    - id: ticketMessageId
      type: System.Int32
      description: The id of the message to quote in the returned content. 0 to skip/ignore
    - id: ticketTypeId
      type: System.Int32
      description: The id of the ticket type to look for reply template. 0 to use current ticket type
    return:
      type: SuperOffice.CRM.Services.TicketMessageContent
      description: Generated default message content
    content.vb: Function GetDefaultMessageContentFull(ticketId As Integer, messageActionType As MessageActionType, ticketMessageId As Integer, ticketTypeId As Integer) As TicketMessageContent
  overload: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull*
  nameWithType.vb: ITicketAgent.GetDefaultMessageContentFull(Integer, MessageActionType, Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull(Integer, SuperOffice.Data.MessageActionType, Integer, Integer)
  name.vb: GetDefaultMessageContentFull(Integer, MessageActionType, Integer, Integer)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  id: GetTicketMessageWithEmbeddedData(System.Int32,SuperOffice.Data.ImageEmbedType)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageWithEmbeddedData(int, ImageEmbedType)
  nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedData(int, ImageEmbedType)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(int, SuperOffice.Data.ImageEmbedType)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a ticket message entity with posibillity to change embedded images to be represented with inline data within the HTML body. If using inline data, be sure not to save this back to the database.
  example: []
  syntax:
    content: TicketMessageEntity GetTicketMessageWithEmbeddedData(int id, ImageEmbedType embedImages)
    parameters:
    - id: id
      type: System.Int32
      description: The id of the ticket message entity
    - id: embedImages
      type: SuperOffice.Data.ImageEmbedType
      description: 'If set to Inline, then use inline base64 data to represent the images in the HTML body. Default: Link will use link to the image.'
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The entity to get
    content.vb: Function GetTicketMessageWithEmbeddedData(id As Integer, embedImages As ImageEmbedType) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData*
  nameWithType.vb: ITicketAgent.GetTicketMessageWithEmbeddedData(Integer, ImageEmbedType)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData(Integer, SuperOffice.Data.ImageEmbedType)
  name.vb: GetTicketMessageWithEmbeddedData(Integer, ImageEmbedType)
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(System.Int32[])
  id: DeleteMessageHeaders(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: DeleteMessageHeaders(int[])
  nameWithType: ITicketAgent.DeleteMessageHeaders(int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes headers from the message as specified in the collection of entity ids. The ids are message header ids (message header primary key)
  example: []
  syntax:
    content: void DeleteMessageHeaders(int[] headerIds)
    parameters:
    - id: headerIds
      type: System.Int32[]
      description: Message header primary keys
    content.vb: Sub DeleteMessageHeaders(headerIds As Integer())
  overload: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders*
  nameWithType.vb: ITicketAgent.DeleteMessageHeaders(Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders(Integer())
  name.vb: DeleteMessageHeaders(Integer())
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(System.Int32,System.Boolean)
  id: GetTicketMessageWithOptions(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketMessageWithOptions(int, bool)
  nameWithType: ITicketAgent.GetTicketMessageWithOptions(int, bool)
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(int, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a ticket message entity with additional options.
  example: []
  syntax:
    content: TicketMessageEntity GetTicketMessageWithOptions(int ticketMessageEntityId, bool includeNonInlineAttachmentsInfo)
    parameters:
    - id: ticketMessageEntityId
      type: System.Int32
      description: The id of the ticket message entity
    - id: includeNonInlineAttachmentsInfo
      type: System.Boolean
      description: If true, then non inline attachments info will be loaded into TicketMessageEntity
    return:
      type: SuperOffice.CRM.Services.TicketMessageEntity
      description: The entity to get
    content.vb: Function GetTicketMessageWithOptions(ticketMessageEntityId As Integer, includeNonInlineAttachmentsInfo As Boolean) As TicketMessageEntity
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions*
  nameWithType.vb: ITicketAgent.GetTicketMessageWithOptions(Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions(Integer, Boolean)
  name.vb: GetTicketMessageWithOptions(Integer, Boolean)
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(System.Int32[])
  id: GetTicketSummaries(System.Int32[])
  parent: SuperOffice.CRM.Services.ITicketAgent
  langs:
  - csharp
  - vb
  name: GetTicketSummaries(int[])
  nameWithType: ITicketAgent.GetTicketSummaries(int[])
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get an array of summaryitem for the given tickets
  example: []
  syntax:
    content: TicketSummaryItem[] GetTicketSummaries(int[] ticketIds)
    parameters:
    - id: ticketIds
      type: System.Int32[]
      description: The tickets to fetch summaries for
    return:
      type: SuperOffice.CRM.Services.TicketSummaryItem[]
      description: Summary items for the given id's, in no particular order
    content.vb: Function GetTicketSummaries(ticketIds As Integer()) As TicketSummaryItem()
  overload: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries*
  nameWithType.vb: ITicketAgent.GetTicketSummaries(Integer())
  fullName.vb: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries(Integer())
  name.vb: GetTicketSummaries(Integer())
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_CreateDefaultAttachmentEntity
  name: CreateDefaultAttachmentEntity
  nameWithType: ITicketAgent.CreateDefaultAttachmentEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultAttachmentEntity
- uid: SuperOffice.CRM.Services.AttachmentEntity
  commentId: T:SuperOffice.CRM.Services.AttachmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.AttachmentEntity.html
  name: AttachmentEntity
  nameWithType: AttachmentEntity
  fullName: SuperOffice.CRM.Services.AttachmentEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SaveAttachmentEntity_SuperOffice_CRM_Services_AttachmentEntity_
  name: SaveAttachmentEntity
  nameWithType: ITicketAgent.SaveAttachmentEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveAttachmentEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_CreateDefaultTicketEntity
  name: CreateDefaultTicketEntity
  nameWithType: ITicketAgent.CreateDefaultTicketEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketEntity
- uid: SuperOffice.CRM.Services.TicketEntity
  commentId: T:SuperOffice.CRM.Services.TicketEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TicketEntity.html
  name: TicketEntity
  nameWithType: TicketEntity
  fullName: SuperOffice.CRM.Services.TicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SaveTicketEntity_SuperOffice_CRM_Services_TicketEntity_
  name: SaveTicketEntity
  nameWithType: ITicketAgent.SaveTicketEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_CreateDefaultTicketMessageEntity
  name: CreateDefaultTicketMessageEntity
  nameWithType: ITicketAgent.CreateDefaultTicketMessageEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.CreateDefaultTicketMessageEntity
- uid: SuperOffice.CRM.Services.TicketMessageEntity
  commentId: T:SuperOffice.CRM.Services.TicketMessageEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TicketMessageEntity.html
  name: TicketMessageEntity
  nameWithType: TicketMessageEntity
  fullName: SuperOffice.CRM.Services.TicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SaveTicketMessageEntity_SuperOffice_CRM_Services_TicketMessageEntity_
  name: SaveTicketMessageEntity
  nameWithType: ITicketAgent.SaveTicketMessageEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetAttachmentEntity_System_Int32_
  name: GetAttachmentEntity
  nameWithType: ITicketAgent.GetAttachmentEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_CopyFromCRMDocument_System_Int32_
  name: CopyFromCRMDocument
  nameWithType: ITicketAgent.CopyFromCRMDocument
  fullName: SuperOffice.CRM.Services.ITicketAgent.CopyFromCRMDocument
- uid: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_CopyToTempFile_System_String_System_Int32_
  name: CopyToTempFile
  nameWithType: ITicketAgent.CopyToTempFile
  fullName: SuperOffice.CRM.Services.ITicketAgent.CopyToTempFile
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.UploadAttachment
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_UploadAttachment_System_Int32_System_IO_Stream_
  name: UploadAttachment
  nameWithType: ITicketAgent.UploadAttachment
  fullName: SuperOffice.CRM.Services.ITicketAgent.UploadAttachment
- uid: System.IO.Stream
  commentId: T:System.IO.Stream
  parent: System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.io.stream
  name: Stream
  nameWithType: Stream
  fullName: System.IO.Stream
- uid: System.IO
  commentId: N:System.IO
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.IO
  nameWithType: System.IO
  fullName: System.IO
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.IO
    name: IO
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.io
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetAttachmentStream_System_Int32_
  name: GetAttachmentStream
  nameWithType: ITicketAgent.GetAttachmentStream
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentStream
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicket*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicket
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicket_System_Int32_
  name: GetTicket
  nameWithType: ITicketAgent.GetTicket
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicket
- uid: SuperOffice.CRM.Services.Ticket
  commentId: T:SuperOffice.CRM.Services.Ticket
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.Ticket.html
  name: Ticket
  nameWithType: Ticket
  fullName: SuperOffice.CRM.Services.Ticket
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTickets*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTickets
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTickets_System_Int32___
  name: GetTickets
  nameWithType: ITicketAgent.GetTickets
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTickets
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.Ticket[]
  isExternal: true
  href: SuperOffice.CRM.Services.Ticket.html
  name: Ticket[]
  nameWithType: Ticket[]
  fullName: SuperOffice.CRM.Services.Ticket[]
  nameWithType.vb: Ticket()
  fullName.vb: SuperOffice.CRM.Services.Ticket()
  name.vb: Ticket()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Ticket
    name: Ticket
    isExternal: true
    href: SuperOffice.CRM.Services.Ticket.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Ticket
    name: Ticket
    isExternal: true
    href: SuperOffice.CRM.Services.Ticket.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketEntity_System_Int32_
  name: GetTicketEntity
  nameWithType: ITicketAgent.GetTicketEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetForRmUi
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetForRmUi_System_Int32_
  name: GetForRmUi
  nameWithType: ITicketAgent.GetForRmUi
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetForRmUi
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_DeleteTicketEntity_System_Int32_
  name: DeleteTicketEntity
  nameWithType: ITicketAgent.DeleteTicketEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_NotifyNewTicket_System_Int32_
  name: NotifyNewTicket
  nameWithType: ITicketAgent.NotifyNewTicket
  fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicket
- uid: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_NotifyNewTicketMessage_System_Int32_
  name: NotifyNewTicketMessage
  nameWithType: ITicketAgent.NotifyNewTicketMessage
  fullName: SuperOffice.CRM.Services.ITicketAgent.NotifyNewTicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketAttachments_System_Int32_
  name: GetTicketAttachments
  nameWithType: ITicketAgent.GetTicketAttachments
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketAttachments
- uid: SuperOffice.CRM.Services.AttachmentEntity[]
  isExternal: true
  href: SuperOffice.CRM.Services.AttachmentEntity.html
  name: AttachmentEntity[]
  nameWithType: AttachmentEntity[]
  fullName: SuperOffice.CRM.Services.AttachmentEntity[]
  nameWithType.vb: AttachmentEntity()
  fullName.vb: SuperOffice.CRM.Services.AttachmentEntity()
  name.vb: AttachmentEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AttachmentEntity
    name: AttachmentEntity
    isExternal: true
    href: SuperOffice.CRM.Services.AttachmentEntity.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AttachmentEntity
    name: AttachmentEntity
    isExternal: true
    href: SuperOffice.CRM.Services.AttachmentEntity.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_ValidateAttachments_System_Int32___
  name: ValidateAttachments
  nameWithType: ITicketAgent.ValidateAttachments
  fullName: SuperOffice.CRM.Services.ITicketAgent.ValidateAttachments
- uid: SuperOffice.CRM.Services.AttachmentValidationResult[]
  isExternal: true
  href: SuperOffice.CRM.Services.AttachmentValidationResult.html
  name: AttachmentValidationResult[]
  nameWithType: AttachmentValidationResult[]
  fullName: SuperOffice.CRM.Services.AttachmentValidationResult[]
  nameWithType.vb: AttachmentValidationResult()
  fullName.vb: SuperOffice.CRM.Services.AttachmentValidationResult()
  name.vb: AttachmentValidationResult()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AttachmentValidationResult
    name: AttachmentValidationResult
    isExternal: true
    href: SuperOffice.CRM.Services.AttachmentValidationResult.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AttachmentValidationResult
    name: AttachmentValidationResult
    isExternal: true
    href: SuperOffice.CRM.Services.AttachmentValidationResult.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SetTicketReadByOwner_System_Int32_SuperOffice_Data_TicketReadStatus_System_Boolean_
  name: SetTicketReadByOwner
  nameWithType: ITicketAgent.SetTicketReadByOwner
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketReadByOwner
- uid: SuperOffice.Data.TicketReadStatus
  isExternal: true
  name: TicketReadStatus
  nameWithType: TicketReadStatus
  fullName: SuperOffice.Data.TicketReadStatus
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SaveTicketEntityWithNotify_SuperOffice_CRM_Services_TicketEntity_System_Boolean_
  name: SaveTicketEntityWithNotify
  nameWithType: ITicketAgent.SaveTicketEntityWithNotify
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketEntityWithNotify
- uid: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetNextInQueue
  name: GetNextInQueue
  nameWithType: ITicketAgent.GetNextInQueue
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetNextInQueue
- uid: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_ProcessTicketWhenRead_System_Int32_
  name: ProcessTicketWhenRead
  nameWithType: ITicketAgent.ProcessTicketWhenRead
  fullName: SuperOffice.CRM.Services.ITicketAgent.ProcessTicketWhenRead
- uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicket*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SplitTicket
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SplitTicket_System_Int32_System_Int32_System_DateTime_System_Int32___SuperOffice_CRM_Services_TicketEntity_
  name: SplitTicket
  nameWithType: ITicketAgent.SplitTicket
  fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicket
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SplitTicketMessage_SuperOffice_CRM_Services_TicketMessageEntity_SuperOffice_CRM_Services_TicketEntity_SuperOffice_CRM_Services_TicketMessageEntity_System_Int32___
  name: SplitTicketMessage
  nameWithType: ITicketAgent.SplitTicketMessage
  fullName: SuperOffice.CRM.Services.ITicketAgent.SplitTicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_UpdateTicketsReadStatus_System_Int32___SuperOffice_Data_TicketReadStatus_
  name: UpdateTicketsReadStatus
  nameWithType: ITicketAgent.UpdateTicketsReadStatus
  fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatus
- uid: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_UpdateTicketsReadStatusByProvider_System_String_SuperOffice_CRM_ArchiveLists_ArchiveRestrictionInfo___SuperOffice_Data_TicketReadStatus_
  name: UpdateTicketsReadStatusByProvider
  nameWithType: ITicketAgent.UpdateTicketsReadStatusByProvider
  fullName: SuperOffice.CRM.Services.ITicketAgent.UpdateTicketsReadStatusByProvider
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ITicketAgent.MergeTickets*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.MergeTickets
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_MergeTickets_SuperOffice_CRM_Services_TicketEntity_System_Int32___
  name: MergeTickets
  nameWithType: ITicketAgent.MergeTickets
  fullName: SuperOffice.CRM.Services.ITicketAgent.MergeTickets
- uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SetDeletedStatusByIds_System_Int32___
  name: SetDeletedStatusByIds
  nameWithType: ITicketAgent.SetDeletedStatusByIds
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByIds
- uid: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SetDeletedStatusByProvider_System_String_SuperOffice_CRM_ArchiveLists_ArchiveRestrictionInfo___
  name: SetDeletedStatusByProvider
  nameWithType: ITicketAgent.SetDeletedStatusByProvider
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetDeletedStatusByProvider
- uid: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_UndeleteByIds_System_Int32___
  name: UndeleteByIds
  nameWithType: ITicketAgent.UndeleteByIds
  fullName: SuperOffice.CRM.Services.ITicketAgent.UndeleteByIds
- uid: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_ResolveTicketId_System_Int32_
  name: ResolveTicketId
  nameWithType: ITicketAgent.ResolveTicketId
  fullName: SuperOffice.CRM.Services.ITicketAgent.ResolveTicketId
- uid: SuperOffice.CRM.Services.ITicketAgent.BatchForward*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.BatchForward
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_BatchForward_System_Int32___System_String___System_String___System_String___System_String_System_Boolean_
  name: BatchForward
  nameWithType: ITicketAgent.BatchForward
  fullName: SuperOffice.CRM.Services.ITicketAgent.BatchForward
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ITicketAgent.BatchReply*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.BatchReply
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_BatchReply_SuperOffice_CRM_Services_TicketBatchReplyData_
  name: BatchReply
  nameWithType: ITicketAgent.BatchReply
  fullName: SuperOffice.CRM.Services.ITicketAgent.BatchReply
- uid: SuperOffice.CRM.Services.TicketBatchReplyData
  commentId: T:SuperOffice.CRM.Services.TicketBatchReplyData
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TicketBatchReplyData.html
  name: TicketBatchReplyData
  nameWithType: TicketBatchReplyData
  fullName: SuperOffice.CRM.Services.TicketBatchReplyData
- uid: SuperOffice.CRM.Services.ITicketAgent.ClearNotify*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.ClearNotify
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_ClearNotify_System_Int32___
  name: ClearNotify
  nameWithType: ITicketAgent.ClearNotify
  fullName: SuperOffice.CRM.Services.ITicketAgent.ClearNotify
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketMessageEntities_System_Int32_System_Int32___
  name: GetTicketMessageEntities
  nameWithType: ITicketAgent.GetTicketMessageEntities
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntities
- uid: SuperOffice.CRM.Services.TicketMessageEntity[]
  isExternal: true
  href: SuperOffice.CRM.Services.TicketMessageEntity.html
  name: TicketMessageEntity[]
  nameWithType: TicketMessageEntity[]
  fullName: SuperOffice.CRM.Services.TicketMessageEntity[]
  nameWithType.vb: TicketMessageEntity()
  fullName.vb: SuperOffice.CRM.Services.TicketMessageEntity()
  name.vb: TicketMessageEntity()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    isExternal: true
    href: SuperOffice.CRM.Services.TicketMessageEntity.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.TicketMessageEntity
    name: TicketMessageEntity
    isExternal: true
    href: SuperOffice.CRM.Services.TicketMessageEntity.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketMessage_System_Int32_
  name: GetTicketMessage
  nameWithType: ITicketAgent.GetTicketMessage
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessage
- uid: SuperOffice.CRM.Services.TicketMessage
  commentId: T:SuperOffice.CRM.Services.TicketMessage
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TicketMessage.html
  name: TicketMessage
  nameWithType: TicketMessage
  fullName: SuperOffice.CRM.Services.TicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketMessageEntity_System_Int32_
  name: GetTicketMessageEntity
  nameWithType: ITicketAgent.GetTicketMessageEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_DeleteTicketMessageEntity_System_Int32_
  name: DeleteTicketMessageEntity
  nameWithType: ITicketAgent.DeleteTicketMessageEntity
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteTicketMessageEntity
- uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SanitizeMailContent_System_String_
  name: SanitizeMailContent
  nameWithType: ITicketAgent.SanitizeMailContent
  fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContent
- uid: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SanitizeMailContents_System_String___
  name: SanitizeMailContents
  nameWithType: ITicketAgent.SanitizeMailContents
  fullName: SuperOffice.CRM.Services.ITicketAgent.SanitizeMailContents
- uid: SuperOffice.CRM.Services.ITicketAgent.Html2Text*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.Html2Text
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_Html2Text_System_String_
  name: Html2Text
  nameWithType: ITicketAgent.Html2Text
  fullName: SuperOffice.CRM.Services.ITicketAgent.Html2Text
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetAttachmentInfo_System_Int32_
  name: GetAttachmentInfo
  nameWithType: ITicketAgent.GetAttachmentInfo
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfo
- uid: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetAttachmentInfoNonInline_System_Int32_
  name: GetAttachmentInfoNonInline
  nameWithType: ITicketAgent.GetAttachmentInfoNonInline
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetAttachmentInfoNonInline
- uid: SuperOffice.CRM.Services.ITicketAgent.AddAttachments*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.AddAttachments
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_AddAttachments_System_Int32_System_Int32___
  name: AddAttachments
  nameWithType: ITicketAgent.AddAttachments
  fullName: SuperOffice.CRM.Services.ITicketAgent.AddAttachments
- uid: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_RemoveMessageAttachments_System_Int32_System_Int32___
  name: RemoveMessageAttachments
  nameWithType: ITicketAgent.RemoveMessageAttachments
  fullName: SuperOffice.CRM.Services.ITicketAgent.RemoveMessageAttachments
- uid: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetPreviewAttachmentStream_System_Int32_
  name: GetPreviewAttachmentStream
  nameWithType: ITicketAgent.GetPreviewAttachmentStream
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetPreviewAttachmentStream
- uid: SuperOffice.CRM.Services.DocumentPreview
  commentId: T:SuperOffice.CRM.Services.DocumentPreview
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.DocumentPreview.html
  name: DocumentPreview
  nameWithType: DocumentPreview
  fullName: SuperOffice.CRM.Services.DocumentPreview
- uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SendTicketMessage_System_Int32_System_String___System_String___System_String___System_String_System_Int32_System_String_
  name: SendTicketMessage
  nameWithType: ITicketAgent.SendTicketMessage
  fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessage
- uid: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SendTicketMessageSms_System_Int32_System_Int32_System_String___
  name: SendTicketMessageSms
  nameWithType: ITicketAgent.SendTicketMessageSms
  fullName: SuperOffice.CRM.Services.ITicketAgent.SendTicketMessageSms
- uid: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SetTicketMessageImportant_System_Int32_System_Boolean_
  name: SetTicketMessageImportant
  nameWithType: ITicketAgent.SetTicketMessageImportant
  fullName: SuperOffice.CRM.Services.ITicketAgent.SetTicketMessageImportant
- uid: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_CalculateMessageRecipients_System_Int32_SuperOffice_Data_MessageActionType_System_Int32_
  name: CalculateMessageRecipients
  nameWithType: ITicketAgent.CalculateMessageRecipients
  fullName: SuperOffice.CRM.Services.ITicketAgent.CalculateMessageRecipients
- uid: SuperOffice.Data.MessageActionType
  isExternal: true
  name: MessageActionType
  nameWithType: MessageActionType
  fullName: SuperOffice.Data.MessageActionType
- uid: SuperOffice.CRM.Services.Recipient[]
  isExternal: true
  href: SuperOffice.CRM.Services.Recipient.html
  name: Recipient[]
  nameWithType: Recipient[]
  fullName: SuperOffice.CRM.Services.Recipient[]
  nameWithType.vb: Recipient()
  fullName.vb: SuperOffice.CRM.Services.Recipient()
  name.vb: Recipient()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Recipient
    name: Recipient
    isExternal: true
    href: SuperOffice.CRM.Services.Recipient.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Recipient
    name: Recipient
    isExternal: true
    href: SuperOffice.CRM.Services.Recipient.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SaveTicketMessageEntityWithNotify_SuperOffice_CRM_Services_TicketMessageEntity_System_Boolean_
  name: SaveTicketMessageEntityWithNotify
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithNotify
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithNotify
- uid: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_SaveTicketMessageEntityWithOptions_SuperOffice_CRM_Services_TicketMessageEntity_System_Boolean_System_Int32___System_Boolean_
  name: SaveTicketMessageEntityWithOptions
  nameWithType: ITicketAgent.SaveTicketMessageEntityWithOptions
  fullName: SuperOffice.CRM.Services.ITicketAgent.SaveTicketMessageEntityWithOptions
- uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetDefaultMessageContent_System_Int32_SuperOffice_Data_MessageActionType_System_Int32_
  name: GetDefaultMessageContent
  nameWithType: ITicketAgent.GetDefaultMessageContent
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContent
- uid: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetDefaultMessageContentFull_System_Int32_SuperOffice_Data_MessageActionType_System_Int32_System_Int32_
  name: GetDefaultMessageContentFull
  nameWithType: ITicketAgent.GetDefaultMessageContentFull
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetDefaultMessageContentFull
- uid: SuperOffice.CRM.Services.TicketMessageContent
  commentId: T:SuperOffice.CRM.Services.TicketMessageContent
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TicketMessageContent.html
  name: TicketMessageContent
  nameWithType: TicketMessageContent
  fullName: SuperOffice.CRM.Services.TicketMessageContent
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketMessageWithEmbeddedData_System_Int32_SuperOffice_Data_ImageEmbedType_
  name: GetTicketMessageWithEmbeddedData
  nameWithType: ITicketAgent.GetTicketMessageWithEmbeddedData
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithEmbeddedData
- uid: SuperOffice.Data.ImageEmbedType
  isExternal: true
  name: ImageEmbedType
  nameWithType: ImageEmbedType
  fullName: SuperOffice.Data.ImageEmbedType
- uid: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_DeleteMessageHeaders_System_Int32___
  name: DeleteMessageHeaders
  nameWithType: ITicketAgent.DeleteMessageHeaders
  fullName: SuperOffice.CRM.Services.ITicketAgent.DeleteMessageHeaders
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketMessageWithOptions_System_Int32_System_Boolean_
  name: GetTicketMessageWithOptions
  nameWithType: ITicketAgent.GetTicketMessageWithOptions
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketMessageWithOptions
- uid: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries*
  commentId: Overload:SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries
  isExternal: true
  href: SuperOffice.CRM.Services.ITicketAgent.html#SuperOffice_CRM_Services_ITicketAgent_GetTicketSummaries_System_Int32___
  name: GetTicketSummaries
  nameWithType: ITicketAgent.GetTicketSummaries
  fullName: SuperOffice.CRM.Services.ITicketAgent.GetTicketSummaries
- uid: SuperOffice.CRM.Services.TicketSummaryItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.TicketSummaryItem.html
  name: TicketSummaryItem[]
  nameWithType: TicketSummaryItem[]
  fullName: SuperOffice.CRM.Services.TicketSummaryItem[]
  nameWithType.vb: TicketSummaryItem()
  fullName.vb: SuperOffice.CRM.Services.TicketSummaryItem()
  name.vb: TicketSummaryItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.TicketSummaryItem
    name: TicketSummaryItem
    isExternal: true
    href: SuperOffice.CRM.Services.TicketSummaryItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.TicketSummaryItem
    name: TicketSummaryItem
    isExternal: true
    href: SuperOffice.CRM.Services.TicketSummaryItem.html
  - name: (
  - name: )
