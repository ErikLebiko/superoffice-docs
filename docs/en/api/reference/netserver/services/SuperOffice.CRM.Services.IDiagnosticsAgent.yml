### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent
  commentId: T:SuperOffice.CRM.Services.IDiagnosticsAgent
  id: IDiagnosticsAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage(SuperOffice.CRM.Services.WebAppUsage[])
  - SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage
  - SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage
  - SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches
  - SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName(System.String[])
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState(System.String[])
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser
  - SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod(System.DateTime,System.DateTime,System.String)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState(System.String)
  - SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade
  - SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers
  - SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod(System.Int32,System.String,System.DateTime)
  langs:
  - csharp
  - vb
  name: IDiagnosticsAgent
  nameWithType: IDiagnosticsAgent
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Diagnostics Agent

    Diagnostics, usage data collection, caches and flushing
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (DiagnosticsAgent agent = new DiagnosticsAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Diagnostics Agent", "Interface for the Diagnostics Agent. Diagnostics, usage data collection, caches and flushing")]

      public interface IDiagnosticsAgent : IAgent
    content.vb: >-
      <Agent("Diagnostics Agent", "Interface for the Diagnostics Agent. Diagnostics, usage data collection, caches and flushing")>

      Public Interface IDiagnosticsAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Diagnostics Agent
    - type: System.String
      value: Interface for the Diagnostics Agent. Diagnostics, usage data collection, caches and flushing
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches
  id: FlushCaches
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: FlushCaches()
  nameWithType: IDiagnosticsAgent.FlushCaches()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Flushes all NetServer caches
  example: []
  syntax:
    content: void FlushCaches()
    content.vb: Sub FlushCaches()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames
  id: GetCacheNames
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetCacheNames()
  nameWithType: IDiagnosticsAgent.GetCacheNames()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the name of the caches that can be flushed
  example: []
  syntax:
    content: string[] GetCacheNames()
    return:
      type: System.String[]
      description: Name of the caches that can be flusehd
    content.vb: Function GetCacheNames() As String()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName(System.String[])
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName(System.String[])
  id: FlushCachesByName(System.String[])
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: FlushCachesByName(string[])
  nameWithType: IDiagnosticsAgent.FlushCachesByName(string[])
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName(string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Flushes all NetServer caches named
  example: []
  syntax:
    content: void FlushCachesByName(string[] cacheNames)
    parameters:
    - id: cacheNames
      type: System.String[]
      description: Name of the cachnes to flush
    content.vb: Sub FlushCachesByName(cacheNames As String())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName*
  nameWithType.vb: IDiagnosticsAgent.FlushCachesByName(String())
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName(String())
  name.vb: FlushCachesByName(String())
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState(System.String[])
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState(System.String[])
  id: GetCacheState(System.String[])
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetCacheState(string[])
  nameWithType: IDiagnosticsAgent.GetCacheState(string[])
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState(string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the current generation value of the named caches. State is opaque.
  example: []
  syntax:
    content: string GetCacheState(string[] cacheNames)
    parameters:
    - id: cacheNames
      type: System.String[]
      description: Names of the caches to check
    return:
      type: System.String
      description: Current state of the caches named. If not the same as previous value, then it is time to flush
    content.vb: Function GetCacheState(cacheNames As String()) As String
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState*
  nameWithType.vb: IDiagnosticsAgent.GetCacheState(String())
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState(String())
  name.vb: GetCacheState(String())
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser
  id: GetEntityCountsForCurrentUser
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetEntityCountsForCurrentUser()
  nameWithType: IDiagnosticsAgent.GetEntityCountsForCurrentUser()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get an array of entities and number of entities created for the current associate
  example: []
  syntax:
    content: EntityCounts[] GetEntityCountsForCurrentUser()
    return:
      type: SuperOffice.CRM.Services.EntityCounts[]
      description: Array of EntityCounts[] for the current associate
    content.vb: Function GetEntityCountsForCurrentUser() As EntityCounts()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers
  id: GetEntityCountsForAllUsers
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetEntityCountsForAllUsers()
  nameWithType: IDiagnosticsAgent.GetEntityCountsForAllUsers()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get an array of entities and number of entities created for all associates.
  example: []
  syntax:
    content: EntityCounts[] GetEntityCountsForAllUsers()
    return:
      type: SuperOffice.CRM.Services.EntityCounts[]
      description: Array of EntityCounts[] for all the users
    content.vb: Function GetEntityCountsForAllUsers() As EntityCounts()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState(System.String)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState(System.String)
  id: LogViewState(System.String)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: LogViewState(string)
  nameWithType: IDiagnosticsAgent.LogViewState(string)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Log a change in view state. The granularity of the logging depends on the current configuration. This call returns asynchronously, leaving the server to finish processing later on.
  example: []
  syntax:
    content: void LogViewState(string viewState)
    parameters:
    - id: viewState
      type: System.String
      description: Current view state to be logged
    content.vb: Sub LogViewState(viewState As String)
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState*
  nameWithType.vb: IDiagnosticsAgent.LogViewState(String)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState(String)
  name.vb: LogViewState(String)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  id: ChangeLogSettings(System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean,System.Boolean)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: ChangeLogSettings(bool, bool, bool, bool, bool, bool, bool, bool)
  nameWithType: IDiagnosticsAgent.ChangeLogSettings(bool, bool, bool, bool, bool, bool, bool, bool)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings(bool, bool, bool, bool, bool, bool, bool, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Change NetServer log settings.
  example: []
  syntax:
    content: void ChangeLogSettings(bool logWarning, bool logInformation, bool logSuccessAudit, bool logFailureAudit, bool logToEventLog, bool logToSuperOffice, bool logToFile, bool logToTrace)
    parameters:
    - id: logWarning
      type: System.Boolean
      description: Turn on warning log
    - id: logInformation
      type: System.Boolean
      description: Turn on information log
    - id: logSuccessAudit
      type: System.Boolean
      description: Turn on success audit log
    - id: logFailureAudit
      type: System.Boolean
      description: Turn on failure audit log
    - id: logToEventLog
      type: System.Boolean
      description: Log to event log
    - id: logToSuperOffice
      type: System.Boolean
      description: Log to SuperOffice
    - id: logToFile
      type: System.Boolean
      description: Log to file
    - id: logToTrace
      type: System.Boolean
      description: Log to trace
    content.vb: Sub ChangeLogSettings(logWarning As Boolean, logInformation As Boolean, logSuccessAudit As Boolean, logFailureAudit As Boolean, logToEventLog As Boolean, logToSuperOffice As Boolean, logToFile As Boolean, logToTrace As Boolean)
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings*
  nameWithType.vb: IDiagnosticsAgent.ChangeLogSettings(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
  name.vb: ChangeLogSettings(Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean, Boolean)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions
  id: CollectDataAdditions
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectDataAdditions()
  nameWithType: IDiagnosticsAgent.CollectDataAdditions()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Database Additions. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: void CollectDataAdditions()
    content.vb: Sub CollectDataAdditions()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage
  id: CollectWinUsage
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectWinUsage()
  nameWithType: IDiagnosticsAgent.CollectWinUsage()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Windows CRM Client Usage. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: void CollectWinUsage()
    content.vb: Sub CollectWinUsage()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage
  id: CollectWebUsage
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectWebUsage()
  nameWithType: IDiagnosticsAgent.CollectWebUsage()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Web-based clients Usage. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: void CollectWebUsage()
    content.vb: Sub CollectWebUsage()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes
  id: CollectTableSizes
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: CollectTableSizes()
  nameWithType: IDiagnosticsAgent.CollectTableSizes()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: 'Collect and transmit usage statistics: Table Sizes. If opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.'
  example: []
  syntax:
    content: void CollectTableSizes()
    content.vb: Sub CollectTableSizes()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers
  id: ResyncUsers
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: ResyncUsers()
  nameWithType: IDiagnosticsAgent.ResyncUsers()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Resynchronize user information with SuperOffice Community, if opted-out then this call does nothing. The call returns immediately (starting a background thread), and updates CS scheduler table to set the next run time.
  example: []
  syntax:
    content: void ResyncUsers()
    content.vb: Sub ResyncUsers()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade
  id: PerformTasksAfterUpgrade
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: PerformTasksAfterUpgrade()
  nameWithType: IDiagnosticsAgent.PerformTasksAfterUpgrade()
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: After upgrading to a new fileset, there may be tasks that need to be done. Examples - import new TypicalSearches, if present. Tasks performed here need to be idempotent and independent of the actual upgrade jump (what was the previous version). They should complete in a reasonable time, not more than a few minutes maximum.
  example: []
  syntax:
    content: string PerformTasksAfterUpgrade()
    return:
      type: System.String
      description: Message that can be shown to the user, summarizing what has been done, if anything.
    content.vb: Function PerformTasksAfterUpgrade() As String
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade*
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage(SuperOffice.CRM.Services.WebAppUsage[])
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage(SuperOffice.CRM.Services.WebAppUsage[])
  id: AddWebAppUsage(SuperOffice.CRM.Services.WebAppUsage[])
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: AddWebAppUsage(WebAppUsage[])
  nameWithType: IDiagnosticsAgent.AddWebAppUsage(WebAppUsage[])
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage(SuperOffice.CRM.Services.WebAppUsage[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Adds WebApp usage to existing log
  example: []
  syntax:
    content: void AddWebAppUsage(WebAppUsage[] webAppUsages)
    parameters:
    - id: webAppUsages
      type: SuperOffice.CRM.Services.WebAppUsage[]
      description: Web app usage.
    content.vb: Sub AddWebAppUsage(webAppUsages As WebAppUsage())
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage*
  nameWithType.vb: IDiagnosticsAgent.AddWebAppUsage(WebAppUsage())
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage(SuperOffice.CRM.Services.WebAppUsage())
  name.vb: AddWebAppUsage(WebAppUsage())
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod(System.Int32,System.String,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod(System.Int32,System.String,System.DateTime)
  id: WebAppUsageExistsInPeriod(System.Int32,System.String,System.DateTime)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: WebAppUsageExistsInPeriod(int, string, DateTime)
  nameWithType: IDiagnosticsAgent.WebAppUsageExistsInPeriod(int, string, DateTime)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod(int, string, System.DateTime)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns true if viewState has been clicked at least once since FromDate, if asscoiateId &lt; 0 or FromDate is DateTime.MinValue no restriction given for those parameters
  example: []
  syntax:
    content: bool WebAppUsageExistsInPeriod(int associateId, string viewState, DateTime fromDate)
    parameters:
    - id: associateId
      type: System.Int32
      description: The asscoiate id to look for webapp usage
    - id: viewState
      type: System.String
      description: The viewState to search for
    - id: fromDate
      type: System.DateTime
      description: The datetime to restrict webapp usage on
    return:
      type: System.Boolean
      description: Returns true if viewState has been clicked at least once since FromDate
    content.vb: Function WebAppUsageExistsInPeriod(associateId As Integer, viewState As String, fromDate As Date) As Boolean
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod*
  nameWithType.vb: IDiagnosticsAgent.WebAppUsageExistsInPeriod(Integer, String, Date)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod(Integer, String, Date)
  name.vb: WebAppUsageExistsInPeriod(Integer, String, Date)
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod(System.DateTime,System.DateTime,System.String)
  commentId: M:SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod(System.DateTime,System.DateTime,System.String)
  id: GetWebAppUsagesForPeriod(System.DateTime,System.DateTime,System.String)
  parent: SuperOffice.CRM.Services.IDiagnosticsAgent
  langs:
  - csharp
  - vb
  name: GetWebAppUsagesForPeriod(DateTime, DateTime, string)
  nameWithType: IDiagnosticsAgent.GetWebAppUsagesForPeriod(DateTime, DateTime, string)
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod(System.DateTime, System.DateTime, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all WebAppUsages for a given period, that match an optional search term
  example: []
  syntax:
    content: WebAppUsage[] GetWebAppUsagesForPeriod(DateTime fromDate, DateTime toDate, string searchTerm)
    parameters:
    - id: fromDate
      type: System.DateTime
      description: ''
    - id: toDate
      type: System.DateTime
      description: ''
    - id: searchTerm
      type: System.String
      description: ViewState search term. '%' is the wildcard character, for example 'Pocket%' will match all viewstates starting with 'Pocket'. If empty, all viewstates will be matched
    return:
      type: SuperOffice.CRM.Services.WebAppUsage[]
      description: ''
    content.vb: Function GetWebAppUsagesForPeriod(fromDate As Date, toDate As Date, searchTerm As String) As WebAppUsage()
  overload: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod*
  nameWithType.vb: IDiagnosticsAgent.GetWebAppUsagesForPeriod(Date, Date, String)
  fullName.vb: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod(Date, Date, String)
  name.vb: GetWebAppUsagesForPeriod(Date, Date, String)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_FlushCaches
  name: FlushCaches
  nameWithType: IDiagnosticsAgent.FlushCaches
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCaches
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetCacheNames
  name: GetCacheNames
  nameWithType: IDiagnosticsAgent.GetCacheNames
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheNames
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_FlushCachesByName_System_String___
  name: FlushCachesByName
  nameWithType: IDiagnosticsAgent.FlushCachesByName
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.FlushCachesByName
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetCacheState_System_String___
  name: GetCacheState
  nameWithType: IDiagnosticsAgent.GetCacheState
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetCacheState
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetEntityCountsForCurrentUser
  name: GetEntityCountsForCurrentUser
  nameWithType: IDiagnosticsAgent.GetEntityCountsForCurrentUser
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForCurrentUser
- uid: SuperOffice.CRM.Services.EntityCounts[]
  isExternal: true
  href: SuperOffice.CRM.Services.EntityCounts.html
  name: EntityCounts[]
  nameWithType: EntityCounts[]
  fullName: SuperOffice.CRM.Services.EntityCounts[]
  nameWithType.vb: EntityCounts()
  fullName.vb: SuperOffice.CRM.Services.EntityCounts()
  name.vb: EntityCounts()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.EntityCounts
    name: EntityCounts
    isExternal: true
    href: SuperOffice.CRM.Services.EntityCounts.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.EntityCounts
    name: EntityCounts
    isExternal: true
    href: SuperOffice.CRM.Services.EntityCounts.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetEntityCountsForAllUsers
  name: GetEntityCountsForAllUsers
  nameWithType: IDiagnosticsAgent.GetEntityCountsForAllUsers
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetEntityCountsForAllUsers
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_LogViewState_System_String_
  name: LogViewState
  nameWithType: IDiagnosticsAgent.LogViewState
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.LogViewState
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_ChangeLogSettings_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_System_Boolean_
  name: ChangeLogSettings
  nameWithType: IDiagnosticsAgent.ChangeLogSettings
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ChangeLogSettings
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectDataAdditions
  name: CollectDataAdditions
  nameWithType: IDiagnosticsAgent.CollectDataAdditions
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectDataAdditions
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectWinUsage
  name: CollectWinUsage
  nameWithType: IDiagnosticsAgent.CollectWinUsage
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWinUsage
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectWebUsage
  name: CollectWebUsage
  nameWithType: IDiagnosticsAgent.CollectWebUsage
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectWebUsage
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_CollectTableSizes
  name: CollectTableSizes
  nameWithType: IDiagnosticsAgent.CollectTableSizes
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.CollectTableSizes
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_ResyncUsers
  name: ResyncUsers
  nameWithType: IDiagnosticsAgent.ResyncUsers
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.ResyncUsers
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_PerformTasksAfterUpgrade
  name: PerformTasksAfterUpgrade
  nameWithType: IDiagnosticsAgent.PerformTasksAfterUpgrade
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.PerformTasksAfterUpgrade
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_AddWebAppUsage_SuperOffice_CRM_Services_WebAppUsage___
  name: AddWebAppUsage
  nameWithType: IDiagnosticsAgent.AddWebAppUsage
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.AddWebAppUsage
- uid: SuperOffice.CRM.Services.WebAppUsage[]
  isExternal: true
  href: SuperOffice.CRM.Services.WebAppUsage.html
  name: WebAppUsage[]
  nameWithType: WebAppUsage[]
  fullName: SuperOffice.CRM.Services.WebAppUsage[]
  nameWithType.vb: WebAppUsage()
  fullName.vb: SuperOffice.CRM.Services.WebAppUsage()
  name.vb: WebAppUsage()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.WebAppUsage
    name: WebAppUsage
    isExternal: true
    href: SuperOffice.CRM.Services.WebAppUsage.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.WebAppUsage
    name: WebAppUsage
    isExternal: true
    href: SuperOffice.CRM.Services.WebAppUsage.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_WebAppUsageExistsInPeriod_System_Int32_System_String_System_DateTime_
  name: WebAppUsageExistsInPeriod
  nameWithType: IDiagnosticsAgent.WebAppUsageExistsInPeriod
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.WebAppUsageExistsInPeriod
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod*
  commentId: Overload:SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod
  isExternal: true
  href: SuperOffice.CRM.Services.IDiagnosticsAgent.html#SuperOffice_CRM_Services_IDiagnosticsAgent_GetWebAppUsagesForPeriod_System_DateTime_System_DateTime_System_String_
  name: GetWebAppUsagesForPeriod
  nameWithType: IDiagnosticsAgent.GetWebAppUsagesForPeriod
  fullName: SuperOffice.CRM.Services.IDiagnosticsAgent.GetWebAppUsagesForPeriod
