### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.LicenseAgent
  commentId: T:SuperOffice.CRM.Services.LicenseAgent
  id: LicenseAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.LicenseAgent.#ctor
  - SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  - SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile(System.String)
  - SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
  - SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber(System.String,System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB
  - SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB(System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile(System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer(System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
  - SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses(System.Int32)
  - SuperOffice.CRM.Services.LicenseAgent.GetShopUrl(System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
  - SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses(System.Int32)
  - SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList
  - SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB(System.String)
  - SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
  - SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  langs:
  - csharp
  - vb
  name: LicenseAgent
  nameWithType: LicenseAgent
  fullName: SuperOffice.CRM.Services.LicenseAgent
  type: Class
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Facade for the License Agent

    License query, download, activation
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (LicenseAgent agent = new LicenseAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: 'public class LicenseAgent : AgentBase<ILicenseAgent>, IDisposable, ILicenseAgent, IAgent'
    content.vb: Public Class LicenseAgent Inherits AgentBase(Of ILicenseAgent) Implements IDisposable, ILicenseAgent, IAgent
  inheritance:
  - System.Object
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}
  implements:
  - System.IDisposable
  - SuperOffice.CRM.Services.ILicenseAgent
  - SuperOffice.CRM.Services.IAgent
  inheritedMembers:
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.Dispose
  - SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.InnerAgent
  - System.Object.ToString
  - System.Object.Equals(System.Object)
  - System.Object.Equals(System.Object,System.Object)
  - System.Object.ReferenceEquals(System.Object,System.Object)
  - System.Object.GetHashCode
  - System.Object.GetType
  - System.Object.MemberwiseClone
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB
  id: GetLicenseForAllOwnersFromDB
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetLicenseForAllOwnersFromDB()
  nameWithType: LicenseAgent.GetLicenseForAllOwnersFromDB()
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all licenses, with usage, from all module owners as they are stored in the database
  example: []
  syntax:
    content: public ExtendedLicenseInfo[] GetLicenseForAllOwnersFromDB()
    return:
      type: SuperOffice.License.ExtendedLicenseInfo[]
      description: ''
    content.vb: Public Function GetLicenseForAllOwnersFromDB() As ExtendedLicenseInfo()
  overload: SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetLicenseForAllOwnersFromDB
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer(System.String)
  id: GetLicenseFromLicenseServer(System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetLicenseFromLicenseServer(string)
  nameWithType: LicenseAgent.GetLicenseFromLicenseServer(string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ''
  example: []
  syntax:
    content: public ExtendedLicenseInfo GetLicenseFromLicenseServer(string ownerName)
    parameters:
    - id: ownerName
      type: System.String
      description: ''
    return:
      type: SuperOffice.License.ExtendedLicenseInfo
      description: ''
    content.vb: Public Function GetLicenseFromLicenseServer(ownerName As String) As ExtendedLicenseInfo
  overload: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromLicenseServer(System.String)
  nameWithType.vb: LicenseAgent.GetLicenseFromLicenseServer(String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer(String)
  name.vb: GetLicenseFromLicenseServer(String)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
  id: GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetModuleLicenseHistoryFromLicenseServer(ExtendedLicenseInfo, ExtendedModuleLicense)
  nameWithType: LicenseAgent.GetModuleLicenseHistoryFromLicenseServer(ExtendedLicenseInfo, ExtendedModuleLicense)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo, SuperOffice.License.ExtendedModuleLicense)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get details about a license from the license server.
  example: []
  syntax:
    content: public string GetModuleLicenseHistoryFromLicenseServer(ExtendedLicenseInfo licenseInfo, ExtendedModuleLicense moduleLicense)
    parameters:
    - id: licenseInfo
      type: SuperOffice.License.ExtendedLicenseInfo
      description: Description of the license
    - id: moduleLicense
      type: SuperOffice.License.ExtendedModuleLicense
      description: Information about a particular module to get information for.
    return:
      type: System.String
      description: Information about a particular license module.
    content.vb: Public Function GetModuleLicenseHistoryFromLicenseServer(licenseInfo As ExtendedLicenseInfo, moduleLicense As ExtendedModuleLicense) As String
  overload: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
- uid: SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  id: ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: ValidateLicenseInfo(ExtendedLicenseInfo)
  nameWithType: LicenseAgent.ValidateLicenseInfo(ExtendedLicenseInfo)
  fullName: SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Validate that a license is consistant.
  example: []
  syntax:
    content: public LicenseResult ValidateLicenseInfo(ExtendedLicenseInfo licenseInfo)
    parameters:
    - id: licenseInfo
      type: SuperOffice.License.ExtendedLicenseInfo
      description: License to validate consistancy for
    return:
      type: SuperOffice.CRM.Services.LicenseResult
      description: ''
    content.vb: Public Function ValidateLicenseInfo(licenseInfo As ExtendedLicenseInfo) As LicenseResult
  overload: SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
- uid: SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  id: ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: ActivateLicenseInfo(ExtendedLicenseInfo)
  nameWithType: LicenseAgent.ActivateLicenseInfo(ExtendedLicenseInfo)
  fullName: SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Save a new license to the database.
  example: []
  syntax:
    content: public LicenseResult ActivateLicenseInfo(ExtendedLicenseInfo newLicense)
    parameters:
    - id: newLicense
      type: SuperOffice.License.ExtendedLicenseInfo
      description: New license to save to the database.
    return:
      type: SuperOffice.CRM.Services.LicenseResult
      description: ''
    content.vb: Public Function ActivateLicenseInfo(newLicense As ExtendedLicenseInfo) As LicenseResult
  overload: SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
  id: GetLicenseStatusFromLicenseServer(System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetLicenseStatusFromLicenseServer(string)
  nameWithType: LicenseAgent.GetLicenseStatusFromLicenseServer(string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get License from the license server for a particular module owner.
  example: []
  syntax:
    content: public CheckLicenseStatusResult GetLicenseStatusFromLicenseServer(string ownerName)
    parameters:
    - id: ownerName
      type: System.String
      description: Name of the module owner to get license from.
    return:
      type: SuperOffice.License.CheckLicenseStatusResult
      description: License from the database, from the license server and with usage.
    content.vb: Public Function GetLicenseStatusFromLicenseServer(ownerName As String) As CheckLicenseStatusResult
  overload: SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
  nameWithType.vb: LicenseAgent.GetLicenseStatusFromLicenseServer(String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer(String)
  name.vb: GetLicenseStatusFromLicenseServer(String)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB(System.String)
  id: GetLicenseFromDB(System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetLicenseFromDB(string)
  nameWithType: LicenseAgent.GetLicenseFromDB(string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get license, with usage, as it is stored in the database for one particular module owner.
  example: []
  syntax:
    content: public ExtendedLicenseInfo GetLicenseFromDB(string ownerName)
    parameters:
    - id: ownerName
      type: System.String
      description: Name of the module owner.
    return:
      type: SuperOffice.License.ExtendedLicenseInfo
      description: License, with usage, as it is stored in the database.
    content.vb: Public Function GetLicenseFromDB(ownerName As String) As ExtendedLicenseInfo
  overload: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromDB(System.String)
  nameWithType.vb: LicenseAgent.GetLicenseFromDB(String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB(String)
  name.vb: GetLicenseFromDB(String)
- uid: SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber(System.String,System.String)
  id: ChangeSerialNumber(System.String,System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: ChangeSerialNumber(string, string)
  nameWithType: LicenseAgent.ChangeSerialNumber(string, string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber(string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Change the new serial number for the installation. Requests a new license from SuperLicense, checks if change is authorized.
  example: []
  syntax:
    content: public LicenseResult ChangeSerialNumber(string newCompanyName, string newSerialNumber)
    parameters:
    - id: newCompanyName
      type: System.String
      description: The new company name
    - id: newSerialNumber
      type: System.String
      description: New serial number to change to.
    return:
      type: SuperOffice.CRM.Services.LicenseResult
      description: License after serial number/name change
    content.vb: Public Function ChangeSerialNumber(newCompanyName As String, newSerialNumber As String) As LicenseResult
  overload: SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.ChangeSerialNumber(System.String,System.String)
  nameWithType.vb: LicenseAgent.ChangeSerialNumber(String, String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber(String, String)
  name.vb: ChangeSerialNumber(String, String)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses(System.Int32)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses(System.Int32)
  id: GetUserLicenses(System.Int32)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetUserLicenses(int)
  nameWithType: LicenseAgent.GetUserLicenses(int)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Obtain information about associate module licenses
  example: []
  syntax:
    content: public LicenseOwner[] GetUserLicenses(int associateId)
    parameters:
    - id: associateId
      type: System.Int32
      description: Associate id to check for associate module licenses
    return:
      type: SuperOffice.CRM.Services.LicenseOwner[]
      description: Associate module licenses grouped by owners.
    content.vb: Public Function GetUserLicenses(associateId As Integer) As LicenseOwner()
  overload: SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetUserLicenses(System.Int32)
  nameWithType.vb: LicenseAgent.GetUserLicenses(Integer)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses(Integer)
  name.vb: GetUserLicenses(Integer)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses(System.Int32)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses(System.Int32)
  id: GetSatelliteLicenses(System.Int32)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetSatelliteLicenses(int)
  nameWithType: LicenseAgent.GetSatelliteLicenses(int)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Obtain information about satellite module licenses
  example: []
  syntax:
    content: public LicenseOwner[] GetSatelliteLicenses(int satelliteId)
    parameters:
    - id: satelliteId
      type: System.Int32
      description: Satellite id to check for satellite module licenses
    return:
      type: SuperOffice.CRM.Services.LicenseOwner[]
      description: Satellite module licenses grouped by owners.
    content.vb: Public Function GetSatelliteLicenses(satelliteId As Integer) As LicenseOwner()
  overload: SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetSatelliteLicenses(System.Int32)
  nameWithType.vb: LicenseAgent.GetSatelliteLicenses(Integer)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses(Integer)
  name.vb: GetSatelliteLicenses(Integer)
- uid: SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB(System.String)
  id: RemoveLicenseFromDB(System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: RemoveLicenseFromDB(string)
  nameWithType: LicenseAgent.RemoveLicenseFromDB(string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Remove the license from a particular module owner from the database.  It is not permitted to remove licenses from SuperOffice
  example: []
  syntax:
    content: public LicenseResult RemoveLicenseFromDB(string moduleOwner)
    parameters:
    - id: moduleOwner
      type: System.String
      description: Name of the module owner to remove license from.
    return:
      type: SuperOffice.CRM.Services.LicenseResult
      description: ''
    content.vb: Public Function RemoveLicenseFromDB(moduleOwner As String) As LicenseResult
  overload: SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.RemoveLicenseFromDB(System.String)
  nameWithType.vb: LicenseAgent.RemoveLicenseFromDB(String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB(String)
  name.vb: RemoveLicenseFromDB(String)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile(System.String)
  id: GetLicenseFromFile(System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetLicenseFromFile(string)
  nameWithType: LicenseAgent.GetLicenseFromFile(string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Load a new license from file
  example: []
  syntax:
    content: public ExtendedLicenseInfo GetLicenseFromFile(string fileContent)
    parameters:
    - id: fileContent
      type: System.String
      description: Content of the license file as read.
    return:
      type: SuperOffice.License.ExtendedLicenseInfo
      description: ''
    content.vb: Public Function GetLicenseFromFile(fileContent As String) As ExtendedLicenseInfo
  overload: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromFile(System.String)
  nameWithType.vb: LicenseAgent.GetLicenseFromFile(String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile(String)
  name.vb: GetLicenseFromFile(String)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetShopUrl(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetShopUrl(System.String)
  id: GetShopUrl(System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetShopUrl(string)
  nameWithType: LicenseAgent.GetShopUrl(string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetShopUrl(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the shop URL for the specified module owner. This can be used to redirect user to the web shop.
  example: []
  syntax:
    content: public string GetShopUrl(string ownerName)
    parameters:
    - id: ownerName
      type: System.String
      description: Name of the module owner.
    return:
      type: System.String
      description: The URL which contains the shop for the specified module owner.
    content.vb: Public Function GetShopUrl(ownerName As String) As String
  overload: SuperOffice.CRM.Services.LicenseAgent.GetShopUrl*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetShopUrl(System.String)
  nameWithType.vb: LicenseAgent.GetShopUrl(String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetShopUrl(String)
  name.vb: GetShopUrl(String)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList
  id: GetUserLicensesMDOList
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetUserLicensesMDOList()
  nameWithType: LicenseAgent.GetUserLicensesMDOList()
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all licenses in a MDOListItem structure.
  example: []
  syntax:
    content: public SelectableMDOListItem[] GetUserLicensesMDOList()
    return:
      type: SuperOffice.CRM.Services.SelectableMDOListItem[]
      description: Hierarchical structure of user licenses.
    content.vb: Public Function GetUserLicensesMDOList() As SelectableMDOListItem()
  overload: SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetUserLicensesMDOList
- uid: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
  id: GetModuleLicenseFromDB(System.String,System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetModuleLicenseFromDB(string, string)
  nameWithType: LicenseAgent.GetModuleLicenseFromDB(string, string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB(string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get license information for one particular license module.
  example: []
  syntax:
    content: public ModuleLicense GetModuleLicenseFromDB(string ownerName, string moduleName)
    parameters:
    - id: ownerName
      type: System.String
      description: Name of the module owner.
    - id: moduleName
      type: System.String
      description: Name of the license module.
    return:
      type: SuperOffice.License.ModuleLicense
      description: Module License details, as it is stored in the database. NULL if not found.
    content.vb: Public Function GetModuleLicenseFromDB(ownerName As String, moduleName As String) As ModuleLicense
  overload: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
  nameWithType.vb: LicenseAgent.GetModuleLicenseFromDB(String, String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB(String, String)
  name.vb: GetModuleLicenseFromDB(String, String)
- uid: SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile(System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile(System.String)
  id: AddLicenseFromFile(System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: AddLicenseFromFile(string)
  nameWithType: LicenseAgent.AddLicenseFromFile(string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Load and activate a new license from file/string if the new license is valid.
  example: []
  syntax:
    content: public ExtendedLicenseInfo AddLicenseFromFile(string fileContent)
    parameters:
    - id: fileContent
      type: System.String
      description: Content of the license file as XML.
    return:
      type: SuperOffice.License.ExtendedLicenseInfo
      description: Activated license
    content.vb: Public Function AddLicenseFromFile(fileContent As String) As ExtendedLicenseInfo
  overload: SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.AddLicenseFromFile(System.String)
  nameWithType.vb: LicenseAgent.AddLicenseFromFile(String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile(String)
  name.vb: AddLicenseFromFile(String)
- uid: SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
  id: GetThirdPartyLicenseAssignments(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: GetThirdPartyLicenseAssignments(int, string)
  nameWithType: LicenseAgent.GetThirdPartyLicenseAssignments(int, string)
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get license assignments for an associate for licenses belonging to an other module owner than SuperOffice
  example: []
  syntax:
    content: public ModuleLicenseLink[] GetThirdPartyLicenseAssignments(int associateId, string moduleOwner)
    parameters:
    - id: associateId
      type: System.Int32
      description: User to get third party license assignments for
    - id: moduleOwner
      type: System.String
      description: Name of the module owner to get license assignments for
    return:
      type: SuperOffice.CRM.Services.ModuleLicenseLink[]
      description: Module license names
    content.vb: Public Function GetThirdPartyLicenseAssignments(associateId As Integer, moduleOwner As String) As ModuleLicenseLink()
  overload: SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
  nameWithType.vb: LicenseAgent.GetThirdPartyLicenseAssignments(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments(Integer, String)
  name.vb: GetThirdPartyLicenseAssignments(Integer, String)
- uid: SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
  id: AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: AssignThirdPartyLicenses(int, string, string[])
  nameWithType: LicenseAgent.AssignThirdPartyLicenses(int, string, string[])
  fullName: SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses(int, string, string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Assign third party licenses
  example: []
  syntax:
    content: public ModuleLicenseLink[] AssignThirdPartyLicenses(int associateId, string moduleOwner, string[] moduleLicenseNames)
    parameters:
    - id: associateId
      type: System.Int32
      description: User to assign third party licenses for
    - id: moduleOwner
      type: System.String
      description: Name of the module owner to assign license for
    - id: moduleLicenseNames
      type: System.String[]
      description: Name of module licenses to assign
    return:
      type: SuperOffice.CRM.Services.ModuleLicenseLink[]
      description: All module license names assigned
    content.vb: Public Function AssignThirdPartyLicenses(associateId As Integer, moduleOwner As String, moduleLicenseNames As String()) As ModuleLicenseLink()
  overload: SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
  nameWithType.vb: LicenseAgent.AssignThirdPartyLicenses(Integer, String, String())
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses(Integer, String, String())
  name.vb: AssignThirdPartyLicenses(Integer, String, String())
- uid: SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
  id: UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: UnassignThirdPartyLicenses(int, string, string[])
  nameWithType: LicenseAgent.UnassignThirdPartyLicenses(int, string, string[])
  fullName: SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses(int, string, string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Unassign (remove) third party licenses
  example: []
  syntax:
    content: public ModuleLicenseLink[] UnassignThirdPartyLicenses(int associateId, string moduleOwner, string[] moduleLicenseNames)
    parameters:
    - id: associateId
      type: System.Int32
      description: User to unassign third party licenses for
    - id: moduleOwner
      type: System.String
      description: Name of the module owner to unassign license for
    - id: moduleLicenseNames
      type: System.String[]
      description: Name of module licenses to unassign (remove)
    return:
      type: SuperOffice.CRM.Services.ModuleLicenseLink[]
      description: All module license names assigned
    content.vb: Public Function UnassignThirdPartyLicenses(associateId As Integer, moduleOwner As String, moduleLicenseNames As String()) As ModuleLicenseLink()
  overload: SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses*
  implements:
  - SuperOffice.CRM.Services.ILicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
  nameWithType.vb: LicenseAgent.UnassignThirdPartyLicenses(Integer, String, String())
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses(Integer, String, String())
  name.vb: UnassignThirdPartyLicenses(Integer, String, String())
- uid: SuperOffice.CRM.Services.LicenseAgent.#ctor
  commentId: M:SuperOffice.CRM.Services.LicenseAgent.#ctor
  id: '#ctor'
  parent: SuperOffice.CRM.Services.LicenseAgent
  langs:
  - csharp
  - vb
  name: LicenseAgent()
  nameWithType: LicenseAgent.LicenseAgent()
  fullName: SuperOffice.CRM.Services.LicenseAgent.LicenseAgent()
  type: Constructor
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  syntax:
    content: public LicenseAgent()
    content.vb: Public Sub New()
  overload: SuperOffice.CRM.Services.LicenseAgent.#ctor*
  nameWithType.vb: LicenseAgent.New()
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.New()
  name.vb: New()
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: System.Object
  commentId: T:System.Object
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object
  name: object
  nameWithType: object
  fullName: object
  nameWithType.vb: Object
  fullName.vb: Object
  name.vb: Object
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}
  commentId: T:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}
  parent: SuperOffice.CRM.Services
  definition: SuperOffice.CRM.Services.AgentBase`1
  href: SuperOffice.CRM.Services.AgentBase-1.html
  name: AgentBase<ILicenseAgent>
  nameWithType: AgentBase<ILicenseAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.ILicenseAgent>
  nameWithType.vb: AgentBase(Of ILicenseAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.ILicenseAgent)
  name.vb: AgentBase(Of ILicenseAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html
  - name: <
  - uid: SuperOffice.CRM.Services.ILicenseAgent
    name: ILicenseAgent
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html
  - name: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html
  - name: (
  - name: Of
  - name: " "
  - uid: SuperOffice.CRM.Services.ILicenseAgent
    name: ILicenseAgent
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html
  - name: )
- uid: System.IDisposable
  commentId: T:System.IDisposable
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.idisposable
  name: IDisposable
  nameWithType: IDisposable
  fullName: System.IDisposable
- uid: SuperOffice.CRM.Services.ILicenseAgent
  commentId: T:SuperOffice.CRM.Services.ILicenseAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html
  name: ILicenseAgent
  nameWithType: ILicenseAgent
  fullName: SuperOffice.CRM.Services.ILicenseAgent
- uid: SuperOffice.CRM.Services.IAgent
  commentId: T:SuperOffice.CRM.Services.IAgent
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.IAgent.html
  name: IAgent
  nameWithType: IAgent
  fullName: SuperOffice.CRM.Services.IAgent
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.Dispose
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.Dispose
  href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_Dispose
  name: Dispose()
  nameWithType: AgentBase<ILicenseAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.ILicenseAgent>.Dispose()
  nameWithType.vb: AgentBase(Of ILicenseAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.ILicenseAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.Dispose
    name: Dispose
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.Dispose
    name: Dispose
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_Dispose
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}.InnerAgent
  parent: SuperOffice.CRM.Services.AgentBase{SuperOffice.CRM.Services.ILicenseAgent}
  definition: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_InnerAgent
  name: InnerAgent
  nameWithType: AgentBase<ILicenseAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<SuperOffice.CRM.Services.ILicenseAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of ILicenseAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of SuperOffice.CRM.Services.ILicenseAgent).InnerAgent
- uid: System.Object.ToString
  commentId: M:System.Object.ToString
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  name: ToString()
  nameWithType: object.ToString()
  fullName: object.ToString()
  nameWithType.vb: Object.ToString()
  fullName.vb: Object.ToString()
  spec.csharp:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.ToString
    name: ToString
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.tostring
  - name: (
  - name: )
- uid: System.Object.Equals(System.Object)
  commentId: M:System.Object.Equals(System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  name: Equals(object)
  nameWithType: object.Equals(object)
  fullName: object.Equals(object)
  nameWithType.vb: Object.Equals(Object)
  fullName.vb: Object.Equals(Object)
  name.vb: Equals(Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.Equals(System.Object,System.Object)
  commentId: M:System.Object.Equals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  name: Equals(object, object)
  nameWithType: object.Equals(object, object)
  fullName: object.Equals(object, object)
  nameWithType.vb: Object.Equals(Object, Object)
  fullName.vb: Object.Equals(Object, Object)
  name.vb: Equals(Object, Object)
  spec.csharp:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.Equals(System.Object,System.Object)
    name: Equals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.equals#system-object-equals(system-object-system-object)
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.ReferenceEquals(System.Object,System.Object)
  commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  name: ReferenceEquals(object, object)
  nameWithType: object.ReferenceEquals(object, object)
  fullName: object.ReferenceEquals(object, object)
  nameWithType.vb: Object.ReferenceEquals(Object, Object)
  fullName.vb: Object.ReferenceEquals(Object, Object)
  name.vb: ReferenceEquals(Object, Object)
  spec.csharp:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
  spec.vb:
  - uid: System.Object.ReferenceEquals(System.Object,System.Object)
    name: ReferenceEquals
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.referenceequals
  - name: (
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: ','
  - name: " "
  - uid: System.Object
    name: Object
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object
  - name: )
- uid: System.Object.GetHashCode
  commentId: M:System.Object.GetHashCode
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  name: GetHashCode()
  nameWithType: object.GetHashCode()
  fullName: object.GetHashCode()
  nameWithType.vb: Object.GetHashCode()
  fullName.vb: Object.GetHashCode()
  spec.csharp:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetHashCode
    name: GetHashCode
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gethashcode
  - name: (
  - name: )
- uid: System.Object.GetType
  commentId: M:System.Object.GetType
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  name: GetType()
  nameWithType: object.GetType()
  fullName: object.GetType()
  nameWithType.vb: Object.GetType()
  fullName.vb: Object.GetType()
  spec.csharp:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.GetType
    name: GetType
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.gettype
  - name: (
  - name: )
- uid: System.Object.MemberwiseClone
  commentId: M:System.Object.MemberwiseClone
  parent: System.Object
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  name: MemberwiseClone()
  nameWithType: object.MemberwiseClone()
  fullName: object.MemberwiseClone()
  nameWithType.vb: Object.MemberwiseClone()
  fullName.vb: Object.MemberwiseClone()
  spec.csharp:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
  spec.vb:
  - uid: System.Object.MemberwiseClone
    name: MemberwiseClone
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.object.memberwiseclone
  - name: (
  - name: )
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.AgentBase`1
  commentId: T:SuperOffice.CRM.Services.AgentBase`1
  isExternal: true
  href: SuperOffice.CRM.Services.AgentBase-1.html
  name: AgentBase<TAgent>
  nameWithType: AgentBase<TAgent>
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>
  nameWithType.vb: AgentBase(Of TAgent)
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent)
  name.vb: AgentBase(Of TAgent)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html
  - name: <
  - name: TAgent
  - name: '>'
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1
    name: AgentBase
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html
  - name: (
  - name: Of
  - name: " "
  - name: TAgent
  - name: )
- uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
  commentId: M:SuperOffice.CRM.Services.AgentBase`1.Dispose
  isExternal: true
  href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_Dispose
  name: Dispose()
  nameWithType: AgentBase<TAgent>.Dispose()
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.Dispose()
  nameWithType.vb: AgentBase(Of TAgent).Dispose()
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).Dispose()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_Dispose
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.AgentBase`1.Dispose
    name: Dispose
    isExternal: true
    href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_Dispose
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  commentId: P:SuperOffice.CRM.Services.AgentBase`1.InnerAgent
  isExternal: true
  href: SuperOffice.CRM.Services.AgentBase-1.html#SuperOffice_CRM_Services_AgentBase_1_InnerAgent
  name: InnerAgent
  nameWithType: AgentBase<TAgent>.InnerAgent
  fullName: SuperOffice.CRM.Services.AgentBase<TAgent>.InnerAgent
  nameWithType.vb: AgentBase(Of TAgent).InnerAgent
  fullName.vb: SuperOffice.CRM.Services.AgentBase(Of TAgent).InnerAgent
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetLicenseForAllOwnersFromDB
  name: GetLicenseForAllOwnersFromDB
  nameWithType: LicenseAgent.GetLicenseForAllOwnersFromDB
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseForAllOwnersFromDB
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseForAllOwnersFromDB
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetLicenseForAllOwnersFromDB
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseForAllOwnersFromDB
  name: GetLicenseForAllOwnersFromDB()
  nameWithType: ILicenseAgent.GetLicenseForAllOwnersFromDB()
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseForAllOwnersFromDB()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseForAllOwnersFromDB
    name: GetLicenseForAllOwnersFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseForAllOwnersFromDB
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseForAllOwnersFromDB
    name: GetLicenseForAllOwnersFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseForAllOwnersFromDB
  - name: (
  - name: )
- uid: SuperOffice.License.ExtendedLicenseInfo[]
  isExternal: true
  name: ExtendedLicenseInfo[]
  nameWithType: ExtendedLicenseInfo[]
  fullName: SuperOffice.License.ExtendedLicenseInfo[]
  nameWithType.vb: ExtendedLicenseInfo()
  fullName.vb: SuperOffice.License.ExtendedLicenseInfo()
  name.vb: ExtendedLicenseInfo()
  spec.csharp:
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetLicenseFromLicenseServer_System_String_
  name: GetLicenseFromLicenseServer
  nameWithType: LicenseAgent.GetLicenseFromLicenseServer
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromLicenseServer
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromLicenseServer(System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromLicenseServer(System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromLicenseServer_System_String_
  name: GetLicenseFromLicenseServer(string)
  nameWithType: ILicenseAgent.GetLicenseFromLicenseServer(string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromLicenseServer(string)
  nameWithType.vb: ILicenseAgent.GetLicenseFromLicenseServer(String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromLicenseServer(String)
  name.vb: GetLicenseFromLicenseServer(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromLicenseServer(System.String)
    name: GetLicenseFromLicenseServer
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromLicenseServer_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromLicenseServer(System.String)
    name: GetLicenseFromLicenseServer
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromLicenseServer_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.License.ExtendedLicenseInfo
  isExternal: true
  name: ExtendedLicenseInfo
  nameWithType: ExtendedLicenseInfo
  fullName: SuperOffice.License.ExtendedLicenseInfo
- uid: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetModuleLicenseHistoryFromLicenseServer_SuperOffice_License_ExtendedLicenseInfo_SuperOffice_License_ExtendedModuleLicense_
  name: GetModuleLicenseHistoryFromLicenseServer
  nameWithType: LicenseAgent.GetModuleLicenseHistoryFromLicenseServer
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseHistoryFromLicenseServer
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetModuleLicenseHistoryFromLicenseServer_SuperOffice_License_ExtendedLicenseInfo_SuperOffice_License_ExtendedModuleLicense_
  name: GetModuleLicenseHistoryFromLicenseServer(ExtendedLicenseInfo, ExtendedModuleLicense)
  nameWithType: ILicenseAgent.GetModuleLicenseHistoryFromLicenseServer(ExtendedLicenseInfo, ExtendedModuleLicense)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo, SuperOffice.License.ExtendedModuleLicense)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
    name: GetModuleLicenseHistoryFromLicenseServer
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetModuleLicenseHistoryFromLicenseServer_SuperOffice_License_ExtendedLicenseInfo_SuperOffice_License_ExtendedModuleLicense_
  - name: (
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseHistoryFromLicenseServer(SuperOffice.License.ExtendedLicenseInfo,SuperOffice.License.ExtendedModuleLicense)
    name: GetModuleLicenseHistoryFromLicenseServer
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetModuleLicenseHistoryFromLicenseServer_SuperOffice_License_ExtendedLicenseInfo_SuperOffice_License_ExtendedModuleLicense_
  - name: (
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: ','
  - name: " "
  - uid: SuperOffice.License.ExtendedModuleLicense
    name: ExtendedModuleLicense
    isExternal: true
  - name: )
- uid: SuperOffice.License.ExtendedModuleLicense
  isExternal: true
  name: ExtendedModuleLicense
  nameWithType: ExtendedModuleLicense
  fullName: SuperOffice.License.ExtendedModuleLicense
- uid: SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_ValidateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  name: ValidateLicenseInfo
  nameWithType: LicenseAgent.ValidateLicenseInfo
  fullName: SuperOffice.CRM.Services.LicenseAgent.ValidateLicenseInfo
- uid: SuperOffice.CRM.Services.ILicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ValidateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  name: ValidateLicenseInfo(ExtendedLicenseInfo)
  nameWithType: ILicenseAgent.ValidateLicenseInfo(ExtendedLicenseInfo)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
    name: ValidateLicenseInfo
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ValidateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  - name: (
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.ValidateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
    name: ValidateLicenseInfo
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ValidateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  - name: (
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Services.LicenseResult
  commentId: T:SuperOffice.CRM.Services.LicenseResult
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseResult.html
  name: LicenseResult
  nameWithType: LicenseResult
  fullName: SuperOffice.CRM.Services.LicenseResult
- uid: SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_ActivateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  name: ActivateLicenseInfo
  nameWithType: LicenseAgent.ActivateLicenseInfo
  fullName: SuperOffice.CRM.Services.LicenseAgent.ActivateLicenseInfo
- uid: SuperOffice.CRM.Services.ILicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ActivateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  name: ActivateLicenseInfo(ExtendedLicenseInfo)
  nameWithType: ILicenseAgent.ActivateLicenseInfo(ExtendedLicenseInfo)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
    name: ActivateLicenseInfo
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ActivateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  - name: (
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.ActivateLicenseInfo(SuperOffice.License.ExtendedLicenseInfo)
    name: ActivateLicenseInfo
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ActivateLicenseInfo_SuperOffice_License_ExtendedLicenseInfo_
  - name: (
  - uid: SuperOffice.License.ExtendedLicenseInfo
    name: ExtendedLicenseInfo
    isExternal: true
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetLicenseStatusFromLicenseServer_System_String_
  name: GetLicenseStatusFromLicenseServer
  nameWithType: LicenseAgent.GetLicenseStatusFromLicenseServer
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseStatusFromLicenseServer
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseStatusFromLicenseServer_System_String_
  name: GetLicenseStatusFromLicenseServer(string)
  nameWithType: ILicenseAgent.GetLicenseStatusFromLicenseServer(string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseStatusFromLicenseServer(string)
  nameWithType.vb: ILicenseAgent.GetLicenseStatusFromLicenseServer(String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseStatusFromLicenseServer(String)
  name.vb: GetLicenseStatusFromLicenseServer(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
    name: GetLicenseStatusFromLicenseServer
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseStatusFromLicenseServer_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseStatusFromLicenseServer(System.String)
    name: GetLicenseStatusFromLicenseServer
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseStatusFromLicenseServer_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.License.CheckLicenseStatusResult
  isExternal: true
  name: CheckLicenseStatusResult
  nameWithType: CheckLicenseStatusResult
  fullName: SuperOffice.License.CheckLicenseStatusResult
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetLicenseFromDB_System_String_
  name: GetLicenseFromDB
  nameWithType: LicenseAgent.GetLicenseFromDB
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromDB
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromDB(System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromDB(System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromDB_System_String_
  name: GetLicenseFromDB(string)
  nameWithType: ILicenseAgent.GetLicenseFromDB(string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromDB(string)
  nameWithType.vb: ILicenseAgent.GetLicenseFromDB(String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromDB(String)
  name.vb: GetLicenseFromDB(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromDB(System.String)
    name: GetLicenseFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromDB_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromDB(System.String)
    name: GetLicenseFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromDB_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_ChangeSerialNumber_System_String_System_String_
  name: ChangeSerialNumber
  nameWithType: LicenseAgent.ChangeSerialNumber
  fullName: SuperOffice.CRM.Services.LicenseAgent.ChangeSerialNumber
- uid: SuperOffice.CRM.Services.ILicenseAgent.ChangeSerialNumber(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.ChangeSerialNumber(System.String,System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ChangeSerialNumber_System_String_System_String_
  name: ChangeSerialNumber(string, string)
  nameWithType: ILicenseAgent.ChangeSerialNumber(string, string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.ChangeSerialNumber(string, string)
  nameWithType.vb: ILicenseAgent.ChangeSerialNumber(String, String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.ChangeSerialNumber(String, String)
  name.vb: ChangeSerialNumber(String, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.ChangeSerialNumber(System.String,System.String)
    name: ChangeSerialNumber
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ChangeSerialNumber_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.ChangeSerialNumber(System.String,System.String)
    name: ChangeSerialNumber
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_ChangeSerialNumber_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetUserLicenses_System_Int32_
  name: GetUserLicenses
  nameWithType: LicenseAgent.GetUserLicenses
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetUserLicenses
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicenses(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetUserLicenses(System.Int32)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetUserLicenses_System_Int32_
  name: GetUserLicenses(int)
  nameWithType: ILicenseAgent.GetUserLicenses(int)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicenses(int)
  nameWithType.vb: ILicenseAgent.GetUserLicenses(Integer)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicenses(Integer)
  name.vb: GetUserLicenses(Integer)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicenses(System.Int32)
    name: GetUserLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetUserLicenses_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicenses(System.Int32)
    name: GetUserLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetUserLicenses_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: SuperOffice.CRM.Services.LicenseOwner[]
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseOwner.html
  name: LicenseOwner[]
  nameWithType: LicenseOwner[]
  fullName: SuperOffice.CRM.Services.LicenseOwner[]
  nameWithType.vb: LicenseOwner()
  fullName.vb: SuperOffice.CRM.Services.LicenseOwner()
  name.vb: LicenseOwner()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.LicenseOwner
    name: LicenseOwner
    isExternal: true
    href: SuperOffice.CRM.Services.LicenseOwner.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.LicenseOwner
    name: LicenseOwner
    isExternal: true
    href: SuperOffice.CRM.Services.LicenseOwner.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetSatelliteLicenses_System_Int32_
  name: GetSatelliteLicenses
  nameWithType: LicenseAgent.GetSatelliteLicenses
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetSatelliteLicenses
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetSatelliteLicenses(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetSatelliteLicenses(System.Int32)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetSatelliteLicenses_System_Int32_
  name: GetSatelliteLicenses(int)
  nameWithType: ILicenseAgent.GetSatelliteLicenses(int)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetSatelliteLicenses(int)
  nameWithType.vb: ILicenseAgent.GetSatelliteLicenses(Integer)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetSatelliteLicenses(Integer)
  name.vb: GetSatelliteLicenses(Integer)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetSatelliteLicenses(System.Int32)
    name: GetSatelliteLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetSatelliteLicenses_System_Int32_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetSatelliteLicenses(System.Int32)
    name: GetSatelliteLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetSatelliteLicenses_System_Int32_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_RemoveLicenseFromDB_System_String_
  name: RemoveLicenseFromDB
  nameWithType: LicenseAgent.RemoveLicenseFromDB
  fullName: SuperOffice.CRM.Services.LicenseAgent.RemoveLicenseFromDB
- uid: SuperOffice.CRM.Services.ILicenseAgent.RemoveLicenseFromDB(System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.RemoveLicenseFromDB(System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_RemoveLicenseFromDB_System_String_
  name: RemoveLicenseFromDB(string)
  nameWithType: ILicenseAgent.RemoveLicenseFromDB(string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.RemoveLicenseFromDB(string)
  nameWithType.vb: ILicenseAgent.RemoveLicenseFromDB(String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.RemoveLicenseFromDB(String)
  name.vb: RemoveLicenseFromDB(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.RemoveLicenseFromDB(System.String)
    name: RemoveLicenseFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_RemoveLicenseFromDB_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.RemoveLicenseFromDB(System.String)
    name: RemoveLicenseFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_RemoveLicenseFromDB_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetLicenseFromFile_System_String_
  name: GetLicenseFromFile
  nameWithType: LicenseAgent.GetLicenseFromFile
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetLicenseFromFile
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromFile(System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromFile(System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromFile_System_String_
  name: GetLicenseFromFile(string)
  nameWithType: ILicenseAgent.GetLicenseFromFile(string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromFile(string)
  nameWithType.vb: ILicenseAgent.GetLicenseFromFile(String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromFile(String)
  name.vb: GetLicenseFromFile(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromFile(System.String)
    name: GetLicenseFromFile
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromFile_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetLicenseFromFile(System.String)
    name: GetLicenseFromFile
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetLicenseFromFile_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetShopUrl*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetShopUrl
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetShopUrl_System_String_
  name: GetShopUrl
  nameWithType: LicenseAgent.GetShopUrl
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetShopUrl
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetShopUrl(System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetShopUrl(System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetShopUrl_System_String_
  name: GetShopUrl(string)
  nameWithType: ILicenseAgent.GetShopUrl(string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetShopUrl(string)
  nameWithType.vb: ILicenseAgent.GetShopUrl(String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetShopUrl(String)
  name.vb: GetShopUrl(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetShopUrl(System.String)
    name: GetShopUrl
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetShopUrl_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetShopUrl(System.String)
    name: GetShopUrl
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetShopUrl_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetUserLicensesMDOList
  name: GetUserLicensesMDOList
  nameWithType: LicenseAgent.GetUserLicensesMDOList
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetUserLicensesMDOList
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicensesMDOList
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetUserLicensesMDOList
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetUserLicensesMDOList
  name: GetUserLicensesMDOList()
  nameWithType: ILicenseAgent.GetUserLicensesMDOList()
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicensesMDOList()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicensesMDOList
    name: GetUserLicensesMDOList
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetUserLicensesMDOList
  - name: (
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetUserLicensesMDOList
    name: GetUserLicensesMDOList
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetUserLicensesMDOList
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.SelectableMDOListItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.SelectableMDOListItem.html
  name: SelectableMDOListItem[]
  nameWithType: SelectableMDOListItem[]
  fullName: SuperOffice.CRM.Services.SelectableMDOListItem[]
  nameWithType.vb: SelectableMDOListItem()
  fullName.vb: SuperOffice.CRM.Services.SelectableMDOListItem()
  name.vb: SelectableMDOListItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.SelectableMDOListItem
    name: SelectableMDOListItem
    isExternal: true
    href: SuperOffice.CRM.Services.SelectableMDOListItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.SelectableMDOListItem
    name: SelectableMDOListItem
    isExternal: true
    href: SuperOffice.CRM.Services.SelectableMDOListItem.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetModuleLicenseFromDB_System_String_System_String_
  name: GetModuleLicenseFromDB
  nameWithType: LicenseAgent.GetModuleLicenseFromDB
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetModuleLicenseFromDB
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetModuleLicenseFromDB_System_String_System_String_
  name: GetModuleLicenseFromDB(string, string)
  nameWithType: ILicenseAgent.GetModuleLicenseFromDB(string, string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseFromDB(string, string)
  nameWithType.vb: ILicenseAgent.GetModuleLicenseFromDB(String, String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseFromDB(String, String)
  name.vb: GetModuleLicenseFromDB(String, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
    name: GetModuleLicenseFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetModuleLicenseFromDB_System_String_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetModuleLicenseFromDB(System.String,System.String)
    name: GetModuleLicenseFromDB
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetModuleLicenseFromDB_System_String_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.License.ModuleLicense
  isExternal: true
  name: ModuleLicense
  nameWithType: ModuleLicense
  fullName: SuperOffice.License.ModuleLicense
- uid: SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_AddLicenseFromFile_System_String_
  name: AddLicenseFromFile
  nameWithType: LicenseAgent.AddLicenseFromFile
  fullName: SuperOffice.CRM.Services.LicenseAgent.AddLicenseFromFile
- uid: SuperOffice.CRM.Services.ILicenseAgent.AddLicenseFromFile(System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.AddLicenseFromFile(System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_AddLicenseFromFile_System_String_
  name: AddLicenseFromFile(string)
  nameWithType: ILicenseAgent.AddLicenseFromFile(string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.AddLicenseFromFile(string)
  nameWithType.vb: ILicenseAgent.AddLicenseFromFile(String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.AddLicenseFromFile(String)
  name.vb: AddLicenseFromFile(String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.AddLicenseFromFile(System.String)
    name: AddLicenseFromFile
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_AddLicenseFromFile_System_String_
  - name: (
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.AddLicenseFromFile(System.String)
    name: AddLicenseFromFile
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_AddLicenseFromFile_System_String_
  - name: (
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_GetThirdPartyLicenseAssignments_System_Int32_System_String_
  name: GetThirdPartyLicenseAssignments
  nameWithType: LicenseAgent.GetThirdPartyLicenseAssignments
  fullName: SuperOffice.CRM.Services.LicenseAgent.GetThirdPartyLicenseAssignments
- uid: SuperOffice.CRM.Services.ILicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetThirdPartyLicenseAssignments_System_Int32_System_String_
  name: GetThirdPartyLicenseAssignments(int, string)
  nameWithType: ILicenseAgent.GetThirdPartyLicenseAssignments(int, string)
  fullName: SuperOffice.CRM.Services.ILicenseAgent.GetThirdPartyLicenseAssignments(int, string)
  nameWithType.vb: ILicenseAgent.GetThirdPartyLicenseAssignments(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.GetThirdPartyLicenseAssignments(Integer, String)
  name.vb: GetThirdPartyLicenseAssignments(Integer, String)
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
    name: GetThirdPartyLicenseAssignments
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetThirdPartyLicenseAssignments_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.GetThirdPartyLicenseAssignments(System.Int32,System.String)
    name: GetThirdPartyLicenseAssignments
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_GetThirdPartyLicenseAssignments_System_Int32_System_String_
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: )
- uid: SuperOffice.CRM.Services.ModuleLicenseLink[]
  isExternal: true
  href: SuperOffice.CRM.Services.ModuleLicenseLink.html
  name: ModuleLicenseLink[]
  nameWithType: ModuleLicenseLink[]
  fullName: SuperOffice.CRM.Services.ModuleLicenseLink[]
  nameWithType.vb: ModuleLicenseLink()
  fullName.vb: SuperOffice.CRM.Services.ModuleLicenseLink()
  name.vb: ModuleLicenseLink()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ModuleLicenseLink
    name: ModuleLicenseLink
    isExternal: true
    href: SuperOffice.CRM.Services.ModuleLicenseLink.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ModuleLicenseLink
    name: ModuleLicenseLink
    isExternal: true
    href: SuperOffice.CRM.Services.ModuleLicenseLink.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_AssignThirdPartyLicenses_System_Int32_System_String_System_String___
  name: AssignThirdPartyLicenses
  nameWithType: LicenseAgent.AssignThirdPartyLicenses
  fullName: SuperOffice.CRM.Services.LicenseAgent.AssignThirdPartyLicenses
- uid: SuperOffice.CRM.Services.ILicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_AssignThirdPartyLicenses_System_Int32_System_String_System_String___
  name: AssignThirdPartyLicenses(int, string, string[])
  nameWithType: ILicenseAgent.AssignThirdPartyLicenses(int, string, string[])
  fullName: SuperOffice.CRM.Services.ILicenseAgent.AssignThirdPartyLicenses(int, string, string[])
  nameWithType.vb: ILicenseAgent.AssignThirdPartyLicenses(Integer, String, String())
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.AssignThirdPartyLicenses(Integer, String, String())
  name.vb: AssignThirdPartyLicenses(Integer, String, String())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
    name: AssignThirdPartyLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_AssignThirdPartyLicenses_System_Int32_System_String_System_String___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.AssignThirdPartyLicenses(System.Int32,System.String,System.String[])
    name: AssignThirdPartyLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_AssignThirdPartyLicenses_System_Int32_System_String_System_String___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent_UnassignThirdPartyLicenses_System_Int32_System_String_System_String___
  name: UnassignThirdPartyLicenses
  nameWithType: LicenseAgent.UnassignThirdPartyLicenses
  fullName: SuperOffice.CRM.Services.LicenseAgent.UnassignThirdPartyLicenses
- uid: SuperOffice.CRM.Services.ILicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
  commentId: M:SuperOffice.CRM.Services.ILicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
  parent: SuperOffice.CRM.Services.ILicenseAgent
  isExternal: true
  href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_UnassignThirdPartyLicenses_System_Int32_System_String_System_String___
  name: UnassignThirdPartyLicenses(int, string, string[])
  nameWithType: ILicenseAgent.UnassignThirdPartyLicenses(int, string, string[])
  fullName: SuperOffice.CRM.Services.ILicenseAgent.UnassignThirdPartyLicenses(int, string, string[])
  nameWithType.vb: ILicenseAgent.UnassignThirdPartyLicenses(Integer, String, String())
  fullName.vb: SuperOffice.CRM.Services.ILicenseAgent.UnassignThirdPartyLicenses(Integer, String, String())
  name.vb: UnassignThirdPartyLicenses(Integer, String, String())
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
    name: UnassignThirdPartyLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_UnassignThirdPartyLicenses_System_Int32_System_String_System_String___
  - name: (
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  - name: )
  spec.vb:
  - uid: SuperOffice.CRM.Services.ILicenseAgent.UnassignThirdPartyLicenses(System.Int32,System.String,System.String[])
    name: UnassignThirdPartyLicenses
    isExternal: true
    href: SuperOffice.CRM.Services.ILicenseAgent.html#SuperOffice_CRM_Services_ILicenseAgent_UnassignThirdPartyLicenses_System_Int32_System_String_System_String___
  - name: (
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: ','
  - name: " "
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
  - name: )
- uid: SuperOffice.CRM.Services.LicenseAgent.#ctor*
  commentId: Overload:SuperOffice.CRM.Services.LicenseAgent.#ctor
  isExternal: true
  href: SuperOffice.CRM.Services.LicenseAgent.html#SuperOffice_CRM_Services_LicenseAgent__ctor
  name: LicenseAgent
  nameWithType: LicenseAgent.LicenseAgent
  fullName: SuperOffice.CRM.Services.LicenseAgent.LicenseAgent
  nameWithType.vb: LicenseAgent.New
  fullName.vb: SuperOffice.CRM.Services.LicenseAgent.New
  name.vb: New
