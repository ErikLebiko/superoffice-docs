### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ISelectionAgent
  commentId: T:SuperOffice.CRM.Services.ISelectionAgent
  id: ISelectionAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  - SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  - SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings
  - SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask
  - SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity
  - SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry(SuperOffice.CRM.Services.DuplicateEntry)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity(System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds(System.Int32[],System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.DeletePersons(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues)
  - SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers(System.Int32,System.String,System.Boolean)
  - SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy(System.Int32,System.String,System.Boolean,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean)
  - SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules
  - SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates(System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  - SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity(System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind(System.String,System.Int32)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries(System.Int32[])
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity(SuperOffice.CRM.Services.SelectionEntity)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus(SuperOffice.CRM.Services.DuplicateRule[])
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2(System.Int32,System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  - SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[])
  - SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge(SuperOffice.CRM.Services.MailMergeSettings)
  - SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch(SuperOffice.CRM.Services.TypicalSearches)
  langs:
  - csharp
  - vb
  name: ISelectionAgent
  nameWithType: ISelectionAgent
  fullName: SuperOffice.CRM.Services.ISelectionAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Selection Agent

    Selections, entities, members and tasks
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (SelectionAgent agent = new SelectionAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Selection Agent", "Interface for the Selection Agent. Selections, entities, members and tasks")]

      public interface ISelectionAgent : IAgent
    content.vb: >-
      <Agent("Selection Agent", "Interface for the Selection Agent. Selections, entities, members and tasks")>

      Public Interface ISelectionAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Selection Agent
    - type: System.String
      value: Interface for the Selection Agent. Selections, entities, members and tasks
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings
  id: CreateDefaultMailMergeSettings
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultMailMergeSettings()
  nameWithType: ISelectionAgent.CreateDefaultMailMergeSettings()
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new MailMergeSettings.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: MailMergeSettings CreateDefaultMailMergeSettings()
    return:
      type: SuperOffice.CRM.Services.MailMergeSettings
      description: New MailMergeSettings with default values
    content.vb: Function CreateDefaultMailMergeSettings() As MailMergeSettings
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask
  id: CreateDefaultMailMergeTask
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultMailMergeTask()
  nameWithType: ISelectionAgent.CreateDefaultMailMergeTask()
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new MailMergeTask.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: MailMergeTask CreateDefaultMailMergeTask()
    return:
      type: SuperOffice.CRM.Services.MailMergeTask
      description: New MailMergeTask with default values
    content.vb: Function CreateDefaultMailMergeTask() As MailMergeTask
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity
  id: CreateDefaultSelectionEntity
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultSelectionEntity()
  nameWithType: ISelectionAgent.CreateDefaultSelectionEntity()
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new SelectionEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: SelectionEntity CreateDefaultSelectionEntity()
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: New SelectionEntity with default values
    content.vb: Function CreateDefaultSelectionEntity() As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity*
- uid: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity(SuperOffice.CRM.Services.SelectionEntity)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity(SuperOffice.CRM.Services.SelectionEntity)
  id: SaveSelectionEntity(SuperOffice.CRM.Services.SelectionEntity)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SaveSelectionEntity(SelectionEntity)
  nameWithType: ISelectionAgent.SaveSelectionEntity(SelectionEntity)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity(SuperOffice.CRM.Services.SelectionEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing SelectionEntity or creates a new SelectionEntity if the id parameter is empty
  example: []
  syntax:
    content: SelectionEntity SaveSelectionEntity(SelectionEntity selectionEntity)
    parameters:
    - id: selectionEntity
      type: SuperOffice.CRM.Services.SelectionEntity
      description: The SelectionEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: New or updated SelectionEntity
    content.vb: Function SaveSelectionEntity(selectionEntity As SelectionEntity) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity*
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity(System.Int32)
  id: DeleteSelectionEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteSelectionEntity(int)
  nameWithType: ISelectionAgent.DeleteSelectionEntity(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes the SelectionEntity
  example: []
  syntax:
    content: void DeleteSelectionEntity(int selectionEntityId)
    parameters:
    - id: selectionEntityId
      type: System.Int32
      description: The identity of the SelectionEntity
    content.vb: Sub DeleteSelectionEntity(selectionEntityId As Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity*
  nameWithType.vb: ISelectionAgent.DeleteSelectionEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity(Integer)
  name.vb: DeleteSelectionEntity(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity(System.Int32)
  id: GetSelectionEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionEntity(int)
  nameWithType: ISelectionAgent.GetSelectionEntity(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a SelectionEntity object.
  example: []
  syntax:
    content: SelectionEntity GetSelectionEntity(int selectionEntityId)
    parameters:
    - id: selectionEntityId
      type: System.Int32
      description: The identifier of the SelectionEntity object
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: SelectionEntity
    content.vb: Function GetSelectionEntity(selectionEntityId As Integer) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity*
  nameWithType.vb: ISelectionAgent.GetSelectionEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity(Integer)
  name.vb: GetSelectionEntity(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity(System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity(System.String)
  id: CreateSelectionEntity(System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateSelectionEntity(string)
  nameWithType: ISelectionAgent.CreateSelectionEntity(string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create (but do not save) a new selection entity, for the current user and the given target table; other fields populated as by CreateDefaultSelectionEntity()
  example: []
  syntax:
    content: SelectionEntity CreateSelectionEntity(string targetTableName)
    parameters:
    - id: targetTableName
      type: System.String
      description: The name of the target table, such as 'contact' or 'appointment'; any table for which Selection functionality is enabled
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: The new SelectionEntity, which has not yet been saved
    content.vb: Function CreateSelectionEntity(targetTableName As String) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity*
  nameWithType.vb: ISelectionAgent.CreateSelectionEntity(String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity(String)
  name.vb: CreateSelectionEntity(String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  id: CreateContactSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateContactSelectionFromSelection(int, string, SelectionType, bool)
  nameWithType: ISelectionAgent.CreateContactSelectionFromSelection(int, string, SelectionType, bool)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection(int, string, SuperOffice.Data.SelectionType, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a new selection based on selection members from an existing selection.
  example: []
  syntax:
    content: SelectionEntity CreateContactSelectionFromSelection(int selectionId, string name, SelectionType targetSelectionType, bool copyMembers)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: targetSelectionType
      type: SuperOffice.Data.SelectionType
      description: The type of ContactSelection to create. The type can be static or dynamic. If the original selection to copy from is static, the SelectionType can only be static. If the original selection is dynamic, both a static and dynamic selection can be created.
    - id: copyMembers
      type: System.Boolean
      description: If true, the members from the original selection will be added to the newly created selection.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateContactSelectionFromSelection(selectionId As Integer, name As String, targetSelectionType As SelectionType, copyMembers As Boolean) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection*
  nameWithType.vb: ISelectionAgent.CreateContactSelectionFromSelection(Integer, String, SelectionType, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection(Integer, String, SuperOffice.Data.SelectionType, Boolean)
  name.vb: CreateContactSelectionFromSelection(Integer, String, SelectionType, Boolean)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  id: CreateTemporaryContactSelectionFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromContactPersonIds(ContactPersonId[])
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds(ContactPersonId[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a temporary selection with members from a collection of ContactPerson id's.
  example: []
  syntax:
    content: SelectionEntity CreateTemporaryContactSelectionFromContactPersonIds(ContactPersonId[] contactPersonIds)
    parameters:
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to copy into the temporary contact selection as members.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporaryContactSelectionFromContactPersonIds(contactPersonIds As ContactPersonId()) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds*
  nameWithType.vb: ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds(ContactPersonId())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId())
  name.vb: CreateTemporaryContactSelectionFromContactPersonIds(ContactPersonId())
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers(System.Int32)
  id: CreateTemporaryContactSelectionFromProjectMembers(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromProjectMembers(int)
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a temporary selection with members from an existing project.
  example: []
  syntax:
    content: SelectionEntity CreateTemporaryContactSelectionFromProjectMembers(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The id of the project to add members from.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporaryContactSelectionFromProjectMembers(projectId As Integer) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers*
  nameWithType.vb: ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers(Integer)
  name.vb: CreateTemporaryContactSelectionFromProjectMembers(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers(System.Int32,System.Int32)
  id: CopyContactSelectionMembers(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CopyContactSelectionMembers(int, int)
  nameWithType: ISelectionAgent.CopyContactSelectionMembers(int, int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Copy contact selection members from selection into an existing selection.
  example: []
  syntax:
    content: void CopyContactSelectionMembers(int fromSelectionId, int toSelectionId)
    parameters:
    - id: fromSelectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: toSelectionId
      type: System.Int32
      description: The id of the selection to copy members to.
    content.vb: Sub CopyContactSelectionMembers(fromSelectionId As Integer, toSelectionId As Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers*
  nameWithType.vb: ISelectionAgent.CopyContactSelectionMembers(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers(Integer, Integer)
  name.vb: CopyContactSelectionMembers(Integer, Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics(System.Int32)
  id: GetRecipientStatistics(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatistics(int)
  nameWithType: ISelectionAgent.GetRecipientStatistics(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses.
  example: []
  syntax:
    content: RecipientStatistics GetRecipientStatistics(int selectionId)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to get the statistics for.
    return:
      type: SuperOffice.CRM.Services.RecipientStatistics
      description: Returns a RecipientStatistics object.
    content.vb: Function GetRecipientStatistics(selectionId As Integer) As RecipientStatistics
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics*
  nameWithType.vb: ISelectionAgent.GetRecipientStatistics(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics(Integer)
  name.vb: GetRecipientStatistics(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers(System.Int32)
  id: GetRecipientStatisticsFromProjectMembers(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsFromProjectMembers(int)
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromProjectMembers(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on members in a project.
  example: []
  syntax:
    content: RecipientStatistics GetRecipientStatisticsFromProjectMembers(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The id of the project to get the member statistics for.
    return:
      type: SuperOffice.CRM.Services.RecipientStatistics
      description: Returns a RecipientStatistics object.
    content.vb: Function GetRecipientStatisticsFromProjectMembers(projectId As Integer) As RecipientStatistics
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers*
  nameWithType.vb: ISelectionAgent.GetRecipientStatisticsFromProjectMembers(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers(Integer)
  name.vb: GetRecipientStatisticsFromProjectMembers(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  id: GetRecipientStatisticsFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetRecipientStatisticsFromContactPersonIds(ContactPersonId[])
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromContactPersonIds(ContactPersonId[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns a RecipientStatistics object with a count of addresses, emailaddresses and emailaddresses based on contact and persons in a collection of ContactPersonId.
  example: []
  syntax:
    content: RecipientStatistics GetRecipientStatisticsFromContactPersonIds(ContactPersonId[] contactPersonIds)
    parameters:
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to get the statistics for.
    return:
      type: SuperOffice.CRM.Services.RecipientStatistics
      description: Returns a RecipientStatistics object.
    content.vb: Function GetRecipientStatisticsFromContactPersonIds(contactPersonIds As ContactPersonId()) As RecipientStatistics
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds*
  nameWithType.vb: ISelectionAgent.GetRecipientStatisticsFromContactPersonIds(ContactPersonId())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds(SuperOffice.CRM.Services.ContactPersonId())
  name.vb: GetRecipientStatisticsFromContactPersonIds(ContactPersonId())
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  id: AddContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddContactSelectionMembers(int, ContactPersonId[])
  nameWithType: ISelectionAgent.AddContactSelectionMembers(int, ContactPersonId[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers(int, SuperOffice.CRM.Services.ContactPersonId[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Adds the collection of ContactPersonId as members to the static selection
  example: []
  syntax:
    content: void AddContactSelectionMembers(int selectionId, ContactPersonId[] contactPersonIds)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be added to.
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to add to the selection.
    content.vb: Sub AddContactSelectionMembers(selectionId As Integer, contactPersonIds As ContactPersonId())
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers*
  nameWithType.vb: ISelectionAgent.AddContactSelectionMembers(Integer, ContactPersonId())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers(Integer, SuperOffice.CRM.Services.ContactPersonId())
  name.vb: AddContactSelectionMembers(Integer, ContactPersonId())
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  id: RemoveContactSelectionMembers(System.Int32,SuperOffice.CRM.Services.ContactPersonId[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembers(int, ContactPersonId[])
  nameWithType: ISelectionAgent.RemoveContactSelectionMembers(int, ContactPersonId[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers(int, SuperOffice.CRM.Services.ContactPersonId[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes members from the selection as  specified in the collection of ContactPersonId.
  example: []
  syntax:
    content: void RemoveContactSelectionMembers(int selectionId, ContactPersonId[] contactPersonIds)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: contactPersonIds
      type: SuperOffice.CRM.Services.ContactPersonId[]
      description: A collection of ContactPersonId to remove from the static selection.
    content.vb: Sub RemoveContactSelectionMembers(selectionId As Integer, contactPersonIds As ContactPersonId())
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers*
  nameWithType.vb: ISelectionAgent.RemoveContactSelectionMembers(Integer, ContactPersonId())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers(Integer, SuperOffice.CRM.Services.ContactPersonId())
  name.vb: RemoveContactSelectionMembers(Integer, ContactPersonId())
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds(System.Int32,System.Int32[])
  id: RemoveContactSelectionMembersFromIds(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersFromIds(int, int[])
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromIds(int, int[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes members from the selection using a collection a selectionmember id's. Members can only be removed from single selection.
  example: []
  syntax:
    content: void RemoveContactSelectionMembersFromIds(int selectionId, int[] selectionMembersIds)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: selectionMembersIds
      type: System.Int32[]
      description: An array of selectionmember id's to remove from the selection.
    content.vb: Sub RemoveContactSelectionMembersFromIds(selectionId As Integer, selectionMembersIds As Integer())
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds*
  nameWithType.vb: ISelectionAgent.RemoveContactSelectionMembersFromIds(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds(Integer, Integer())
  name.vb: RemoveContactSelectionMembersFromIds(Integer, Integer())
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch(System.Int32,System.String)
  id: AddContactSelectionMembersFromSearch(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddContactSelectionMembersFromSearch(int, string)
  nameWithType: ISelectionAgent.AddContactSelectionMembersFromSearch(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Adds members to the selection from the search result.
  example: []
  syntax:
    content: int AddContactSelectionMembersFromSearch(int selectionId, string storageKey)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    return:
      type: System.Int32
      description: Number of members added
    content.vb: Function AddContactSelectionMembersFromSearch(selectionId As Integer, storageKey As String) As Integer
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch*
  nameWithType.vb: ISelectionAgent.AddContactSelectionMembersFromSearch(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch(Integer, String)
  name.vb: AddContactSelectionMembersFromSearch(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch(System.Int32,System.String)
  id: RemoveContactSelectionMembersFromSearch(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveContactSelectionMembersFromSearch(int, string)
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromSearch(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes members from the selection using the search result.
  example: []
  syntax:
    content: int RemoveContactSelectionMembersFromSearch(int selectionId, string storageKey)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to remove members.
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search.
    return:
      type: System.Int32
      description: Number of members removed
    content.vb: Function RemoveContactSelectionMembersFromSearch(selectionId As Integer, storageKey As String) As Integer
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch*
  nameWithType.vb: ISelectionAgent.RemoveContactSelectionMembersFromSearch(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch(Integer, String)
  name.vb: RemoveContactSelectionMembersFromSearch(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection
  id: CreateTemporaryContactSelection
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelection()
  nameWithType: ISelectionAgent.CreateTemporaryContactSelection()
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a temporary selection.
  example: []
  syntax:
    content: SelectionEntity CreateTemporaryContactSelection()
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporaryContactSelection() As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds(System.Int32,System.Int32[])
  id: CreateTemporaryContactSelectionFromSelectionMemberIds(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryContactSelectionFromSelectionMemberIds(int, int[])
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds(int, int[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a temporary selection with members from a collection of selectionmember id's.
  example: []
  syntax:
    content: SelectionEntity CreateTemporaryContactSelectionFromSelectionMemberIds(int selectionId, int[] selectionMemberIds)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId the selectionmembers is a part of.
    - id: selectionMemberIds
      type: System.Int32[]
      description: A collection of int ids to copy into the temporary contact selection as members.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporaryContactSelectionFromSelectionMemberIds(selectionId As Integer, selectionMemberIds As Integer()) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds*
  nameWithType.vb: ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds(Integer, Integer())
  name.vb: CreateTemporaryContactSelectionFromSelectionMemberIds(Integer, Integer())
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  id: AddRemoveContactSelectionMemberInterests(System.Int32,System.Int32[],System.Int32[],System.Int32[],System.Int32[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddRemoveContactSelectionMemberInterests(int, int[], int[], int[], int[])
  nameWithType: ISelectionAgent.AddRemoveContactSelectionMemberInterests(int, int[], int[], int[], int[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests(int, int[], int[], int[], int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Adds or removes interests on companies and persons in a selection.
  example: []
  syntax:
    content: void AddRemoveContactSelectionMemberInterests(int selectionId, int[] addCompanyInterests, int[] removeCompanyInterests, int[] addContactInterests, int[] removeContactInterests)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add or remove interests members from.
    - id: addCompanyInterests
      type: System.Int32[]
      description: Array of int containing the id's of the interests to add to the company.
    - id: removeCompanyInterests
      type: System.Int32[]
      description: Array of int containing the id's of the interests to remove from the company.
    - id: addContactInterests
      type: System.Int32[]
      description: Array of int containing the id's of the interests to add to the contact.
    - id: removeContactInterests
      type: System.Int32[]
      description: Array of int containing the id's of the interests to remove from the contact.
    content.vb: Sub AddRemoveContactSelectionMemberInterests(selectionId As Integer, addCompanyInterests As Integer(), removeCompanyInterests As Integer(), addContactInterests As Integer(), removeContactInterests As Integer())
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests*
  nameWithType.vb: ISelectionAgent.AddRemoveContactSelectionMemberInterests(Integer, Integer(), Integer(), Integer(), Integer())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests(Integer, Integer(), Integer(), Integer(), Integer())
  name.vb: AddRemoveContactSelectionMemberInterests(Integer, Integer(), Integer(), Integer(), Integer())
- uid: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues)
  id: EditContactSelectionMemberDetails(System.Int32,SuperOffice.CRM.Services.SelectionMemberEditValues)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: EditContactSelectionMemberDetails(int, SelectionMemberEditValues)
  nameWithType: ISelectionAgent.EditContactSelectionMemberDetails(int, SelectionMemberEditValues)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails(int, SuperOffice.CRM.Services.SelectionMemberEditValues)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Edit company and contact details in a selection based on contents in selectionMemberEditValues.
  example: []
  syntax:
    content: void EditContactSelectionMemberDetails(int selectionId, SelectionMemberEditValues selectionMemberEditValues)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to edit members from.
    - id: selectionMemberEditValues
      type: SuperOffice.CRM.Services.SelectionMemberEditValues
      description: An object of &lt;see cref="SelectionMemberEditValues"/&gt; describing what should be changed for companys and contacts.
    content.vb: Sub EditContactSelectionMemberDetails(selectionId As Integer, selectionMemberEditValues As SelectionMemberEditValues)
  overload: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails*
  nameWithType.vb: ISelectionAgent.EditContactSelectionMemberDetails(Integer, SelectionMemberEditValues)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails(Integer, SuperOffice.CRM.Services.SelectionMemberEditValues)
  name.vb: EditContactSelectionMemberDetails(Integer, SelectionMemberEditValues)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean)
  id: GenerateFollowUps(System.Int32,SuperOffice.CRM.Services.AppointmentEntity,System.Int32,System.Boolean,System.Boolean)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GenerateFollowUps(int, AppointmentEntity, int, bool, bool)
  nameWithType: ISelectionAgent.GenerateFollowUps(int, AppointmentEntity, int, bool, bool)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps(int, SuperOffice.CRM.Services.AppointmentEntity, int, bool, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Generate follow-ups for members in the selection.
  example: []
  syntax:
    content: void GenerateFollowUps(int selectionId, AppointmentEntity appointmentEntity, int associateId, bool saveOnContactOwner, bool uniqueContact)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the follow-ups for.
    - id: appointmentEntity
      type: SuperOffice.CRM.Services.AppointmentEntity
      description: The AppointmentEntity with information about the appointment.
    - id: associateId
      type: System.Int32
      description: The associate to save the appointments on. If saveOnContactOwner is true, this id will be ignored. Appointments wil be saved on current user if associateId = 0.
    - id: saveOnContactOwner
      type: System.Boolean
      description: If true, the appointments will be saved on contact owner (Our contact). This parameter will override associateId if true.
    - id: uniqueContact
      type: System.Boolean
      description: If true, only one appointment will be created for each contact.
    content.vb: Sub GenerateFollowUps(selectionId As Integer, appointmentEntity As AppointmentEntity, associateId As Integer, saveOnContactOwner As Boolean, uniqueContact As Boolean)
  overload: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps*
  nameWithType.vb: ISelectionAgent.GenerateFollowUps(Integer, AppointmentEntity, Integer, Boolean, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps(Integer, SuperOffice.CRM.Services.AppointmentEntity, Integer, Boolean, Boolean)
  name.vb: GenerateFollowUps(Integer, AppointmentEntity, Integer, Boolean, Boolean)
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers(System.Int32,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers(System.Int32,System.String,System.Boolean)
  id: ExportSelectionMembers(System.Int32,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: ExportSelectionMembers(int, string, bool)
  nameWithType: ISelectionAgent.ExportSelectionMembers(int, string, bool)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers(int, string, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.
  example: []
  syntax:
    content: byte[] ExportSelectionMembers(int selectionId, string templateName, bool useContacts)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the exported file.
    - id: templateName
      type: System.String
      description: The templateName parameter is the relative path of a .sxf file template. The .sxf files can be found in \template or in the user folder of the so archive.
    - id: useContacts
      type: System.Boolean
      description: If the selection contains other members than contacts, setting this to true will export the contact archive of the selection.
    return:
      type: System.Byte[]
      description: Returns a unicode byte array with the file to export to the user.
    content.vb: Function ExportSelectionMembers(selectionId As Integer, templateName As String, useContacts As Boolean) As Byte()
  overload: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers*
  nameWithType.vb: ISelectionAgent.ExportSelectionMembers(Integer, String, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers(Integer, String, Boolean)
  name.vb: ExportSelectionMembers(Integer, String, Boolean)
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy(System.Int32,System.String,System.Boolean,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy(System.Int32,System.String,System.Boolean,System.String)
  id: ExportSelectionMembersWithOrderBy(System.Int32,System.String,System.Boolean,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: ExportSelectionMembersWithOrderBy(int, string, bool, string)
  nameWithType: ISelectionAgent.ExportSelectionMembersWithOrderBy(int, string, bool, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy(int, string, bool, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: ExportSelectionMembers will generate a string that is the result of substituting the template variables with values from selectionmembers.
  example: []
  syntax:
    content: byte[] ExportSelectionMembersWithOrderBy(int selectionId, string templateName, bool useContacts, string orderBy)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to generate the exported file.
    - id: templateName
      type: System.String
      description: The templateName parameter is the relative path of a .sxf file template. The .sxf files can be found in \template or in the user folder of the so archive.
    - id: useContacts
      type: System.Boolean
      description: If the selection contains other members than contacts, setting this to true will export the contact archive of the selection.
    - id: orderBy
      type: System.String
      description: OrderBy. &lt;Column,OrderBySortType&gt;
    return:
      type: System.Byte[]
      description: Returns a unicode byte array with the file to export to the user.
    content.vb: Function ExportSelectionMembersWithOrderBy(selectionId As Integer, templateName As String, useContacts As Boolean, orderBy As String) As Byte()
  overload: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy*
  nameWithType.vb: ISelectionAgent.ExportSelectionMembersWithOrderBy(Integer, String, Boolean, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy(Integer, String, Boolean, String)
  name.vb: ExportSelectionMembersWithOrderBy(Integer, String, Boolean, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge(SuperOffice.CRM.Services.MailMergeSettings)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge(SuperOffice.CRM.Services.MailMergeSettings)
  id: StartMailMerge(SuperOffice.CRM.Services.MailMergeSettings)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: StartMailMerge(MailMergeSettings)
  nameWithType: ISelectionAgent.StartMailMerge(MailMergeSettings)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge(SuperOffice.CRM.Services.MailMergeSettings)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Start a mailmerge operation with specified settings.
  example: []
  syntax:
    content: void StartMailMerge(MailMergeSettings settings)
    parameters:
    - id: settings
      type: SuperOffice.CRM.Services.MailMergeSettings
      description: All settings needed to perform the mailmerge operation.
    content.vb: Sub StartMailMerge(settings As MailMergeSettings)
  overload: SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge*
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus(SuperOffice.CRM.Services.DuplicateRule[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus(SuperOffice.CRM.Services.DuplicateRule[])
  id: SetDuplicateRulesStatus(SuperOffice.CRM.Services.DuplicateRule[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDuplicateRulesStatus(DuplicateRule[])
  nameWithType: ISelectionAgent.SetDuplicateRulesStatus(DuplicateRule[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus(SuperOffice.CRM.Services.DuplicateRule[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Set which duplicate rules should be active or not
  example: []
  syntax:
    content: void SetDuplicateRulesStatus(DuplicateRule[] rules)
    parameters:
    - id: rules
      type: SuperOffice.CRM.Services.DuplicateRule[]
      description: Duplicate rules to update active status for
    content.vb: Sub SetDuplicateRulesStatus(rules As DuplicateRule())
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus*
  nameWithType.vb: ISelectionAgent.SetDuplicateRulesStatus(DuplicateRule())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus(SuperOffice.CRM.Services.DuplicateRule())
  name.vb: SetDuplicateRulesStatus(DuplicateRule())
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates(System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates(System.String)
  id: GetDuplicates(System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDuplicates(string)
  nameWithType: ISelectionAgent.GetDuplicates(string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get duplicates(exact or similar in the database) based on the name
  example: []
  syntax:
    content: DuplicateEntry[] GetDuplicates(string name)
    parameters:
    - id: name
      type: System.String
      description: Name used for lookup
    return:
      type: SuperOffice.CRM.Services.DuplicateEntry[]
      description: Any records matching the specified name
    content.vb: Function GetDuplicates(name As String) As DuplicateEntry()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates*
  nameWithType.vb: ISelectionAgent.GetDuplicates(String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates(String)
  name.vb: GetDuplicates(String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules
  id: GetDuplicateRules
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDuplicateRules()
  nameWithType: ISelectionAgent.GetDuplicateRules()
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Retrieve all available duplicate rules for selection
  example: []
  syntax:
    content: DuplicateRule[] GetDuplicateRules()
    return:
      type: SuperOffice.CRM.Services.DuplicateRule[]
      description: All available duplicate rules
    content.vb: Function GetDuplicateRules() As DuplicateRule()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules*
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry(SuperOffice.CRM.Services.DuplicateEntry)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry(SuperOffice.CRM.Services.DuplicateEntry)
  id: CreateNewEntry(SuperOffice.CRM.Services.DuplicateEntry)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateNewEntry(DuplicateEntry)
  nameWithType: ISelectionAgent.CreateNewEntry(DuplicateEntry)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry(SuperOffice.CRM.Services.DuplicateEntry)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a new selection based on external duplicate
  example: []
  syntax:
    content: int CreateNewEntry(DuplicateEntry duplicate)
    parameters:
    - id: duplicate
      type: SuperOffice.CRM.Services.DuplicateEntry
      description: The duplicate to create a new entry based upon
    return:
      type: System.Int32
      description: The database identity of the newly created entry
    content.vb: Function CreateNewEntry(duplicate As DuplicateEntry) As Integer
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry*
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts(System.Int32)
  id: DeleteContacts(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteContacts(int)
  nameWithType: ISelectionAgent.DeleteContacts(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all contacts from a selection. If a contact does not have delete rights, it will be skipped.
  example: []
  syntax:
    content: void DeleteContacts(int selectionId)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    content.vb: Sub DeleteContacts(selectionId As Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts*
  nameWithType.vb: ISelectionAgent.DeleteContacts(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts(Integer)
  name.vb: DeleteContacts(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers(System.Int32,System.Int32[])
  id: AddSelectionMembers(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddSelectionMembers(int, int[])
  nameWithType: ISelectionAgent.AddSelectionMembers(int, int[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Add selection members to a static selection of type others than contacts.
  example: []
  syntax:
    content: int AddSelectionMembers(int selectionId, int[] ids)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selection id to add the members to.
    - id: ids
      type: System.Int32[]
      description: Collection of ids to add to the selection.
    return:
      type: System.Int32
      description: Returns number of members added to the selection.
    content.vb: Function AddSelectionMembers(selectionId As Integer, ids As Integer()) As Integer
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers*
  nameWithType.vb: ISelectionAgent.AddSelectionMembers(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers(Integer, Integer())
  name.vb: AddSelectionMembers(Integer, Integer())
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers(System.Int32,System.Int32[])
  id: RemoveSelectionMembers(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembers(int, int[])
  nameWithType: ISelectionAgent.RemoveSelectionMembers(int, int[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes members from the selection as  specified in the collection of entity ids. The ids are selection member ids (selection member primary key)
  example: []
  syntax:
    content: void RemoveSelectionMembers(int selectionId, int[] selectionMemberIds)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: selectionMemberIds
      type: System.Int32[]
      description: Selection member primary keys
    content.vb: Sub RemoveSelectionMembers(selectionId As Integer, selectionMemberIds As Integer())
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers*
  nameWithType.vb: ISelectionAgent.RemoveSelectionMembers(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers(Integer, Integer())
  name.vb: RemoveSelectionMembers(Integer, Integer())
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById(System.Int32,System.Int32[])
  id: RemoveSelectionMembersById(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersById(int, int[])
  nameWithType: ISelectionAgent.RemoveSelectionMembersById(int, int[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes members from the selection as specified in the collection of entity ids. The ids can be a collection of sale ids, or other supported types.
  example: []
  syntax:
    content: void RemoveSelectionMembersById(int selectionId, int[] ids)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection where to members will be removed.
    - id: ids
      type: System.Int32[]
      description: A collection of sale/project/contact ids to remove from the selection. The ids can be a collection of sale ids, or other supported types.
    content.vb: Sub RemoveSelectionMembersById(selectionId As Integer, ids As Integer())
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById*
  nameWithType.vb: ISelectionAgent.RemoveSelectionMembersById(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById(Integer, Integer())
  name.vb: RemoveSelectionMembersById(Integer, Integer())
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch(System.Int32,System.String)
  id: AddSelectionMembersFromSearch(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: AddSelectionMembersFromSearch(int, string)
  nameWithType: ISelectionAgent.AddSelectionMembersFromSearch(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Adds members from the selection using the search result.
  example: []
  syntax:
    content: int AddSelectionMembersFromSearch(int selectionId, string storageKey)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search
    return:
      type: System.Int32
      description: Number of members added.
    content.vb: Function AddSelectionMembersFromSearch(selectionId As Integer, storageKey As String) As Integer
  overload: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch*
  nameWithType.vb: ISelectionAgent.AddSelectionMembersFromSearch(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch(Integer, String)
  name.vb: AddSelectionMembersFromSearch(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch(System.Int32,System.String)
  id: RemoveSelectionMembersFromSearch(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: RemoveSelectionMembersFromSearch(int, string)
  nameWithType: ISelectionAgent.RemoveSelectionMembersFromSearch(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Removes members from the selection using the search result.
  example: []
  syntax:
    content: int RemoveSelectionMembersFromSearch(int selectionId, string storageKey)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to remove members.
    - id: storageKey
      type: System.String
      description: Storage key to be interpreted by the restriction storage provider, when it fetches criteria for the search.
    return:
      type: System.Int32
      description: Number of members removed
    content.vb: Function RemoveSelectionMembersFromSearch(selectionId As Integer, storageKey As String) As Integer
  overload: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch*
  nameWithType.vb: ISelectionAgent.RemoveSelectionMembersFromSearch(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch(Integer, String)
  name.vb: RemoveSelectionMembersFromSearch(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers(System.Int32,System.Int32)
  id: CopySelectionMembers(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CopySelectionMembers(int, int)
  nameWithType: ISelectionAgent.CopySelectionMembers(int, int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Copy selection members from selection into an existing selection.
  example: []
  syntax:
    content: void CopySelectionMembers(int fromSelectionId, int toSelectionId)
    parameters:
    - id: fromSelectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: toSelectionId
      type: System.Int32
      description: The id of the selection to copy members to.
    content.vb: Sub CopySelectionMembers(fromSelectionId As Integer, toSelectionId As Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers*
  nameWithType.vb: ISelectionAgent.CopySelectionMembers(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers(Integer, Integer)
  name.vb: CopySelectionMembers(Integer, Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds(System.Int32[],System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds(System.Int32[],System.Int32)
  id: CreateTemporarySelectionFromIds(System.Int32[],System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateTemporarySelectionFromIds(int[], int)
  nameWithType: ISelectionAgent.CreateTemporarySelectionFromIds(int[], int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds(int[], int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a temporary selection with members from a collection of entity id's.
  example: []
  syntax:
    content: SelectionEntity CreateTemporarySelectionFromIds(int[] ids, int targetTableNumber)
    parameters:
    - id: ids
      type: System.Int32[]
      description: A collection of Ids to copy into the temporary selection as members. The ids are primary keys of entities defined by the targetTableNumber parameter.
    - id: targetTableNumber
      type: System.Int32
      description: The type of selection to create.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateTemporarySelectionFromIds(ids As Integer(), targetTableNumber As Integer) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds*
  nameWithType.vb: ISelectionAgent.CreateTemporarySelectionFromIds(Integer(), Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds(Integer(), Integer)
  name.vb: CreateTemporarySelectionFromIds(Integer(), Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  id: CreateSelectionFromSelection(System.Int32,System.String,SuperOffice.Data.SelectionType,System.Boolean)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateSelectionFromSelection(int, string, SelectionType, bool)
  nameWithType: ISelectionAgent.CreateSelectionFromSelection(int, string, SelectionType, bool)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection(int, string, SuperOffice.Data.SelectionType, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a new selection based on selection members from an existing selection.
  example: []
  syntax:
    content: SelectionEntity CreateSelectionFromSelection(int selectionId, string name, SelectionType targetSelectionType, bool copyMembers)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    - id: targetSelectionType
      type: SuperOffice.Data.SelectionType
      description: The type of Selection to create. The type can be static or dynamic. If the original selection to copy from is static, the SelectionType can only be static. If the original selection is dynamic, both a static and dynamic selection can be created.
    - id: copyMembers
      type: System.Boolean
      description: If true, the members from the original selection will be added to the newly created selection.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateSelectionFromSelection(selectionId As Integer, name As String, targetSelectionType As SelectionType, copyMembers As Boolean) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection*
  nameWithType.vb: ISelectionAgent.CreateSelectionFromSelection(Integer, String, SelectionType, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection(Integer, String, SuperOffice.Data.SelectionType, Boolean)
  name.vb: CreateSelectionFromSelection(Integer, String, SelectionType, Boolean)
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection(System.Int32,System.String)
  id: CreateContactSelectionFromShadowSelection(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: CreateContactSelectionFromShadowSelection(int, string)
  nameWithType: ISelectionAgent.CreateContactSelectionFromShadowSelection(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a new contact selection based on contact selection members from an existing shadow sale, appointment, project or document selection. The new selection will always be static even if the original selection is dynamic.
  example: []
  syntax:
    content: SelectionEntity CreateContactSelectionFromShadowSelection(int selectionId, string name)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to copy members from.
    - id: name
      type: System.String
      description: The name of the new selection.
    return:
      type: SuperOffice.CRM.Services.SelectionEntity
      description: Returns the newly created SelectionEntity.
    content.vb: Function CreateContactSelectionFromShadowSelection(selectionId As Integer, name As String) As SelectionEntity
  overload: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection*
  nameWithType.vb: ISelectionAgent.CreateContactSelectionFromShadowSelection(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection(Integer, String)
  name.vb: CreateContactSelectionFromShadowSelection(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities(System.Int32)
  id: DeleteEntities(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeleteEntities(int)
  nameWithType: ISelectionAgent.DeleteEntities(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all entities from a selection. If an entity does not have delete rights, it will be skipped.
  example: []
  syntax:
    content: void DeleteEntities(int selectionId)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    content.vb: Sub DeleteEntities(selectionId As Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities*
  nameWithType.vb: ISelectionAgent.DeleteEntities(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities(Integer)
  name.vb: DeleteEntities(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections(System.Int32)
  id: GetParentCombinedSelections(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetParentCombinedSelections(int)
  nameWithType: ISelectionAgent.GetParentCombinedSelections(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a list of all selection ids where the given selection is used to create a combined selection.
  example: []
  syntax:
    content: int[] GetParentCombinedSelections(int selectionId)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId to query for.
    return:
      type: System.Int32[]
      description: Array of selectionIds.
    content.vb: Function GetParentCombinedSelections(selectionId As Integer) As Integer()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections*
  nameWithType.vb: ISelectionAgent.GetParentCombinedSelections(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections(Integer)
  name.vb: GetParentCombinedSelections(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows(System.Int32,System.String)
  id: GetSelectionMembersArchiveRows(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionMembersArchiveRows(int, string)
  nameWithType: ISelectionAgent.GetSelectionMembersArchiveRows(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the list of members in this selection. The type of members depends on the target table of the selection.
  example: []
  syntax:
    content: ArchiveListItem[] GetSelectionMembersArchiveRows(int selectionId, string select)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId we want selection members for.
    - id: select
      type: System.String
      description: (optional) Comma separated Column names to include in result. List of columns varies depending on the selection's TargetTable. e.g. 'name', 'firstname', 'startTime'
    return:
      type: SuperOffice.CRM.Services.ArchiveListItem[]
      description: Array of archive rows, where each item represents one row of data (row level data + the requested columns). NULL if selection does not exist.
    content.vb: Function GetSelectionMembersArchiveRows(selectionId As Integer, [select] As String) As ArchiveListItem()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows*
  nameWithType.vb: ISelectionAgent.GetSelectionMembersArchiveRows(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows(Integer, String)
  name.vb: GetSelectionMembersArchiveRows(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows(System.Int32,System.String)
  id: GetSelectionShadowMembersArchiveRows(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionShadowMembersArchiveRows(int, string)
  nameWithType: ISelectionAgent.GetSelectionShadowMembersArchiveRows(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the list of members in this selection's shadow (i.e. the list of contacts + persons referenced in the main selection).
  example: []
  syntax:
    content: ArchiveListItem[] GetSelectionShadowMembersArchiveRows(int selectionId, string select)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The selectionId we want selection members for.
    - id: select
      type: System.String
      description: (optional) Comma separated Column names to include in result. List of columns varies depending on the selection's TargetTable. e.g. 'name', 'firstname,name', 'startTime,firstname,name'
    return:
      type: SuperOffice.CRM.Services.ArchiveListItem[]
      description: Array of archive rows, where each item represents one row of data (row level data + the requested columns). NULL if selection does not exist.
    content.vb: Function GetSelectionShadowMembersArchiveRows(selectionId As Integer, [select] As String) As ArchiveListItem()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows*
  nameWithType.vb: ISelectionAgent.GetSelectionShadowMembersArchiveRows(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows(Integer, String)
  name.vb: GetSelectionShadowMembersArchiveRows(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria(System.Int32)
  id: GetDynamicSelectionCriteria(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDynamicSelectionCriteria(int)
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteria(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the criteria for this dynamic selection.
  example: []
  syntax:
    content: ArchiveRestrictionInfo[] GetDynamicSelectionCriteria(int selectionId)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result. NULL if selection does not exist, or if this is not a dynamic selection.
    content.vb: Function GetDynamicSelectionCriteria(selectionId As Integer) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria*
  nameWithType.vb: ISelectionAgent.GetDynamicSelectionCriteria(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria(Integer)
  name.vb: GetDynamicSelectionCriteria(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  id: SetDynamicSelectionCriteria(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteria(int, ArchiveRestrictionInfo[])
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria(int, ArchiveRestrictionInfo[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria(int, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Update the criteria for this dynamic selection. Replaces existing criteria with the new values.
  example:
  - >-
    <pre><code class="lang-csharp">"name = 'SuperOffice AS'"

    "name startsWith 'SuperOffice'"

    "startsWith(name, 'SuperOffice')"

    "updatedDate after '2000.12.30'"

    "category = 10"

    "category in (10, 12, 53)"

    "category in (2,3,4) and name startswith 'super'"

    "category in (2,3,4) or name startswith 'super'"

    "(category = 2 or business = 3) and name contains 'super'"


    var agent = new FindAgent();


    var restrictions = new ArchiveRestrictionInfo[1];

    restrictions[0] = new ArchiveRestrictionInfo("updatedBy", "equals", "2");

    var res = _agent.FindFromRestrictions(restrictions, "FindContact", 100, 0);

    foreach (var row in res1.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue == 2

    var restrictions = new ArchiveRestrictionInfo[2];

    restrictions[0] = new ArchiveRestrictionInfo("updatedBy", "equals", "2");

    restrictions[1] = new ArchiveRestrictionInfo("updatedDate", "after", "2000.1.2");

    var res = _agent.FindFromRestrictions(restrictions, "FindContact", 100, 0);

    foreach (var row in res2.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue != 6 &amp;&amp; 
        row.ColumnData["updatedDate"].GetDateTimeValue() &gt; new DateTime(2000, 1, 2);</code></pre>
  syntax:
    content: ArchiveRestrictionInfo[] SetDynamicSelectionCriteria(int selectionId, ArchiveRestrictionInfo[] criteria)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result.
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteria(selectionId As Integer, criteria As ArchiveRestrictionInfo()) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria*
  nameWithType.vb: ISelectionAgent.SetDynamicSelectionCriteria(Integer, ArchiveRestrictionInfo())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria(Integer, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo())
  name.vb: SetDynamicSelectionCriteria(Integer, ArchiveRestrictionInfo())
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2(System.Int32,System.String)
  id: SetDynamicSelectionCriteria2(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteria2(int, string)
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria2(int, string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "Update the criteria for this dynamic selection using string. Criteria are parsed from the OData filter form: ''name startswith 'foo' and category in (1,2,3)''"
  example:
  - >-
    <pre><code class="lang-csharp">"name = 'SuperOffice AS'"

    "name startsWith 'SuperOffice'"

    "startsWith(name, 'SuperOffice')"

    "updatedDate after '2000.12.30'"

    "category = 10"

    "category in (10, 12, 53)"

    "category in (2,3,4) and name startswith 'super'"

    "category in (2,3,4) or name startswith 'super'"

    "(category = 2 or business = 3) and name contains 'super'"


    var agent = new FindAgent();


    var res1 = agent.FindFromRestrictions2("updatedBy = 2", "FindContact", 100, 0);

    foreach (var row in res1.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue == 2

    var res2 = agent.FindFromRestrictions2("updatedBy unequals 6 and updatedDate after '2000.1.2'", "FindContact", 100, 0);

    foreach (var row in res2.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue != 6 &amp;&amp; 
        row.ColumnData["updatedDate"].GetDateTimeValue() &gt; new DateTime(2000, 1, 2);

    var res3 = agent.FindFromRestrictions2("category in (2,3)", "FindContact", 100, 0);

    foreach (var row in res3.ArchiveRows)
        (int)row.ColumnData["category"].RawValue == 2 || (int)row.ColumnData["category"].RawValue == 3;

    var res4 = agent.FindFromRestrictions2("sale/date after '2000.1.2'", "FindContact", 100, 0);

    foreach (var row in res4.ArchiveRows)
        (row.ColumnData["sale/date"].GetDateTimeValue().Year &gt;= 2000 

    var res5 = _agent.FindFromRestrictionsColumns2("(category =2 or business = 3) and name contains 'e'", 
             _provider, "category,business,name", 100, 0);
    foreach (var row in res5.ArchiveRows)
        ((int)x.ColumnData["category"].RawValue == 2 || 
         (int)x.ColumnData["business"].RawValue == 3) &amp;&amp; 
         (x.ColumnData["name"].RawValue as string).Contains("e") );</code></pre>
  syntax:
    content: ArchiveRestrictionInfo[] SetDynamicSelectionCriteria2(int selectionId, string filter)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: filter
      type: System.String
      description: "Criteria defining the selection result in OData filter form: `category in (1,2,3) and name = 'foo'`"
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteria2(selectionId As Integer, filter As String) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2*
  nameWithType.vb: ISelectionAgent.SetDynamicSelectionCriteria2(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2(Integer, String)
  name.vb: SetDynamicSelectionCriteria2(Integer, String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  id: SetDynamicSelectionCriteria3(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[],System.String)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteria3(int, ArchiveRestrictionInfo[], string)
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria3(int, ArchiveRestrictionInfo[], string)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3(int, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[], string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: "Update the criteria for this dynamic selection. Use criteria as either restriction objects or OData string format. Criteria are parsed from the OData filter form: ''name startswith 'foo' and category in (1,2,3)''"
  example:
  - >-
    <pre><code class="lang-csharp">"name = 'SuperOffice AS'"

    "name startsWith 'SuperOffice'"

    "startsWith(name, 'SuperOffice')"

    "updatedDate after '2000.12.30'"

    "category = 10"

    "category in (10, 12, 53)"

    "category in (2,3,4) and name startswith 'super'"

    "category in (2,3,4) or name startswith 'super'"

    "(category = 2 or business = 3) and name contains 'super'"


    var agent = new FindAgent();


    var restrictions = new ArchiveRestrictionInfo[1];

    restrictions[0] = new ArchiveRestrictionInfo("updatedBy", "equals", "2");

    var res = _agent.FindFromRestrictions(restrictions, "FindContact", 100, 0);

    foreach (var row in res1.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue == 2

    var restrictions = new ArchiveRestrictionInfo[2];

    restrictions[0] = new ArchiveRestrictionInfo("updatedBy", "equals", "2");

    restrictions[1] = new ArchiveRestrictionInfo("updatedDate", "after", "2000.1.2");

    var res = _agent.FindFromRestrictions(restrictions, "FindContact", 100, 0);

    foreach (var row in res2.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue != 6 &amp;&amp; 
        row.ColumnData["updatedDate"].GetDateTimeValue() &gt; new DateTime(2000, 1, 2);


    "name = 'SuperOffice AS'"

    "name startsWith 'SuperOffice'"

    "startsWith(name, 'SuperOffice')"

    "updatedDate after '2000.12.30'"

    "category = 10"

    "category in (10, 12, 53)"

    "category in (2,3,4) and name startswith 'super'"

    "category in (2,3,4) or name startswith 'super'"

    "(category = 2 or business = 3) and name contains 'super'"


    var agent = new FindAgent();


    var res1 = agent.FindFromRestrictions2("updatedBy = 2", "FindContact", 100, 0);

    foreach (var row in res1.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue == 2

    var res2 = agent.FindFromRestrictions2("updatedBy unequals 6 and updatedDate after '2000.1.2'", "FindContact", 100, 0);

    foreach (var row in res2.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue != 6 &amp;&amp; 
        row.ColumnData["updatedDate"].GetDateTimeValue() &gt; new DateTime(2000, 1, 2);

    var res3 = agent.FindFromRestrictions2("category in (2,3)", "FindContact", 100, 0);

    foreach (var row in res3.ArchiveRows)
        (int)row.ColumnData["category"].RawValue == 2 || (int)row.ColumnData["category"].RawValue == 3;

    var res4 = agent.FindFromRestrictions2("sale/date after '2000.1.2'", "FindContact", 100, 0);

    foreach (var row in res4.ArchiveRows)
        (row.ColumnData["sale/date"].GetDateTimeValue().Year &gt;= 2000 

    var res5 = _agent.FindFromRestrictionsColumns2("(category =2 or business = 3) and name contains 'e'", 
             _provider, "category,business,name", 100, 0);
    foreach (var row in res5.ArchiveRows)
        ((int)x.ColumnData["category"].RawValue == 2 || 
         (int)x.ColumnData["business"].RawValue == 3) &amp;&amp; 
         (x.ColumnData["name"].RawValue as string).Contains("e") );</code></pre>
  syntax:
    content: ArchiveRestrictionInfo[] SetDynamicSelectionCriteria3(int selectionId, ArchiveRestrictionInfo[] criteria, string filter)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result. Pass NULL if using the filter string instead.
    - id: filter
      type: System.String
      description: "Criteria defining the selection result in OData filter form: `category in (1,2,3) and name = 'foo'`. Pass NULL or empty string '' if using the criteria objects."
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
      description: Criteria defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteria3(selectionId As Integer, criteria As ArchiveRestrictionInfo(), filter As String) As ArchiveRestrictionInfo()
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3*
  nameWithType.vb: ISelectionAgent.SetDynamicSelectionCriteria3(Integer, ArchiveRestrictionInfo(), String)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3(Integer, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo(), String)
  name.vb: SetDynamicSelectionCriteria3(Integer, ArchiveRestrictionInfo(), String)
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeletePersons(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.DeletePersons(System.Int32)
  id: DeletePersons(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: DeletePersons(int)
  nameWithType: ISelectionAgent.DeletePersons(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeletePersons(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes all persons from a selection. If a person does not have delete rights, it will be skipped.
  example: []
  syntax:
    content: void DeletePersons(int selectionId)
    parameters:
    - id: selectionId
      type: System.Int32
      description: Id of the selection the delete operation will be performed.
    content.vb: Sub DeletePersons(selectionId As Integer)
  overload: SuperOffice.CRM.Services.ISelectionAgent.DeletePersons*
  nameWithType.vb: ISelectionAgent.DeletePersons(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.DeletePersons(Integer)
  name.vb: DeletePersons(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups(System.Int32)
  id: GetDynamicSelectionCriteriaGroups(System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetDynamicSelectionCriteriaGroups(int)
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteriaGroups(int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the criteria for this dynamic selection. This call supports multiple criteria groups.
  example: []
  syntax:
    content: ArchiveRestrictionGroup[] GetDynamicSelectionCriteriaGroups(int selectionId)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
      description: Criteria groups defining the selection result. NULL if selection does not exist, or if this is not a dynamic selection.
    content.vb: Function GetDynamicSelectionCriteriaGroups(selectionId As Integer) As ArchiveRestrictionGroup()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups*
  nameWithType.vb: ISelectionAgent.GetDynamicSelectionCriteriaGroups(Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups(Integer)
  name.vb: GetDynamicSelectionCriteriaGroups(Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[])
  id: SetDynamicSelectionCriteriaGroups(System.Int32,SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: SetDynamicSelectionCriteriaGroups(int, ArchiveRestrictionGroup[])
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteriaGroups(int, ArchiveRestrictionGroup[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups(int, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Update the criteria for this dynamic selection. Replaces existing criteria with the new values. This call supports multiple criteria groups.
  example:
  - >-
    <pre><code class="lang-csharp">"name = 'SuperOffice AS'"

    "name startsWith 'SuperOffice'"

    "startsWith(name, 'SuperOffice')"

    "updatedDate after '2000.12.30'"

    "category = 10"

    "category in (10, 12, 53)"

    "category in (2,3,4) and name startswith 'super'"

    "category in (2,3,4) or name startswith 'super'"

    "(category = 2 or business = 3) and name contains 'super'"


    var agent = new FindAgent();


    var restrictions = new ArchiveRestrictionInfo[1];

    restrictions[0] = new ArchiveRestrictionInfo("updatedBy", "equals", "2");

    var res = _agent.FindFromRestrictions(restrictions, "FindContact", 100, 0);

    foreach (var row in res1.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue == 2

    var restrictions = new ArchiveRestrictionInfo[2];

    restrictions[0] = new ArchiveRestrictionInfo("updatedBy", "equals", "2");

    restrictions[1] = new ArchiveRestrictionInfo("updatedDate", "after", "2000.1.2");

    var res = _agent.FindFromRestrictions(restrictions, "FindContact", 100, 0);

    foreach (var row in res2.ArchiveRows)
        (int)row.ColumnData["updatedBy"].RawValue != 6 &amp;&amp; 
        row.ColumnData["updatedDate"].GetDateTimeValue() &gt; new DateTime(2000, 1, 2);</code></pre>
  syntax:
    content: ArchiveRestrictionGroup[] SetDynamicSelectionCriteriaGroups(int selectionId, ArchiveRestrictionGroup[] criteria)
    parameters:
    - id: selectionId
      type: System.Int32
      description: The id of the selection to add members
    - id: criteria
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
      description: Criteria groups defining the selection result. Empty array is legal, simply means no criteria have been set
    return:
      type: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
      description: Criteria groups defining the selection result. NULL if this is not a dynamic selection.
    content.vb: Function SetDynamicSelectionCriteriaGroups(selectionId As Integer, criteria As ArchiveRestrictionGroup()) As ArchiveRestrictionGroup()
  overload: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups*
  nameWithType.vb: ISelectionAgent.SetDynamicSelectionCriteriaGroups(Integer, ArchiveRestrictionGroup())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups(Integer, SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup())
  name.vb: SetDynamicSelectionCriteriaGroups(Integer, ArchiveRestrictionGroup())
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind(System.String,System.Int32)
  id: GetSelectionForFind(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionForFind(string, int)
  nameWithType: ISelectionAgent.GetSelectionForFind(string, int)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind(string, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Obtain a selection for the given entity, for the current user, of type WorkingSetForFind. Optionally populate criteria from the TypicalSearches system
  example: []
  syntax:
    content: SelectionForFind GetSelectionForFind(string entityName, int typicalSearchId)
    parameters:
    - id: entityName
      type: System.String
      description: The name of the entity to make a selection for; examples 'sale', 'project', 'y_equipment'
    - id: typicalSearchId
      type: System.Int32
      description: If 0, keep existing criteria; if -1, reset to entity default; &gt; 0 get criteria from given TypicalSearch
    return:
      type: SuperOffice.CRM.Services.SelectionForFind
      description: Target selection id and provider name
    content.vb: Function GetSelectionForFind(entityName As String, typicalSearchId As Integer) As SelectionForFind
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind*
  nameWithType.vb: ISelectionAgent.GetSelectionForFind(String, Integer)
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind(String, Integer)
  name.vb: GetSelectionForFind(String, Integer)
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries(System.Int32[])
  id: GetSelectionSummaries(System.Int32[])
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: GetSelectionSummaries(int[])
  nameWithType: ISelectionAgent.GetSelectionSummaries(int[])
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get an array of summaryitem for the given selections
  example: []
  syntax:
    content: SelectionSummaryItem[] GetSelectionSummaries(int[] selectionIds)
    parameters:
    - id: selectionIds
      type: System.Int32[]
      description: The selections to fetch summaries for
    return:
      type: SuperOffice.CRM.Services.SelectionSummaryItem[]
      description: Summary items for the given id's, in no particular order
    content.vb: Function GetSelectionSummaries(selectionIds As Integer()) As SelectionSummaryItem()
  overload: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries*
  nameWithType.vb: ISelectionAgent.GetSelectionSummaries(Integer())
  fullName.vb: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries(Integer())
  name.vb: GetSelectionSummaries(Integer())
- uid: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch(SuperOffice.CRM.Services.TypicalSearches)
  commentId: M:SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch(SuperOffice.CRM.Services.TypicalSearches)
  id: UpdateTypicalSearch(SuperOffice.CRM.Services.TypicalSearches)
  parent: SuperOffice.CRM.Services.ISelectionAgent
  langs:
  - csharp
  - vb
  name: UpdateTypicalSearch(TypicalSearches)
  nameWithType: ISelectionAgent.UpdateTypicalSearch(TypicalSearches)
  fullName: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch(SuperOffice.CRM.Services.TypicalSearches)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Update (import) TypicalSearch information in the database
  example: []
  syntax:
    content: string UpdateTypicalSearch(TypicalSearches searches)
    parameters:
    - id: searches
      type: SuperOffice.CRM.Services.TypicalSearches
      description: TypicalSearch structures to import. If null, then the fileset is scanned for *TypicalSearch.json files and those are imported instead
    return:
      type: System.String
      description: Message that can be shown to the user, summarizing what has been done, if anything.
    content.vb: Function UpdateTypicalSearch(searches As TypicalSearches) As String
  overload: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch*
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateDefaultMailMergeSettings
  name: CreateDefaultMailMergeSettings
  nameWithType: ISelectionAgent.CreateDefaultMailMergeSettings
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeSettings
- uid: SuperOffice.CRM.Services.MailMergeSettings
  commentId: T:SuperOffice.CRM.Services.MailMergeSettings
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.MailMergeSettings.html
  name: MailMergeSettings
  nameWithType: MailMergeSettings
  fullName: SuperOffice.CRM.Services.MailMergeSettings
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateDefaultMailMergeTask
  name: CreateDefaultMailMergeTask
  nameWithType: ISelectionAgent.CreateDefaultMailMergeTask
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultMailMergeTask
- uid: SuperOffice.CRM.Services.MailMergeTask
  commentId: T:SuperOffice.CRM.Services.MailMergeTask
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.MailMergeTask.html
  name: MailMergeTask
  nameWithType: MailMergeTask
  fullName: SuperOffice.CRM.Services.MailMergeTask
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateDefaultSelectionEntity
  name: CreateDefaultSelectionEntity
  nameWithType: ISelectionAgent.CreateDefaultSelectionEntity
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateDefaultSelectionEntity
- uid: SuperOffice.CRM.Services.SelectionEntity
  commentId: T:SuperOffice.CRM.Services.SelectionEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SelectionEntity.html
  name: SelectionEntity
  nameWithType: SelectionEntity
  fullName: SuperOffice.CRM.Services.SelectionEntity
- uid: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_SaveSelectionEntity_SuperOffice_CRM_Services_SelectionEntity_
  name: SaveSelectionEntity
  nameWithType: ISelectionAgent.SaveSelectionEntity
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SaveSelectionEntity
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_DeleteSelectionEntity_System_Int32_
  name: DeleteSelectionEntity
  nameWithType: ISelectionAgent.DeleteSelectionEntity
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteSelectionEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetSelectionEntity_System_Int32_
  name: GetSelectionEntity
  nameWithType: ISelectionAgent.GetSelectionEntity
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionEntity
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateSelectionEntity_System_String_
  name: CreateSelectionEntity
  nameWithType: ISelectionAgent.CreateSelectionEntity
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionEntity
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateContactSelectionFromSelection_System_Int32_System_String_SuperOffice_Data_SelectionType_System_Boolean_
  name: CreateContactSelectionFromSelection
  nameWithType: ISelectionAgent.CreateContactSelectionFromSelection
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromSelection
- uid: SuperOffice.Data.SelectionType
  isExternal: true
  name: SelectionType
  nameWithType: SelectionType
  fullName: SuperOffice.Data.SelectionType
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateTemporaryContactSelectionFromContactPersonIds_SuperOffice_CRM_Services_ContactPersonId___
  name: CreateTemporaryContactSelectionFromContactPersonIds
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromContactPersonIds
- uid: SuperOffice.CRM.Services.ContactPersonId[]
  isExternal: true
  href: SuperOffice.CRM.Services.ContactPersonId.html
  name: ContactPersonId[]
  nameWithType: ContactPersonId[]
  fullName: SuperOffice.CRM.Services.ContactPersonId[]
  nameWithType.vb: ContactPersonId()
  fullName.vb: SuperOffice.CRM.Services.ContactPersonId()
  name.vb: ContactPersonId()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ContactPersonId
    name: ContactPersonId
    isExternal: true
    href: SuperOffice.CRM.Services.ContactPersonId.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ContactPersonId
    name: ContactPersonId
    isExternal: true
    href: SuperOffice.CRM.Services.ContactPersonId.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateTemporaryContactSelectionFromProjectMembers_System_Int32_
  name: CreateTemporaryContactSelectionFromProjectMembers
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromProjectMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CopyContactSelectionMembers_System_Int32_System_Int32_
  name: CopyContactSelectionMembers
  nameWithType: ISelectionAgent.CopyContactSelectionMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopyContactSelectionMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetRecipientStatistics_System_Int32_
  name: GetRecipientStatistics
  nameWithType: ISelectionAgent.GetRecipientStatistics
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatistics
- uid: SuperOffice.CRM.Services.RecipientStatistics
  commentId: T:SuperOffice.CRM.Services.RecipientStatistics
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.RecipientStatistics.html
  name: RecipientStatistics
  nameWithType: RecipientStatistics
  fullName: SuperOffice.CRM.Services.RecipientStatistics
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetRecipientStatisticsFromProjectMembers_System_Int32_
  name: GetRecipientStatisticsFromProjectMembers
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromProjectMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromProjectMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetRecipientStatisticsFromContactPersonIds_SuperOffice_CRM_Services_ContactPersonId___
  name: GetRecipientStatisticsFromContactPersonIds
  nameWithType: ISelectionAgent.GetRecipientStatisticsFromContactPersonIds
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetRecipientStatisticsFromContactPersonIds
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_AddContactSelectionMembers_System_Int32_SuperOffice_CRM_Services_ContactPersonId___
  name: AddContactSelectionMembers
  nameWithType: ISelectionAgent.AddContactSelectionMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_RemoveContactSelectionMembers_System_Int32_SuperOffice_CRM_Services_ContactPersonId___
  name: RemoveContactSelectionMembers
  nameWithType: ISelectionAgent.RemoveContactSelectionMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_RemoveContactSelectionMembersFromIds_System_Int32_System_Int32___
  name: RemoveContactSelectionMembersFromIds
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromIds
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromIds
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_AddContactSelectionMembersFromSearch_System_Int32_System_String_
  name: AddContactSelectionMembersFromSearch
  nameWithType: ISelectionAgent.AddContactSelectionMembersFromSearch
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddContactSelectionMembersFromSearch
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_RemoveContactSelectionMembersFromSearch_System_Int32_System_String_
  name: RemoveContactSelectionMembersFromSearch
  nameWithType: ISelectionAgent.RemoveContactSelectionMembersFromSearch
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveContactSelectionMembersFromSearch
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateTemporaryContactSelection
  name: CreateTemporaryContactSelection
  nameWithType: ISelectionAgent.CreateTemporaryContactSelection
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelection
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateTemporaryContactSelectionFromSelectionMemberIds_System_Int32_System_Int32___
  name: CreateTemporaryContactSelectionFromSelectionMemberIds
  nameWithType: ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporaryContactSelectionFromSelectionMemberIds
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_AddRemoveContactSelectionMemberInterests_System_Int32_System_Int32___System_Int32___System_Int32___System_Int32___
  name: AddRemoveContactSelectionMemberInterests
  nameWithType: ISelectionAgent.AddRemoveContactSelectionMemberInterests
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddRemoveContactSelectionMemberInterests
- uid: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_EditContactSelectionMemberDetails_System_Int32_SuperOffice_CRM_Services_SelectionMemberEditValues_
  name: EditContactSelectionMemberDetails
  nameWithType: ISelectionAgent.EditContactSelectionMemberDetails
  fullName: SuperOffice.CRM.Services.ISelectionAgent.EditContactSelectionMemberDetails
- uid: SuperOffice.CRM.Services.SelectionMemberEditValues
  commentId: T:SuperOffice.CRM.Services.SelectionMemberEditValues
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SelectionMemberEditValues.html
  name: SelectionMemberEditValues
  nameWithType: SelectionMemberEditValues
  fullName: SuperOffice.CRM.Services.SelectionMemberEditValues
- uid: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GenerateFollowUps_System_Int32_SuperOffice_CRM_Services_AppointmentEntity_System_Int32_System_Boolean_System_Boolean_
  name: GenerateFollowUps
  nameWithType: ISelectionAgent.GenerateFollowUps
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GenerateFollowUps
- uid: SuperOffice.CRM.Services.AppointmentEntity
  commentId: T:SuperOffice.CRM.Services.AppointmentEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.AppointmentEntity.html
  name: AppointmentEntity
  nameWithType: AppointmentEntity
  fullName: SuperOffice.CRM.Services.AppointmentEntity
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_ExportSelectionMembers_System_Int32_System_String_System_Boolean_
  name: ExportSelectionMembers
  nameWithType: ISelectionAgent.ExportSelectionMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembers
- uid: System.Byte[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.byte
  name: byte[]
  nameWithType: byte[]
  fullName: byte[]
  nameWithType.vb: Byte()
  fullName.vb: Byte()
  name.vb: Byte()
  spec.csharp:
  - uid: System.Byte
    name: byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Byte
    name: Byte
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.byte
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_ExportSelectionMembersWithOrderBy_System_Int32_System_String_System_Boolean_System_String_
  name: ExportSelectionMembersWithOrderBy
  nameWithType: ISelectionAgent.ExportSelectionMembersWithOrderBy
  fullName: SuperOffice.CRM.Services.ISelectionAgent.ExportSelectionMembersWithOrderBy
- uid: SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_StartMailMerge_SuperOffice_CRM_Services_MailMergeSettings_
  name: StartMailMerge
  nameWithType: ISelectionAgent.StartMailMerge
  fullName: SuperOffice.CRM.Services.ISelectionAgent.StartMailMerge
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_SetDuplicateRulesStatus_SuperOffice_CRM_Services_DuplicateRule___
  name: SetDuplicateRulesStatus
  nameWithType: ISelectionAgent.SetDuplicateRulesStatus
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDuplicateRulesStatus
- uid: SuperOffice.CRM.Services.DuplicateRule[]
  isExternal: true
  href: SuperOffice.CRM.Services.DuplicateRule.html
  name: DuplicateRule[]
  nameWithType: DuplicateRule[]
  fullName: SuperOffice.CRM.Services.DuplicateRule[]
  nameWithType.vb: DuplicateRule()
  fullName.vb: SuperOffice.CRM.Services.DuplicateRule()
  name.vb: DuplicateRule()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.DuplicateRule
    name: DuplicateRule
    isExternal: true
    href: SuperOffice.CRM.Services.DuplicateRule.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.DuplicateRule
    name: DuplicateRule
    isExternal: true
    href: SuperOffice.CRM.Services.DuplicateRule.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetDuplicates_System_String_
  name: GetDuplicates
  nameWithType: ISelectionAgent.GetDuplicates
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicates
- uid: SuperOffice.CRM.Services.DuplicateEntry[]
  isExternal: true
  href: SuperOffice.CRM.Services.DuplicateEntry.html
  name: DuplicateEntry[]
  nameWithType: DuplicateEntry[]
  fullName: SuperOffice.CRM.Services.DuplicateEntry[]
  nameWithType.vb: DuplicateEntry()
  fullName.vb: SuperOffice.CRM.Services.DuplicateEntry()
  name.vb: DuplicateEntry()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.DuplicateEntry
    name: DuplicateEntry
    isExternal: true
    href: SuperOffice.CRM.Services.DuplicateEntry.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.DuplicateEntry
    name: DuplicateEntry
    isExternal: true
    href: SuperOffice.CRM.Services.DuplicateEntry.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetDuplicateRules
  name: GetDuplicateRules
  nameWithType: ISelectionAgent.GetDuplicateRules
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDuplicateRules
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateNewEntry_SuperOffice_CRM_Services_DuplicateEntry_
  name: CreateNewEntry
  nameWithType: ISelectionAgent.CreateNewEntry
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateNewEntry
- uid: SuperOffice.CRM.Services.DuplicateEntry
  commentId: T:SuperOffice.CRM.Services.DuplicateEntry
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.DuplicateEntry.html
  name: DuplicateEntry
  nameWithType: DuplicateEntry
  fullName: SuperOffice.CRM.Services.DuplicateEntry
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_DeleteContacts_System_Int32_
  name: DeleteContacts
  nameWithType: ISelectionAgent.DeleteContacts
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteContacts
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_AddSelectionMembers_System_Int32_System_Int32___
  name: AddSelectionMembers
  nameWithType: ISelectionAgent.AddSelectionMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_RemoveSelectionMembers_System_Int32_System_Int32___
  name: RemoveSelectionMembers
  nameWithType: ISelectionAgent.RemoveSelectionMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_RemoveSelectionMembersById_System_Int32_System_Int32___
  name: RemoveSelectionMembersById
  nameWithType: ISelectionAgent.RemoveSelectionMembersById
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersById
- uid: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_AddSelectionMembersFromSearch_System_Int32_System_String_
  name: AddSelectionMembersFromSearch
  nameWithType: ISelectionAgent.AddSelectionMembersFromSearch
  fullName: SuperOffice.CRM.Services.ISelectionAgent.AddSelectionMembersFromSearch
- uid: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_RemoveSelectionMembersFromSearch_System_Int32_System_String_
  name: RemoveSelectionMembersFromSearch
  nameWithType: ISelectionAgent.RemoveSelectionMembersFromSearch
  fullName: SuperOffice.CRM.Services.ISelectionAgent.RemoveSelectionMembersFromSearch
- uid: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CopySelectionMembers_System_Int32_System_Int32_
  name: CopySelectionMembers
  nameWithType: ISelectionAgent.CopySelectionMembers
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CopySelectionMembers
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateTemporarySelectionFromIds_System_Int32___System_Int32_
  name: CreateTemporarySelectionFromIds
  nameWithType: ISelectionAgent.CreateTemporarySelectionFromIds
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateTemporarySelectionFromIds
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateSelectionFromSelection_System_Int32_System_String_SuperOffice_Data_SelectionType_System_Boolean_
  name: CreateSelectionFromSelection
  nameWithType: ISelectionAgent.CreateSelectionFromSelection
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateSelectionFromSelection
- uid: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_CreateContactSelectionFromShadowSelection_System_Int32_System_String_
  name: CreateContactSelectionFromShadowSelection
  nameWithType: ISelectionAgent.CreateContactSelectionFromShadowSelection
  fullName: SuperOffice.CRM.Services.ISelectionAgent.CreateContactSelectionFromShadowSelection
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_DeleteEntities_System_Int32_
  name: DeleteEntities
  nameWithType: ISelectionAgent.DeleteEntities
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeleteEntities
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetParentCombinedSelections_System_Int32_
  name: GetParentCombinedSelections
  nameWithType: ISelectionAgent.GetParentCombinedSelections
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetParentCombinedSelections
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetSelectionMembersArchiveRows_System_Int32_System_String_
  name: GetSelectionMembersArchiveRows
  nameWithType: ISelectionAgent.GetSelectionMembersArchiveRows
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionMembersArchiveRows
- uid: SuperOffice.CRM.Services.ArchiveListItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.ArchiveListItem.html
  name: ArchiveListItem[]
  nameWithType: ArchiveListItem[]
  fullName: SuperOffice.CRM.Services.ArchiveListItem[]
  nameWithType.vb: ArchiveListItem()
  fullName.vb: SuperOffice.CRM.Services.ArchiveListItem()
  name.vb: ArchiveListItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ArchiveListItem
    name: ArchiveListItem
    isExternal: true
    href: SuperOffice.CRM.Services.ArchiveListItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ArchiveListItem
    name: ArchiveListItem
    isExternal: true
    href: SuperOffice.CRM.Services.ArchiveListItem.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetSelectionShadowMembersArchiveRows_System_Int32_System_String_
  name: GetSelectionShadowMembersArchiveRows
  nameWithType: ISelectionAgent.GetSelectionShadowMembersArchiveRows
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionShadowMembersArchiveRows
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetDynamicSelectionCriteria_System_Int32_
  name: GetDynamicSelectionCriteria
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteria
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteria
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  isExternal: true
  name: ArchiveRestrictionInfo[]
  nameWithType: ArchiveRestrictionInfo[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo[]
  nameWithType.vb: ArchiveRestrictionInfo()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo()
  name.vb: ArchiveRestrictionInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionInfo
    name: ArchiveRestrictionInfo
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_SetDynamicSelectionCriteria_System_Int32_SuperOffice_CRM_ArchiveLists_ArchiveRestrictionInfo___
  name: SetDynamicSelectionCriteria
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_SetDynamicSelectionCriteria2_System_Int32_System_String_
  name: SetDynamicSelectionCriteria2
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria2
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria2
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_SetDynamicSelectionCriteria3_System_Int32_SuperOffice_CRM_ArchiveLists_ArchiveRestrictionInfo___System_String_
  name: SetDynamicSelectionCriteria3
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteria3
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteria3
- uid: SuperOffice.CRM.Services.ISelectionAgent.DeletePersons*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.DeletePersons
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_DeletePersons_System_Int32_
  name: DeletePersons
  nameWithType: ISelectionAgent.DeletePersons
  fullName: SuperOffice.CRM.Services.ISelectionAgent.DeletePersons
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetDynamicSelectionCriteriaGroups_System_Int32_
  name: GetDynamicSelectionCriteriaGroups
  nameWithType: ISelectionAgent.GetDynamicSelectionCriteriaGroups
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetDynamicSelectionCriteriaGroups
- uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
  isExternal: true
  name: ArchiveRestrictionGroup[]
  nameWithType: ArchiveRestrictionGroup[]
  fullName: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup[]
  nameWithType.vb: ArchiveRestrictionGroup()
  fullName.vb: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup()
  name.vb: ArchiveRestrictionGroup()
  spec.csharp:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    isExternal: true
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.ArchiveLists.ArchiveRestrictionGroup
    name: ArchiveRestrictionGroup
    isExternal: true
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_SetDynamicSelectionCriteriaGroups_System_Int32_SuperOffice_CRM_ArchiveLists_ArchiveRestrictionGroup___
  name: SetDynamicSelectionCriteriaGroups
  nameWithType: ISelectionAgent.SetDynamicSelectionCriteriaGroups
  fullName: SuperOffice.CRM.Services.ISelectionAgent.SetDynamicSelectionCriteriaGroups
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetSelectionForFind_System_String_System_Int32_
  name: GetSelectionForFind
  nameWithType: ISelectionAgent.GetSelectionForFind
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionForFind
- uid: SuperOffice.CRM.Services.SelectionForFind
  commentId: T:SuperOffice.CRM.Services.SelectionForFind
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.SelectionForFind.html
  name: SelectionForFind
  nameWithType: SelectionForFind
  fullName: SuperOffice.CRM.Services.SelectionForFind
- uid: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_GetSelectionSummaries_System_Int32___
  name: GetSelectionSummaries
  nameWithType: ISelectionAgent.GetSelectionSummaries
  fullName: SuperOffice.CRM.Services.ISelectionAgent.GetSelectionSummaries
- uid: SuperOffice.CRM.Services.SelectionSummaryItem[]
  isExternal: true
  href: SuperOffice.CRM.Services.SelectionSummaryItem.html
  name: SelectionSummaryItem[]
  nameWithType: SelectionSummaryItem[]
  fullName: SuperOffice.CRM.Services.SelectionSummaryItem[]
  nameWithType.vb: SelectionSummaryItem()
  fullName.vb: SuperOffice.CRM.Services.SelectionSummaryItem()
  name.vb: SelectionSummaryItem()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.SelectionSummaryItem
    name: SelectionSummaryItem
    isExternal: true
    href: SuperOffice.CRM.Services.SelectionSummaryItem.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.SelectionSummaryItem
    name: SelectionSummaryItem
    isExternal: true
    href: SuperOffice.CRM.Services.SelectionSummaryItem.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch*
  commentId: Overload:SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch
  isExternal: true
  href: SuperOffice.CRM.Services.ISelectionAgent.html#SuperOffice_CRM_Services_ISelectionAgent_UpdateTypicalSearch_SuperOffice_CRM_Services_TypicalSearches_
  name: UpdateTypicalSearch
  nameWithType: ISelectionAgent.UpdateTypicalSearch
  fullName: SuperOffice.CRM.Services.ISelectionAgent.UpdateTypicalSearch
- uid: SuperOffice.CRM.Services.TypicalSearches
  commentId: T:SuperOffice.CRM.Services.TypicalSearches
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TypicalSearches.html
  name: TypicalSearches
  nameWithType: TypicalSearches
  fullName: SuperOffice.CRM.Services.TypicalSearches
