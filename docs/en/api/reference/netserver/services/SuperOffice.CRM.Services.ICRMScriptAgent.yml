### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.ICRMScriptAgent
  commentId: T:SuperOffice.CRM.Services.ICRMScriptAgent
  id: ICRMScriptAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity
  - SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity
  - SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(System.String)
  - SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity(System.Int32)
  - SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId(System.String)
  - SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity(System.Int32)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent(System.Int32,SuperOffice.CRM.Services.EventData)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId(System.String,SuperOffice.CRM.Services.EventData)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId(System.String,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString(System.String,SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Services.EventData)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId(System.String,SuperOffice.CRM.Services.StringDictionary)
  - SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier(System.String)
  - SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity(System.Int32)
  - SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId(System.String)
  - SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity(System.Int32)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes(System.String,System.Boolean)
  - SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier(System.String,SuperOffice.CRM.Services.Script)
  - SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity(SuperOffice.CRM.Services.CRMScriptEntity)
  - SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile(SuperOffice.CRM.Services.CRMScriptEntity)
  - SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId(System.String,SuperOffice.CRM.Services.TriggerScriptEntity)
  - SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity(SuperOffice.CRM.Services.TriggerScriptEntity)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript(System.Int32)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId(System.String)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString(System.String)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId(System.String)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript(System.Int32)
  - SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId(System.String)
  langs:
  - csharp
  - vb
  name: ICRMScriptAgent
  nameWithType: ICRMScriptAgent
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the CRMScript Agent

    Manage and execute CRMScript functions.

    <p></p>

    <b>Online Restricted:</b> This agent is not available in Online by default. Access must be requested specifically when app is registered.
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (CRMScriptAgent agent = new CRMScriptAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("CRMScript Agent", "Interface for the CRMScript Agent. Manage and execute CRMScript functions.")]

      public interface ICRMScriptAgent : IAgent
    content.vb: >-
      <Agent("CRMScript Agent", "Interface for the CRMScript Agent. Manage and execute CRMScript functions.")>

      Public Interface ICRMScriptAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: CRMScript Agent
    - type: System.String
      value: Interface for the CRMScript Agent. Manage and execute CRMScript functions.
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity
  id: CreateDefaultCRMScriptEntity
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultCRMScriptEntity()
  nameWithType: ICRMScriptAgent.CreateDefaultCRMScriptEntity()
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new CRMScriptEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptEntity CreateDefaultCRMScriptEntity()
    return:
      type: SuperOffice.CRM.Services.CRMScriptEntity
      description: New CRMScriptEntity with default values
    content.vb: Function CreateDefaultCRMScriptEntity() As CRMScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity*
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity(SuperOffice.CRM.Services.CRMScriptEntity)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity(SuperOffice.CRM.Services.CRMScriptEntity)
  id: SaveCRMScriptEntity(SuperOffice.CRM.Services.CRMScriptEntity)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: SaveCRMScriptEntity(CRMScriptEntity)
  nameWithType: ICRMScriptAgent.SaveCRMScriptEntity(CRMScriptEntity)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity(SuperOffice.CRM.Services.CRMScriptEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Updates the existing CRMScriptEntity or creates a new CRMScriptEntity if the id parameter is empty

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptEntity SaveCRMScriptEntity(CRMScriptEntity cRMScriptEntity)
    parameters:
    - id: cRMScriptEntity
      type: SuperOffice.CRM.Services.CRMScriptEntity
      description: The CRMScriptEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.CRMScriptEntity
      description: New or updated CRMScriptEntity
    content.vb: Function SaveCRMScriptEntity(cRMScriptEntity As CRMScriptEntity) As CRMScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity*
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity(System.Int32)
  id: DeleteCRMScriptEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: DeleteCRMScriptEntity(int)
  nameWithType: ICRMScriptAgent.DeleteCRMScriptEntity(int)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Deletes the CRMScriptEntity

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: void DeleteCRMScriptEntity(int cRMScriptEntityId)
    parameters:
    - id: cRMScriptEntityId
      type: System.Int32
      description: The identity of the CRMScriptEntity
    content.vb: Sub DeleteCRMScriptEntity(cRMScriptEntityId As Integer)
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity*
  nameWithType.vb: ICRMScriptAgent.DeleteCRMScriptEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity(Integer)
  name.vb: DeleteCRMScriptEntity(Integer)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity
  id: CreateDefaultTriggerScriptEntity
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultTriggerScriptEntity()
  nameWithType: ICRMScriptAgent.CreateDefaultTriggerScriptEntity()
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new TriggerScriptEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: TriggerScriptEntity CreateDefaultTriggerScriptEntity()
    return:
      type: SuperOffice.CRM.Services.TriggerScriptEntity
      description: New TriggerScriptEntity with default values
    content.vb: Function CreateDefaultTriggerScriptEntity() As TriggerScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity*
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity(SuperOffice.CRM.Services.TriggerScriptEntity)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity(SuperOffice.CRM.Services.TriggerScriptEntity)
  id: SaveTriggerScriptEntity(SuperOffice.CRM.Services.TriggerScriptEntity)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: SaveTriggerScriptEntity(TriggerScriptEntity)
  nameWithType: ICRMScriptAgent.SaveTriggerScriptEntity(TriggerScriptEntity)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity(SuperOffice.CRM.Services.TriggerScriptEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Updates the existing TriggerScriptEntity or creates a new TriggerScriptEntity if the id parameter is empty

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: TriggerScriptEntity SaveTriggerScriptEntity(TriggerScriptEntity triggerScriptEntity)
    parameters:
    - id: triggerScriptEntity
      type: SuperOffice.CRM.Services.TriggerScriptEntity
      description: The TriggerScriptEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.TriggerScriptEntity
      description: New or updated TriggerScriptEntity
    content.vb: Function SaveTriggerScriptEntity(triggerScriptEntity As TriggerScriptEntity) As TriggerScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity*
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity(System.Int32)
  id: DeleteTriggerScriptEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: DeleteTriggerScriptEntity(int)
  nameWithType: ICRMScriptAgent.DeleteTriggerScriptEntity(int)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Deletes the TriggerScriptEntity

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: void DeleteTriggerScriptEntity(int triggerScriptEntityId)
    parameters:
    - id: triggerScriptEntityId
      type: System.Int32
      description: The identity of the TriggerScriptEntity
    content.vb: Sub DeleteTriggerScriptEntity(triggerScriptEntityId As Integer)
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity*
  nameWithType.vb: ICRMScriptAgent.DeleteTriggerScriptEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity(Integer)
  name.vb: DeleteTriggerScriptEntity(Integer)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier(System.String)
  id: GetCRMScriptByUniqueIdentifier(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: GetCRMScriptByUniqueIdentifier(string)
  nameWithType: ICRMScriptAgent.GetCRMScriptByUniqueIdentifier(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get information about a script from a unique identifier

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: Script GetCRMScriptByUniqueIdentifier(string uniqueIdentifier)
    parameters:
    - id: uniqueIdentifier
      type: System.String
      description: Global unique reference to script (independent of installation)
    return:
      type: SuperOffice.CRM.Services.Script
      description: Information about CRMScript
    content.vb: Function GetCRMScriptByUniqueIdentifier(uniqueIdentifier As String) As Script
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier*
  nameWithType.vb: ICRMScriptAgent.GetCRMScriptByUniqueIdentifier(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier(String)
  name.vb: GetCRMScriptByUniqueIdentifier(String)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier(System.String,SuperOffice.CRM.Services.Script)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier(System.String,SuperOffice.CRM.Services.Script)
  id: SaveCRMScriptByUniqueIdentifier(System.String,SuperOffice.CRM.Services.Script)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: SaveCRMScriptByUniqueIdentifier(string, Script)
  nameWithType: ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier(string, Script)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier(string, SuperOffice.CRM.Services.Script)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Create or Update the CRMScript information

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: Script SaveCRMScriptByUniqueIdentifier(string uniqueIdentifier, Script crmscript)
    parameters:
    - id: uniqueIdentifier
      type: System.String
      description: Global unique reference to script (independent of installation)
    - id: crmscript
      type: SuperOffice.CRM.Services.Script
      description: Information about the CRMScript
    return:
      type: SuperOffice.CRM.Services.Script
      description: Information about the CRMScript as saved in the database
    content.vb: Function SaveCRMScriptByUniqueIdentifier(uniqueIdentifier As String, crmscript As Script) As Script
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier*
  nameWithType.vb: ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier(String, Script)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier(String, SuperOffice.CRM.Services.Script)
  name.vb: SaveCRMScriptByUniqueIdentifier(String, Script)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(System.String)
  id: DeleteCRMScriptByUniqueIdentifier(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: DeleteCRMScriptByUniqueIdentifier(string)
  nameWithType: ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Delete the CRMScript

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: void DeleteCRMScriptByUniqueIdentifier(string uniqueIdentifier)
    parameters:
    - id: uniqueIdentifier
      type: System.String
      description: Global unique reference to script (independent of installation)
    content.vb: Sub DeleteCRMScriptByUniqueIdentifier(uniqueIdentifier As String)
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier*
  nameWithType.vb: ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier(String)
  name.vb: DeleteCRMScriptByUniqueIdentifier(String)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity(System.Int32)
  id: GetCRMScriptEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: GetCRMScriptEntity(int)
  nameWithType: ICRMScriptAgent.GetCRMScriptEntity(int)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a CRMScriptEntity object.                        

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptEntity GetCRMScriptEntity(int cRMScriptEntityId)
    parameters:
    - id: cRMScriptEntityId
      type: System.Int32
      description: The identifier of the CRMScriptEntity object
    return:
      type: SuperOffice.CRM.Services.CRMScriptEntity
      description: CRMScriptEntity
    content.vb: Function GetCRMScriptEntity(cRMScriptEntityId As Integer) As CRMScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity*
  nameWithType.vb: ICRMScriptAgent.GetCRMScriptEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity(Integer)
  name.vb: GetCRMScriptEntity(Integer)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile(SuperOffice.CRM.Services.CRMScriptEntity)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile(SuperOffice.CRM.Services.CRMScriptEntity)
  id: SaveCRMScriptEntityWithoutCompile(SuperOffice.CRM.Services.CRMScriptEntity)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: SaveCRMScriptEntityWithoutCompile(CRMScriptEntity)
  nameWithType: ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile(CRMScriptEntity)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile(SuperOffice.CRM.Services.CRMScriptEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Save the script directly without compiling TypeScript

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptEntity SaveCRMScriptEntityWithoutCompile(CRMScriptEntity crmScriptEntity)
    parameters:
    - id: crmScriptEntity
      type: SuperOffice.CRM.Services.CRMScriptEntity
      description: The entity to save. Source and SourceCode should both be specified
    return:
      type: SuperOffice.CRM.Services.CRMScriptEntity
      description: The saved entity
    content.vb: Function SaveCRMScriptEntityWithoutCompile(crmScriptEntity As CRMScriptEntity) As CRMScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile*
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  id: ExecuteScript(System.Int32,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ExecuteScript(int, StringDictionary)
  nameWithType: ICRMScriptAgent.ExecuteScript(int, StringDictionary)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript(int, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Execute a CRMScript with parameters, returning printed output value.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: string ExecuteScript(int cRMScriptId, StringDictionary parameters)
    parameters:
    - id: cRMScriptId
      type: System.Int32
      description: The id of the CRMScript to execute
    - id: parameters
      type: SuperOffice.CRM.Services.StringDictionary
      description: Parameters passed as variables to the CRMScript
    return:
      type: System.String
      description: The output produced by the CRMScript
    content.vb: Function ExecuteScript(cRMScriptId As Integer, parameters As StringDictionary) As String
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript*
  nameWithType.vb: ICRMScriptAgent.ExecuteScript(Integer, StringDictionary)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript(Integer, SuperOffice.CRM.Services.StringDictionary)
  name.vb: ExecuteScript(Integer, StringDictionary)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId(System.String,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId(System.String,SuperOffice.CRM.Services.StringDictionary)
  id: ExecuteScriptByIncludeId(System.String,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ExecuteScriptByIncludeId(string, StringDictionary)
  nameWithType: ICRMScriptAgent.ExecuteScriptByIncludeId(string, StringDictionary)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId(string, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Execute a CRMScript with parameters, returning printed output value.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: string ExecuteScriptByIncludeId(string cRMScriptIncludeId, StringDictionary parameters)
    parameters:
    - id: cRMScriptIncludeId
      type: System.String
      description: The include id of the CRMScript to validate
    - id: parameters
      type: SuperOffice.CRM.Services.StringDictionary
      description: Parameters passed as variables to the CRMScript
    return:
      type: System.String
      description: The output produced by the CRMScript
    content.vb: Function ExecuteScriptByIncludeId(cRMScriptIncludeId As String, parameters As StringDictionary) As String
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId*
  nameWithType.vb: ICRMScriptAgent.ExecuteScriptByIncludeId(String, StringDictionary)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId(String, SuperOffice.CRM.Services.StringDictionary)
  name.vb: ExecuteScriptByIncludeId(String, StringDictionary)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId(System.String,SuperOffice.CRM.Services.StringDictionary)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId(System.String,SuperOffice.CRM.Services.StringDictionary)
  id: ExecuteScriptByUniqueId(System.String,SuperOffice.CRM.Services.StringDictionary)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ExecuteScriptByUniqueId(string, StringDictionary)
  nameWithType: ICRMScriptAgent.ExecuteScriptByUniqueId(string, StringDictionary)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId(string, SuperOffice.CRM.Services.StringDictionary)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Execute a CRMScript with parameters, returning printed output value.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: string ExecuteScriptByUniqueId(string cRMScriptUniqueId, StringDictionary parameters)
    parameters:
    - id: cRMScriptUniqueId
      type: System.String
      description: The unique id of the CRMScript to validate
    - id: parameters
      type: SuperOffice.CRM.Services.StringDictionary
      description: Parameters passed as variables to the CRMScript
    return:
      type: System.String
      description: The output produced by the CRMScript
    content.vb: Function ExecuteScriptByUniqueId(cRMScriptUniqueId As String, parameters As StringDictionary) As String
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId*
  nameWithType.vb: ICRMScriptAgent.ExecuteScriptByUniqueId(String, StringDictionary)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId(String, SuperOffice.CRM.Services.StringDictionary)
  name.vb: ExecuteScriptByUniqueId(String, StringDictionary)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent(System.Int32,SuperOffice.CRM.Services.EventData)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent(System.Int32,SuperOffice.CRM.Services.EventData)
  id: ExecuteScriptAsEvent(System.Int32,SuperOffice.CRM.Services.EventData)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ExecuteScriptAsEvent(int, EventData)
  nameWithType: ICRMScriptAgent.ExecuteScriptAsEvent(int, EventData)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent(int, SuperOffice.CRM.Services.EventData)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Execute a CRMScript with event data as input. Returns event data with output variable values.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: EventData ExecuteScriptAsEvent(int cRMScriptId, EventData eventData)
    parameters:
    - id: cRMScriptId
      type: System.Int32
      description: The id of the CRMScript to execute
    - id: eventData
      type: SuperOffice.CRM.Services.EventData
      description: The EventData instance sent to the crmscript with input values
    return:
      type: SuperOffice.CRM.Services.EventData
      description: The EventData instance after script execution with output values
    content.vb: Function ExecuteScriptAsEvent(cRMScriptId As Integer, eventData As EventData) As EventData
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent*
  nameWithType.vb: ICRMScriptAgent.ExecuteScriptAsEvent(Integer, EventData)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent(Integer, SuperOffice.CRM.Services.EventData)
  name.vb: ExecuteScriptAsEvent(Integer, EventData)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId(System.String,SuperOffice.CRM.Services.EventData)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId(System.String,SuperOffice.CRM.Services.EventData)
  id: ExecuteScriptAsEventByUniqueId(System.String,SuperOffice.CRM.Services.EventData)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ExecuteScriptAsEventByUniqueId(string, EventData)
  nameWithType: ICRMScriptAgent.ExecuteScriptAsEventByUniqueId(string, EventData)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId(string, SuperOffice.CRM.Services.EventData)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Execute a CRMScript with event data as input. Returns event data with output variable values.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: EventData ExecuteScriptAsEventByUniqueId(string cRMScriptUniqueId, EventData eventData)
    parameters:
    - id: cRMScriptUniqueId
      type: System.String
      description: The unique id of the CRMScript to execute
    - id: eventData
      type: SuperOffice.CRM.Services.EventData
      description: The EventData instance sent to the crmscript with input values
    return:
      type: SuperOffice.CRM.Services.EventData
      description: The EventData instance after script execution with output values
    content.vb: Function ExecuteScriptAsEventByUniqueId(cRMScriptUniqueId As String, eventData As EventData) As EventData
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId*
  nameWithType.vb: ICRMScriptAgent.ExecuteScriptAsEventByUniqueId(String, EventData)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId(String, SuperOffice.CRM.Services.EventData)
  name.vb: ExecuteScriptAsEventByUniqueId(String, EventData)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript(System.Int32)
  id: ValidateScript(System.Int32)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ValidateScript(int)
  nameWithType: ICRMScriptAgent.ValidateScript(int)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Validate a CRMScript. This will check that the syntax is correct

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptResult ValidateScript(int cRMScriptId)
    parameters:
    - id: cRMScriptId
      type: System.Int32
      description: The id of the CRMScript to execute
    return:
      type: SuperOffice.CRM.Services.CRMScriptResult
      description: True if the syntax is correct
    content.vb: Function ValidateScript(cRMScriptId As Integer) As CRMScriptResult
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript*
  nameWithType.vb: ICRMScriptAgent.ValidateScript(Integer)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript(Integer)
  name.vb: ValidateScript(Integer)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId(System.String)
  id: ValidateScriptByIncludeId(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ValidateScriptByIncludeId(string)
  nameWithType: ICRMScriptAgent.ValidateScriptByIncludeId(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Validate a CRMScript. This will check that the syntax is correct

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptResult ValidateScriptByIncludeId(string cRMScriptIncludeId)
    parameters:
    - id: cRMScriptIncludeId
      type: System.String
      description: The include id of the CRMScript to validate
    return:
      type: SuperOffice.CRM.Services.CRMScriptResult
      description: True if the syntax is correct
    content.vb: Function ValidateScriptByIncludeId(cRMScriptIncludeId As String) As CRMScriptResult
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId*
  nameWithType.vb: ICRMScriptAgent.ValidateScriptByIncludeId(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId(String)
  name.vb: ValidateScriptByIncludeId(String)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId(System.String)
  id: ValidateScriptByUniqueId(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ValidateScriptByUniqueId(string)
  nameWithType: ICRMScriptAgent.ValidateScriptByUniqueId(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Validate a CRMScript. This will check that the syntax is correct

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptResult ValidateScriptByUniqueId(string cRMScriptUniqueId)
    parameters:
    - id: cRMScriptUniqueId
      type: System.String
      description: The unique id of the CRMScript to validate
    return:
      type: SuperOffice.CRM.Services.CRMScriptResult
      description: True if the syntax is correct
    content.vb: Function ValidateScriptByUniqueId(cRMScriptUniqueId As String) As CRMScriptResult
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId*
  nameWithType.vb: ICRMScriptAgent.ValidateScriptByUniqueId(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId(String)
  name.vb: ValidateScriptByUniqueId(String)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString(System.String,SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Services.EventData)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString(System.String,SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Services.EventData)
  id: ExecuteScriptByString(System.String,SuperOffice.CRM.Services.StringDictionary,SuperOffice.CRM.Services.EventData)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ExecuteScriptByString(string, StringDictionary, EventData)
  nameWithType: ICRMScriptAgent.ExecuteScriptByString(string, StringDictionary, EventData)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString(string, SuperOffice.CRM.Services.StringDictionary, SuperOffice.CRM.Services.EventData)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Execute a CRMScript 2 (JavaScript), returning the printed output value.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptRunResult ExecuteScriptByString(string script, StringDictionary parameters, EventData eventData)
    parameters:
    - id: script
      type: System.String
      description: The script to execute
    - id: parameters
      type: SuperOffice.CRM.Services.StringDictionary
      description: Parameters passed as variables to the CRMScript
    - id: eventData
      type: SuperOffice.CRM.Services.EventData
      description: The EventData instance sent to the crmscript with input values
    return:
      type: SuperOffice.CRM.Services.CRMScriptRunResult
      description: The output produced by the CRMScript
    content.vb: Function ExecuteScriptByString(script As String, parameters As StringDictionary, eventData As EventData) As CRMScriptRunResult
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString*
  nameWithType.vb: ICRMScriptAgent.ExecuteScriptByString(String, StringDictionary, EventData)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString(String, SuperOffice.CRM.Services.StringDictionary, SuperOffice.CRM.Services.EventData)
  name.vb: ExecuteScriptByString(String, StringDictionary, EventData)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString(System.String)
  id: ValidateScriptByString(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ValidateScriptByString(string)
  nameWithType: ICRMScriptAgent.ValidateScriptByString(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Validate a CRMScript 2 (JavaScript). This will check that the syntax is correct

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptResult ValidateScriptByString(string script)
    parameters:
    - id: script
      type: System.String
      description: The script to validate
    return:
      type: SuperOffice.CRM.Services.CRMScriptResult
      description: The result of the syntax check
    content.vb: Function ValidateScriptByString(script As String) As CRMScriptResult
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString*
  nameWithType.vb: ICRMScriptAgent.ValidateScriptByString(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString(String)
  name.vb: ValidateScriptByString(String)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes(System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes(System.String,System.Boolean)
  id: ResolveIncludes(System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ResolveIncludes(string, bool)
  nameWithType: ICRMScriptAgent.ResolveIncludes(string, bool)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes(string, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Will resolve all includes for a TypeScript and return an array of the IDs

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: int[] ResolveIncludes(string script, bool ignoreErrors)
    parameters:
    - id: script
      type: System.String
      description: The script to resolve includes for
    - id: ignoreErrors
      type: System.Boolean
      description: If true, then missing includes will be ignored
    return:
      type: System.Int32[]
      description: The ids of all the included scripts
    content.vb: Function ResolveIncludes(script As String, ignoreErrors As Boolean) As Integer()
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes*
  nameWithType.vb: ICRMScriptAgent.ResolveIncludes(String, Boolean)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes(String, Boolean)
  name.vb: ResolveIncludes(String, Boolean)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity(System.Int32)
  id: GetTriggerScriptEntity(System.Int32)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: GetTriggerScriptEntity(int)
  nameWithType: ICRMScriptAgent.GetTriggerScriptEntity(int)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Gets a TriggerScriptEntity object.                        

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: TriggerScriptEntity GetTriggerScriptEntity(int triggerScriptEntityId)
    parameters:
    - id: triggerScriptEntityId
      type: System.Int32
      description: The identifier of the TriggerScriptEntity object
    return:
      type: SuperOffice.CRM.Services.TriggerScriptEntity
      description: TriggerScriptEntity
    content.vb: Function GetTriggerScriptEntity(triggerScriptEntityId As Integer) As TriggerScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity*
  nameWithType.vb: ICRMScriptAgent.GetTriggerScriptEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity(Integer)
  name.vb: GetTriggerScriptEntity(Integer)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId(System.String)
  id: GetTriggerScriptByUniqueId(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: GetTriggerScriptByUniqueId(string)
  nameWithType: ICRMScriptAgent.GetTriggerScriptByUniqueId(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Get a trigger CRMScript.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: TriggerScriptEntity GetTriggerScriptByUniqueId(string triggerScriptUniqueId)
    parameters:
    - id: triggerScriptUniqueId
      type: System.String
      description: The unique id of the CRMScript to validate
    return:
      type: SuperOffice.CRM.Services.TriggerScriptEntity
      description: Trigger script details and source code.
    content.vb: Function GetTriggerScriptByUniqueId(triggerScriptUniqueId As String) As TriggerScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId*
  nameWithType.vb: ICRMScriptAgent.GetTriggerScriptByUniqueId(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId(String)
  name.vb: GetTriggerScriptByUniqueId(String)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId(System.String,SuperOffice.CRM.Services.TriggerScriptEntity)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId(System.String,SuperOffice.CRM.Services.TriggerScriptEntity)
  id: SaveTriggerScriptByUniqueId(System.String,SuperOffice.CRM.Services.TriggerScriptEntity)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: SaveTriggerScriptByUniqueId(string, TriggerScriptEntity)
  nameWithType: ICRMScriptAgent.SaveTriggerScriptByUniqueId(string, TriggerScriptEntity)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId(string, SuperOffice.CRM.Services.TriggerScriptEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Validate a CRMScript. This will check that the syntax is correct

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: TriggerScriptEntity SaveTriggerScriptByUniqueId(string triggerScriptUniqueId, TriggerScriptEntity entity)
    parameters:
    - id: triggerScriptUniqueId
      type: System.String
      description: The unique id of the CRMScript to validate
    - id: entity
      type: SuperOffice.CRM.Services.TriggerScriptEntity
      description: Trigger script details and source code
    return:
      type: SuperOffice.CRM.Services.TriggerScriptEntity
      description: Trigger script details and source code.
    content.vb: Function SaveTriggerScriptByUniqueId(triggerScriptUniqueId As String, entity As TriggerScriptEntity) As TriggerScriptEntity
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId*
  nameWithType.vb: ICRMScriptAgent.SaveTriggerScriptByUniqueId(String, TriggerScriptEntity)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId(String, SuperOffice.CRM.Services.TriggerScriptEntity)
  name.vb: SaveTriggerScriptByUniqueId(String, TriggerScriptEntity)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId(System.String)
  id: DeleteTriggerScriptByUniqueId(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: DeleteTriggerScriptByUniqueId(string)
  nameWithType: ICRMScriptAgent.DeleteTriggerScriptByUniqueId(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Delete a trigger CRMScript.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: void DeleteTriggerScriptByUniqueId(string triggerScriptUniqueId)
    parameters:
    - id: triggerScriptUniqueId
      type: System.String
      description: The unique id of the CRMScript to validate
    content.vb: Sub DeleteTriggerScriptByUniqueId(triggerScriptUniqueId As String)
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId*
  nameWithType.vb: ICRMScriptAgent.DeleteTriggerScriptByUniqueId(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId(String)
  name.vb: DeleteTriggerScriptByUniqueId(String)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript(System.Int32)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript(System.Int32)
  id: ValidateTriggerScript(System.Int32)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ValidateTriggerScript(int)
  nameWithType: ICRMScriptAgent.ValidateTriggerScript(int)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Validate a Trigger CRMScript. This will check that the syntax is correct, but not execute the script.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptResult ValidateTriggerScript(int triggerScriptId)
    parameters:
    - id: triggerScriptId
      type: System.Int32
      description: The id of the CRMScript Trigger to validate
    return:
      type: SuperOffice.CRM.Services.CRMScriptResult
      description: True if the syntax is correct
    content.vb: Function ValidateTriggerScript(triggerScriptId As Integer) As CRMScriptResult
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript*
  nameWithType.vb: ICRMScriptAgent.ValidateTriggerScript(Integer)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript(Integer)
  name.vb: ValidateTriggerScript(Integer)
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId(System.String)
  commentId: M:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId(System.String)
  id: ValidateTriggerScriptByUniqueId(System.String)
  parent: SuperOffice.CRM.Services.ICRMScriptAgent
  langs:
  - csharp
  - vb
  name: ValidateTriggerScriptByUniqueId(string)
  nameWithType: ICRMScriptAgent.ValidateTriggerScriptByUniqueId(string)
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Validate a Trigger CRMScript. This will check that the syntax is correct, but not execute the script.

    <p></p>

    <b>Online Restricted:</b> The CRMScript agent is not available in Online by default. Access must be requested specifically when app is registered.
  example: []
  syntax:
    content: CRMScriptResult ValidateTriggerScriptByUniqueId(string triggerScriptUniqueId)
    parameters:
    - id: triggerScriptUniqueId
      type: System.String
      description: The unique id of the CRMScript to validate
    return:
      type: SuperOffice.CRM.Services.CRMScriptResult
      description: True if the syntax is correct
    content.vb: Function ValidateTriggerScriptByUniqueId(triggerScriptUniqueId As String) As CRMScriptResult
  overload: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId*
  nameWithType.vb: ICRMScriptAgent.ValidateTriggerScriptByUniqueId(String)
  fullName.vb: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId(String)
  name.vb: ValidateTriggerScriptByUniqueId(String)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_CreateDefaultCRMScriptEntity
  name: CreateDefaultCRMScriptEntity
  nameWithType: ICRMScriptAgent.CreateDefaultCRMScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultCRMScriptEntity
- uid: SuperOffice.CRM.Services.CRMScriptEntity
  commentId: T:SuperOffice.CRM.Services.CRMScriptEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.CRMScriptEntity.html
  name: CRMScriptEntity
  nameWithType: CRMScriptEntity
  fullName: SuperOffice.CRM.Services.CRMScriptEntity
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_SaveCRMScriptEntity_SuperOffice_CRM_Services_CRMScriptEntity_
  name: SaveCRMScriptEntity
  nameWithType: ICRMScriptAgent.SaveCRMScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntity
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_DeleteCRMScriptEntity_System_Int32_
  name: DeleteCRMScriptEntity
  nameWithType: ICRMScriptAgent.DeleteCRMScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptEntity
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_CreateDefaultTriggerScriptEntity
  name: CreateDefaultTriggerScriptEntity
  nameWithType: ICRMScriptAgent.CreateDefaultTriggerScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.CreateDefaultTriggerScriptEntity
- uid: SuperOffice.CRM.Services.TriggerScriptEntity
  commentId: T:SuperOffice.CRM.Services.TriggerScriptEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TriggerScriptEntity.html
  name: TriggerScriptEntity
  nameWithType: TriggerScriptEntity
  fullName: SuperOffice.CRM.Services.TriggerScriptEntity
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_SaveTriggerScriptEntity_SuperOffice_CRM_Services_TriggerScriptEntity_
  name: SaveTriggerScriptEntity
  nameWithType: ICRMScriptAgent.SaveTriggerScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptEntity
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_DeleteTriggerScriptEntity_System_Int32_
  name: DeleteTriggerScriptEntity
  nameWithType: ICRMScriptAgent.DeleteTriggerScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptEntity
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_GetCRMScriptByUniqueIdentifier_System_String_
  name: GetCRMScriptByUniqueIdentifier
  nameWithType: ICRMScriptAgent.GetCRMScriptByUniqueIdentifier
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptByUniqueIdentifier
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Services.Script
  commentId: T:SuperOffice.CRM.Services.Script
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.Script.html
  name: Script
  nameWithType: Script
  fullName: SuperOffice.CRM.Services.Script
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_SaveCRMScriptByUniqueIdentifier_System_String_SuperOffice_CRM_Services_Script_
  name: SaveCRMScriptByUniqueIdentifier
  nameWithType: ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptByUniqueIdentifier
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_DeleteCRMScriptByUniqueIdentifier_System_String_
  name: DeleteCRMScriptByUniqueIdentifier
  nameWithType: ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteCRMScriptByUniqueIdentifier
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_GetCRMScriptEntity_System_Int32_
  name: GetCRMScriptEntity
  nameWithType: ICRMScriptAgent.GetCRMScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetCRMScriptEntity
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_SaveCRMScriptEntityWithoutCompile_SuperOffice_CRM_Services_CRMScriptEntity_
  name: SaveCRMScriptEntityWithoutCompile
  nameWithType: ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveCRMScriptEntityWithoutCompile
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ExecuteScript_System_Int32_SuperOffice_CRM_Services_StringDictionary_
  name: ExecuteScript
  nameWithType: ICRMScriptAgent.ExecuteScript
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScript
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ExecuteScriptByIncludeId_System_String_SuperOffice_CRM_Services_StringDictionary_
  name: ExecuteScriptByIncludeId
  nameWithType: ICRMScriptAgent.ExecuteScriptByIncludeId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByIncludeId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ExecuteScriptByUniqueId_System_String_SuperOffice_CRM_Services_StringDictionary_
  name: ExecuteScriptByUniqueId
  nameWithType: ICRMScriptAgent.ExecuteScriptByUniqueId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByUniqueId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ExecuteScriptAsEvent_System_Int32_SuperOffice_CRM_Services_EventData_
  name: ExecuteScriptAsEvent
  nameWithType: ICRMScriptAgent.ExecuteScriptAsEvent
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEvent
- uid: SuperOffice.CRM.Services.EventData
  commentId: T:SuperOffice.CRM.Services.EventData
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.EventData.html
  name: EventData
  nameWithType: EventData
  fullName: SuperOffice.CRM.Services.EventData
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ExecuteScriptAsEventByUniqueId_System_String_SuperOffice_CRM_Services_EventData_
  name: ExecuteScriptAsEventByUniqueId
  nameWithType: ICRMScriptAgent.ExecuteScriptAsEventByUniqueId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptAsEventByUniqueId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ValidateScript_System_Int32_
  name: ValidateScript
  nameWithType: ICRMScriptAgent.ValidateScript
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScript
- uid: SuperOffice.CRM.Services.CRMScriptResult
  commentId: T:SuperOffice.CRM.Services.CRMScriptResult
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.CRMScriptResult.html
  name: CRMScriptResult
  nameWithType: CRMScriptResult
  fullName: SuperOffice.CRM.Services.CRMScriptResult
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ValidateScriptByIncludeId_System_String_
  name: ValidateScriptByIncludeId
  nameWithType: ICRMScriptAgent.ValidateScriptByIncludeId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByIncludeId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ValidateScriptByUniqueId_System_String_
  name: ValidateScriptByUniqueId
  nameWithType: ICRMScriptAgent.ValidateScriptByUniqueId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByUniqueId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ExecuteScriptByString_System_String_SuperOffice_CRM_Services_StringDictionary_SuperOffice_CRM_Services_EventData_
  name: ExecuteScriptByString
  nameWithType: ICRMScriptAgent.ExecuteScriptByString
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ExecuteScriptByString
- uid: SuperOffice.CRM.Services.CRMScriptRunResult
  commentId: T:SuperOffice.CRM.Services.CRMScriptRunResult
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.CRMScriptRunResult.html
  name: CRMScriptRunResult
  nameWithType: CRMScriptRunResult
  fullName: SuperOffice.CRM.Services.CRMScriptRunResult
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ValidateScriptByString_System_String_
  name: ValidateScriptByString
  nameWithType: ICRMScriptAgent.ValidateScriptByString
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateScriptByString
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ResolveIncludes_System_String_System_Boolean_
  name: ResolveIncludes
  nameWithType: ICRMScriptAgent.ResolveIncludes
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ResolveIncludes
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_GetTriggerScriptEntity_System_Int32_
  name: GetTriggerScriptEntity
  nameWithType: ICRMScriptAgent.GetTriggerScriptEntity
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptEntity
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_GetTriggerScriptByUniqueId_System_String_
  name: GetTriggerScriptByUniqueId
  nameWithType: ICRMScriptAgent.GetTriggerScriptByUniqueId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.GetTriggerScriptByUniqueId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_SaveTriggerScriptByUniqueId_System_String_SuperOffice_CRM_Services_TriggerScriptEntity_
  name: SaveTriggerScriptByUniqueId
  nameWithType: ICRMScriptAgent.SaveTriggerScriptByUniqueId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.SaveTriggerScriptByUniqueId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_DeleteTriggerScriptByUniqueId_System_String_
  name: DeleteTriggerScriptByUniqueId
  nameWithType: ICRMScriptAgent.DeleteTriggerScriptByUniqueId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.DeleteTriggerScriptByUniqueId
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ValidateTriggerScript_System_Int32_
  name: ValidateTriggerScript
  nameWithType: ICRMScriptAgent.ValidateTriggerScript
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScript
- uid: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId*
  commentId: Overload:SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId
  isExternal: true
  href: SuperOffice.CRM.Services.ICRMScriptAgent.html#SuperOffice_CRM_Services_ICRMScriptAgent_ValidateTriggerScriptByUniqueId_System_String_
  name: ValidateTriggerScriptByUniqueId
  nameWithType: ICRMScriptAgent.ValidateTriggerScriptByUniqueId
  fullName: SuperOffice.CRM.Services.ICRMScriptAgent.ValidateTriggerScriptByUniqueId
