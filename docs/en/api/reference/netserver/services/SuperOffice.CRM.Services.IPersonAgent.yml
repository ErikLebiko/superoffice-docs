### YamlMime:ManagedReference
items:
- uid: SuperOffice.CRM.Services.IPersonAgent
  commentId: T:SuperOffice.CRM.Services.IPersonAgent
  id: IPersonAgent
  parent: SuperOffice.CRM.Services
  children:
  - SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
  - SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  - SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  - SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
  - SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage
  - SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate(System.Int32,System.String,System.Boolean)
  - SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  - SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
  - SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetColleagues
  - SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
  - SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
  - SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonImages(System.Int32[],System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  - SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  - SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  - SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  - SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  - SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.SendEmail(System.String,System.String,System.String,System.String,System.String,System.Int32[])
  - SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String)
  - SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  - SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  - SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
  - SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow(System.Int32,System.Int32[])
  - SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
  - SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  langs:
  - csharp
  - vb
  name: IPersonAgent
  nameWithType: IPersonAgent
  fullName: SuperOffice.CRM.Services.IPersonAgent
  type: Interface
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Interface for the Person Agent

    Person data services.
  example:
  - >-
    <pre><code class="lang-csharp">using SuperOffice;

    using SuperOffice.CRM.Services;


    using (SoSession mySession = SoSession.Authenticate("user", "pass"))

    {
       using (PersonAgent agent = new PersonAgent())
       {
          // call methods on agent here...
       }
    }</code></pre>
  syntax:
    content: >-
      [Agent("Person Agent", "Interface for the Person Agent. Person data services.")]

      public interface IPersonAgent : IAgent
    content.vb: >-
      <Agent("Person Agent", "Interface for the Person Agent. Person data services.")>

      Public Interface IPersonAgent Inherits IAgent
  attributes:
  - type: SuperOffice.CRM.Services.Reflection.AgentAttribute
    ctor: SuperOffice.CRM.Services.Reflection.AgentAttribute.#ctor(System.String,System.String)
    arguments:
    - type: System.String
      value: Person Agent
    - type: System.String
      value: Interface for the Person Agent. Person data services.
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
  id: CreateDefaultConsentPerson
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultConsentPerson()
  nameWithType: IPersonAgent.CreateDefaultConsentPerson()
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new ConsentPerson.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: ConsentPerson CreateDefaultConsentPerson()
    return:
      type: SuperOffice.CRM.Services.ConsentPerson
      description: New ConsentPerson with default values
    content.vb: Function CreateDefaultConsentPerson() As ConsentPerson
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson*
- uid: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  id: SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SaveConsentPerson(ConsentPerson)
  nameWithType: IPersonAgent.SaveConsentPerson(ConsentPerson)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson(SuperOffice.CRM.Services.ConsentPerson)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing ConsentPerson or creates a new ConsentPerson if the id parameter is empty
  example: []
  syntax:
    content: ConsentPerson SaveConsentPerson(ConsentPerson consentPerson)
    parameters:
    - id: consentPerson
      type: SuperOffice.CRM.Services.ConsentPerson
      description: The ConsentPerson that is saved.
    return:
      type: SuperOffice.CRM.Services.ConsentPerson
      description: New or updated ConsentPerson
    content.vb: Function SaveConsentPerson(consentPerson As ConsentPerson) As ConsentPerson
  overload: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson*
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(System.Int32)
  id: DeleteConsentPerson(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeleteConsentPerson(int)
  nameWithType: IPersonAgent.DeleteConsentPerson(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes the ConsentPerson
  example: []
  syntax:
    content: void DeleteConsentPerson(int consentPersonId)
    parameters:
    - id: consentPersonId
      type: System.Int32
      description: The identity of the ConsentPerson
    content.vb: Sub DeleteConsentPerson(consentPersonId As Integer)
  overload: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson*
  nameWithType.vb: IPersonAgent.DeleteConsentPerson(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson(Integer)
  name.vb: DeleteConsentPerson(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
  id: CreateDefaultPersonEntity
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultPersonEntity()
  nameWithType: IPersonAgent.CreateDefaultPersonEntity()
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new PersonEntity.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: PersonEntity CreateDefaultPersonEntity()
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: New PersonEntity with default values
    content.vb: Function CreateDefaultPersonEntity() As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity*
- uid: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  id: SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SavePersonEntity(PersonEntity)
  nameWithType: IPersonAgent.SavePersonEntity(PersonEntity)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Updates the existing PersonEntity or creates a new PersonEntity if the id parameter is empty
  example: []
  syntax:
    content: PersonEntity SavePersonEntity(PersonEntity personEntity)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity that is saved.
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: New or updated PersonEntity
    content.vb: Function SavePersonEntity(personEntity As PersonEntity) As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity*
- uid: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(System.Int32)
  id: DeletePersonEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeletePersonEntity(int)
  nameWithType: IPersonAgent.DeletePersonEntity(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Deletes the PersonEntity
  example: []
  syntax:
    content: void DeletePersonEntity(int personEntityId)
    parameters:
    - id: personEntityId
      type: System.Int32
      description: The identity of the PersonEntity
    content.vb: Sub DeletePersonEntity(personEntityId As Integer)
  overload: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity*
  nameWithType.vb: IPersonAgent.DeletePersonEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity(Integer)
  name.vb: DeletePersonEntity(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage
  id: CreateDefaultPersonImage
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultPersonImage()
  nameWithType: IPersonAgent.CreateDefaultPersonImage()
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: >-
    Loading default values into a new PersonImage.

    NetServer calculates default values (e.g. Country) on the entity, which is required when creating/storing a new instance
  example: []
  syntax:
    content: PersonImage CreateDefaultPersonImage()
    return:
      type: SuperOffice.CRM.Services.PersonImage
      description: New PersonImage with default values
    content.vb: Function CreateDefaultPersonImage() As PersonImage
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(System.Int32)
  id: GetConsentPerson(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetConsentPerson(int)
  nameWithType: IPersonAgent.GetConsentPerson(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a ConsentPerson object.
  example: []
  syntax:
    content: ConsentPerson GetConsentPerson(int consentPersonId)
    parameters:
    - id: consentPersonId
      type: System.Int32
      description: The identifier of the ConsentPerson object
    return:
      type: SuperOffice.CRM.Services.ConsentPerson
      description: ConsentPerson
    content.vb: Function GetConsentPerson(consentPersonId As Integer) As ConsentPerson
  overload: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson*
  nameWithType.vb: IPersonAgent.GetConsentPerson(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson(Integer)
  name.vb: GetConsentPerson(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPerson(System.Int32)
  id: GetPerson(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPerson(int)
  nameWithType: IPersonAgent.GetPerson(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPerson(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a Person object.
  example: []
  syntax:
    content: Person GetPerson(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The identifier of the Person object
    return:
      type: SuperOffice.CRM.Services.Person
      description: Person
    content.vb: Function GetPerson(personId As Integer) As Person
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPerson*
  nameWithType.vb: IPersonAgent.GetPerson(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPerson(Integer)
  name.vb: GetPerson(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow(System.Int32,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow(System.Int32,System.Int32[])
  id: TryAddPersonsToEmailFlow(System.Int32,System.Int32[])
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: TryAddPersonsToEmailFlow(int, int[])
  nameWithType: IPersonAgent.TryAddPersonsToEmailFlow(int, int[])
  fullName: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow(int, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Try to add a participant to the EmailFlow, Same function available in WorkflowAgent
  example: []
  syntax:
    content: bool[] TryAddPersonsToEmailFlow(int emailFlowId, int[] personIds)
    parameters:
    - id: emailFlowId
      type: System.Int32
      description: Primary key of EmailFlow
    - id: personIds
      type: System.Int32[]
      description: Array of Person Ids
    return:
      type: System.Boolean[]
      description: True if the corresponding participant was successfully added, false if it could not be added because of filter criteria or other reason
    content.vb: Function TryAddPersonsToEmailFlow(emailFlowId As Integer, personIds As Integer()) As Boolean()
  overload: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow*
  nameWithType.vb: IPersonAgent.TryAddPersonsToEmailFlow(Integer, Integer())
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow(Integer, Integer())
  name.vb: TryAddPersonsToEmailFlow(Integer, Integer())
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(System.Int32)
  id: GetPersonEntity(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonEntity(int)
  nameWithType: IPersonAgent.GetPersonEntity(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a PersonEntity object.
  example: []
  syntax:
    content: PersonEntity GetPersonEntity(int personEntityId)
    parameters:
    - id: personEntityId
      type: System.Int32
      description: The identifier of the PersonEntity object
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: PersonEntity
    content.vb: Function GetPersonEntity(personEntityId As Integer) As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity*
  nameWithType.vb: IPersonAgent.GetPersonEntity(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity(Integer)
  name.vb: GetPersonEntity(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.Undelete(System.Int32)
  id: Undelete(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: Undelete(int)
  nameWithType: IPersonAgent.Undelete(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.Undelete(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: This entity supports Soft Delete. Call this method to Undelete a previously soft-deleted record
  example: []
  syntax:
    content: void Undelete(int id)
    parameters:
    - id: id
      type: System.Int32
      description: The primary key of the entity to undelete
    content.vb: Sub Undelete(id As Integer)
  overload: SuperOffice.CRM.Services.IPersonAgent.Undelete*
  nameWithType.vb: IPersonAgent.Undelete(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.Undelete(Integer)
  name.vb: Undelete(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
  id: GetMyPerson
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetMyPerson()
  nameWithType: IPersonAgent.GetMyPerson()
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the person info belonging to the currently logged on user.
  example: []
  syntax:
    content: PersonEntity GetMyPerson()
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity
    content.vb: Function GetMyPerson() As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  id: GetSalesRep(System.String,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetSalesRep(string, string, string, string, string)
  nameWithType: IPersonAgent.GetSalesRep(string, string, string, string, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(string, string, string, string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns the sales representative for an external user. If this method is accessed with anonymous authentication the external user is recognized by contact and name, or by email, or phone number. If the external user is recognized as an CRM5 user (internal or external) the input fields can be left blank.
  example: []
  syntax:
    content: PersonEntity GetSalesRep(string contactName, string personFirstname, string personLastname, string emailAddress, string phoneNumber)
    parameters:
    - id: contactName
      type: System.String
      description: The company name of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: personFirstname
      type: System.String
      description: The firstname of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: personLastname
      type: System.String
      description: The lastname of the person requesting his sales representative. May be empty if email or phone is provided.
    - id: emailAddress
      type: System.String
      description: The email address of the person requesting his sales representative. May be empty if phone, or contact and person name is provided.
    - id: phoneNumber
      type: System.String
      description: The phone number of the person requesting his sales representative. May be empty if email, or contact and person name is provided.
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity of the sales rep.
    content.vb: Function GetSalesRep(contactName As String, personFirstname As String, personLastname As String, emailAddress As String, phoneNumber As String) As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep*
  nameWithType.vb: IPersonAgent.GetSalesRep(String, String, String, String, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep(String, String, String, String, String)
  name.vb: GetSalesRep(String, String, String, String, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPhones(System.Int32)
  id: GetPhones(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPhones(int)
  nameWithType: IPersonAgent.GetPhones(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPhones(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returning all phones that belong to a person, ordered by the phone type.
  example: []
  syntax:
    content: EntityElement[] GetPhones(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    return:
      type: SuperOffice.CRM.Services.EntityElement[]
      description: An array of Phones
    content.vb: Function GetPhones(personId As Integer) As EntityElement()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPhones*
  nameWithType.vb: IPersonAgent.GetPhones(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPhones(Integer)
  name.vb: GetPhones(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  id: ChangeCountry(SuperOffice.CRM.Services.PersonEntity,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ChangeCountry(PersonEntity, int)
  nameWithType: IPersonAgent.ChangeCountry(PersonEntity, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Change country regenerates the default values and localized information such as phone number and address format for this entity.
  example: []
  syntax:
    content: PersonEntity ChangeCountry(PersonEntity personEntity, int toCountryId)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity to change country on
    - id: toCountryId
      type: System.Int32
      description: The country to switch to
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: The PersonEntity
    content.vb: Function ChangeCountry(personEntity As PersonEntity, toCountryId As Integer) As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry*
  nameWithType.vb: IPersonAgent.ChangeCountry(PersonEntity, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry(SuperOffice.CRM.Services.PersonEntity, Integer)
  name.vb: ChangeCountry(PersonEntity, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetAddress(System.Int32)
  id: GetAddress(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetAddress(int)
  nameWithType: IPersonAgent.GetAddress(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddress(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the person's localized address.
  example: []
  syntax:
    content: Address GetAddress(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    return:
      type: SuperOffice.CRM.Services.Address
      description: The address as LocalizedField[][].
    content.vb: Function GetAddress(personId As Integer) As Address
  overload: SuperOffice.CRM.Services.IPersonAgent.GetAddress*
  nameWithType.vb: IPersonAgent.GetAddress(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetAddress(Integer)
  name.vb: GetAddress(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(System.Int32,System.Int32)
  id: GetAddressByCountry(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetAddressByCountry(int, int)
  nameWithType: IPersonAgent.GetAddressByCountry(int, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the person's localized address.
  example: []
  syntax:
    content: Address GetAddressByCountry(int personId, int countryId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: countryId
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.Address
      description: The address as LocalizedField[][].
    content.vb: Function GetAddressByCountry(personId As Integer, countryId As Integer) As Address
  overload: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry*
  nameWithType.vb: IPersonAgent.GetAddressByCountry(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry(Integer, Integer)
  name.vb: GetAddressByCountry(Integer, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(System.Int32)
  id: GetPersonImage(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonImage(int)
  nameWithType: IPersonAgent.GetPersonImage(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns the person image that is displayed in the CRM application.
  example: []
  syntax:
    content: Image GetPersonImage(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    return:
      type: System.Drawing.Image
      description: The image as a System.Drawing.Image. (If the the image is returned over webservices, the stream is returned as a Base64 encoded string.)
    content.vb: Function GetPersonImage(personId As Integer) As Image
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage*
  nameWithType.vb: IPersonAgent.GetPersonImage(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage(Integer)
  name.vb: GetPersonImage(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(System.Int32,System.Drawing.Image)
  id: SetPersonImage(System.Int32,System.Drawing.Image)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SetPersonImage(int, Image)
  nameWithType: IPersonAgent.SetPersonImage(int, Image)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(int, System.Drawing.Image)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Stores the person image that is displayed in the CRM application.
  example: []
  syntax:
    content: void SetPersonImage(int personId, Image image)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id of the person the image belongs to.
    - id: image
      type: System.Drawing.Image
      description: The image that is stored on the person (System.Drawing.Image)
    content.vb: Sub SetPersonImage(personId As Integer, image As Image)
  overload: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage*
  nameWithType.vb: IPersonAgent.SetPersonImage(Integer, Image)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage(Integer, System.Drawing.Image)
  name.vb: SetPersonImage(Integer, Image)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(System.Int32)
  id: CreateDefaultByContactId(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultByContactId(int)
  nameWithType: IPersonAgent.CreateDefaultByContactId(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a PersonEntity with default values based on the contactId.
  example: []
  syntax:
    content: PersonEntity CreateDefaultByContactId(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: ''
    content.vb: Function CreateDefaultByContactId(contactId As Integer) As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId*
  nameWithType.vb: IPersonAgent.CreateDefaultByContactId(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId(Integer)
  name.vb: CreateDefaultByContactId(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.Move(System.Int32,System.Int32,System.DateTime)
  id: Move(System.Int32,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: Move(int, int, DateTime)
  nameWithType: IPersonAgent.Move(int, int, DateTime)
  fullName: SuperOffice.CRM.Services.IPersonAgent.Move(int, int, System.DateTime)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Move a person to a specified contact. You must specify the date after which activities will be moved along with the person.
  example: []
  syntax:
    content: void Move(int personId, int destinationContactId, DateTime moveAfterDate)
    parameters:
    - id: personId
      type: System.Int32
      description: The identifier for the person
    - id: destinationContactId
      type: System.Int32
      description: The identifier for the contact which the person will be moved to
    - id: moveAfterDate
      type: System.DateTime
      description: Move activites after this date. Activities before this date are left alone.
    content.vb: Sub Move(personId As Integer, destinationContactId As Integer, moveAfterDate As Date)
  overload: SuperOffice.CRM.Services.IPersonAgent.Move*
  nameWithType.vb: IPersonAgent.Move(Integer, Integer, Date)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.Move(Integer, Integer, Date)
  name.vb: Move(Integer, Integer, Date)
- uid: SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  id: Merge(System.Int32,System.Int32,System.DateTime,System.Boolean,System.Boolean)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: Merge(int, int, DateTime, bool, bool)
  nameWithType: IPersonAgent.Merge(int, int, DateTime, bool, bool)
  fullName: SuperOffice.CRM.Services.IPersonAgent.Merge(int, int, System.DateTime, bool, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Merge two persons. The destination person will remain. You must specify the date after which activities will be moved along with the person.
  example: []
  syntax:
    content: void Merge(int sourcePersonId, int destinationPersonId, DateTime moveAfterDate, bool deleteSource, bool replaceEmptyFieldsOnDestination)
    parameters:
    - id: sourcePersonId
      type: System.Int32
      description: The identifier for the person which will be merged into the destination person. The source person is deleted/marked retired after the merge.
    - id: destinationPersonId
      type: System.Int32
      description: The identifier for the person which will remain after the merge. The target person is updated.
    - id: moveAfterDate
      type: System.DateTime
      description: Merge activites after this date. Activities before this date are left alone.
    - id: deleteSource
      type: System.Boolean
      description: If true, the source person will be deleted after the merge. If false, it will have its retired flag set
    - id: replaceEmptyFieldsOnDestination
      type: System.Boolean
      description: If true, empty fields on destination will be replaced by values from source.
    content.vb: Sub Merge(sourcePersonId As Integer, destinationPersonId As Integer, moveAfterDate As Date, deleteSource As Boolean, replaceEmptyFieldsOnDestination As Boolean)
  overload: SuperOffice.CRM.Services.IPersonAgent.Merge*
  nameWithType.vb: IPersonAgent.Merge(Integer, Integer, Date, Boolean, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.Merge(Integer, Integer, Date, Boolean, Boolean)
  name.vb: Merge(Integer, Integer, Date, Boolean, Boolean)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  id: CreateDefaultFromCredential(System.Int32,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateDefaultFromCredential(int, string, string, string)
  nameWithType: IPersonAgent.CreateDefaultFromCredential(int, string, string, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(int, string, string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a PersonEntity with default values based on the contactId and credentials.
  example: []
  syntax:
    content: PersonEntity CreateDefaultFromCredential(int contactId, string credentialType, string credentialValue, string credentialDisplayValue)
    parameters:
    - id: contactId
      type: System.Int32
      description: Contact id of the person
    - id: credentialType
      type: System.String
      description: Type of credentials, corresponding to name of plugin and type in the credentials table.
    - id: credentialValue
      type: System.String
      description: This is the actuall value of the credentials.  This will typically be the password or teh users SID in active directory
    - id: credentialDisplayValue
      type: System.String
      description: The value displayed to the user. this will typically be the users login name in active directory.
    return:
      type: SuperOffice.CRM.Services.PersonEntity
      description: ''
    content.vb: Function CreateDefaultFromCredential(contactId As Integer, credentialType As String, credentialValue As String, credentialDisplayValue As String) As PersonEntity
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential*
  nameWithType.vb: IPersonAgent.CreateDefaultFromCredential(Integer, String, String, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential(Integer, String, String, String)
  name.vb: CreateDefaultFromCredential(Integer, String, String, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(System.Int32,System.String)
  id: IsNumberValid(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: IsNumberValid(int, string)
  nameWithType: IPersonAgent.IsNumberValid(int, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Checks if the number is unique or required.  The setting is configured from admin under system options.
  example: []
  syntax:
    content: bool IsNumberValid(int contactId, string number)
    parameters:
    - id: contactId
      type: System.Int32
      description: ''
    - id: number
      type: System.String
      description: Number to check.
    return:
      type: System.Boolean
      description: True if number is ok (passes uniqueness/required checks)
    content.vb: Function IsNumberValid(contactId As Integer, number As String) As Boolean
  overload: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid*
  nameWithType.vb: IPersonAgent.IsNumberValid(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid(Integer, String)
  name.vb: IsNumberValid(Integer, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  id: SetConsent(System.Int32,System.String,System.String,System.String,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SetConsent(int, string, string, string, string)
  nameWithType: IPersonAgent.SetConsent(int, string, string, string, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetConsent(int, string, string, string, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Set a specified type of consent on the person.
  example: []
  syntax:
    content: void SetConsent(int personId, string purpose, string source, string legalBase, string comment)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The Key of the purpose this affects. e.g. 'STORE' or 'EMARKETING'.
    - id: source
      type: System.String
      description: The Key of the source of this consent. e.g. 'USER', 'WEBFORM' or 'API'.
    - id: legalBase
      type: System.String
      description: The Key of the legal base for this consent. e.g. '61A', '61B', '61F'
    - id: comment
      type: System.String
      description: A comment regarding this consent. May be null or empty.
    content.vb: Sub SetConsent(personId As Integer, purpose As String, source As String, legalBase As String, comment As String)
  overload: SuperOffice.CRM.Services.IPersonAgent.SetConsent*
  nameWithType.vb: IPersonAgent.SetConsent(Integer, String, String, String, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SetConsent(Integer, String, String, String, String)
  name.vb: SetConsent(Integer, String, String, String, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(System.Int32,System.String)
  id: RemoveConsent(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: RemoveConsent(int, string)
  nameWithType: IPersonAgent.RemoveConsent(int, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Turn off consent for a specified person and purpose.
  example: []
  syntax:
    content: void RemoveConsent(int personId, string purpose)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The key of the purpose to remove. (e.g. 'STORE' or 'EMARKETING')
    content.vb: Sub RemoveConsent(personId As Integer, purpose As String)
  overload: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent*
  nameWithType.vb: IPersonAgent.RemoveConsent(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent(Integer, String)
  name.vb: RemoveConsent(Integer, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.HasConsent(System.Int32,System.String)
  id: HasConsent(System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: HasConsent(int, string)
  nameWithType: IPersonAgent.HasConsent(int, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.HasConsent(int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check if consent has been given by a specified person, for a specific purpose. Withdraw consents return FALSE.
  example: []
  syntax:
    content: bool HasConsent(int personId, string purpose)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: purpose
      type: System.String
      description: The key of the purpose to check. (e.g. 'STORE' or 'EMARKETING')
    return:
      type: System.Boolean
      description: True if the person has consented to the given purpose.
    content.vb: Function HasConsent(personId As Integer, purpose As String) As Boolean
  overload: SuperOffice.CRM.Services.IPersonAgent.HasConsent*
  nameWithType.vb: IPersonAgent.HasConsent(Integer, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.HasConsent(Integer, String)
  name.vb: HasConsent(Integer, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(System.Int32)
  id: GetConsentInfos(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetConsentInfos(int)
  nameWithType: IPersonAgent.GetConsentInfos(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get all consent information for a given person. May include withdrawn consents (check
  example: []
  syntax:
    content: ConsentInfo[] GetConsentInfos(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id to get consents for
    return:
      type: SuperOffice.CRM.Services.ConsentInfo[]
      description: List of consents recorded on this person
    content.vb: Function GetConsentInfos(personId As Integer) As ConsentInfo()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos*
  nameWithType.vb: IPersonAgent.GetConsentInfos(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos(Integer)
  name.vb: GetConsentInfos(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  id: SendConsentConfirmationEmail(System.Int32,System.String,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SendConsentConfirmationEmail(int, string, int, int, string)
  nameWithType: IPersonAgent.SendConsentConfirmationEmail(int, string, int, int, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(int, string, int, int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Send confirmation email to the provided person, email address (id), using the document template
  example: []
  syntax:
    content: void SendConsentConfirmationEmail(int personId, string emailAddress, int emailTemplateId, int cultureLcidId, string subject)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id
    - id: emailAddress
      type: System.String
      description: The email address to send to.
    - id: emailTemplateId
      type: System.Int32
      description: The id of the email template (doctmpl_id)
    - id: cultureLcidId
      type: System.Int32
      description: The id of the culture (LCID)
    - id: subject
      type: System.String
      description: Optional email subject
    content.vb: Sub SendConsentConfirmationEmail(personId As Integer, emailAddress As String, emailTemplateId As Integer, cultureLcidId As Integer, subject As String)
  overload: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail*
  nameWithType.vb: IPersonAgent.SendConsentConfirmationEmail(Integer, String, Integer, Integer, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail(Integer, String, Integer, Integer, String)
  name.vb: SendConsentConfirmationEmail(Integer, String, Integer, Integer, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  id: ResolvePersonFromInfo(System.Int32,System.String,System.String[],System.String[])
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ResolvePersonFromInfo(int, string, string[], string[])
  nameWithType: IPersonAgent.ResolvePersonFromInfo(int, string, string[], string[])
  fullName: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(int, string, string[], string[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get a person from the provided information. If the person does not exist, it will be created on demand.
  example: []
  syntax:
    content: ResolvedPerson ResolvePersonFromInfo(int contactId, string personName, string[] phoneNumbers, string[] emails)
    parameters:
    - id: contactId
      type: System.Int32
      description: The contact Id of the contact which the person belongs to. Cannot be 0.
    - id: personName
      type: System.String
      description: The full name of the person to be resolved. Optional.
    - id: phoneNumbers
      type: System.String[]
      description: Phone numbers registered on the person. Optional.
    - id: emails
      type: System.String[]
      description: Email-addresses registered on the person. Optional.
    return:
      type: SuperOffice.CRM.Services.ResolvedPerson
      description: The results of the resolve-operation.
    content.vb: Function ResolvePersonFromInfo(contactId As Integer, personName As String, phoneNumbers As String(), emails As String()) As ResolvedPerson
  overload: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo*
  nameWithType.vb: IPersonAgent.ResolvePersonFromInfo(Integer, String, String(), String())
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo(Integer, String, String(), String())
  name.vb: ResolvePersonFromInfo(Integer, String, String(), String())
- uid: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  id: AddEmailAddressToPerson(System.Int32,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddEmailAddressToPerson(int, string, bool)
  nameWithType: IPersonAgent.AddEmailAddressToPerson(int, string, bool)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(int, string, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Sets the primary email address on person, possibly re-ranking email addresses accordingly.
  example: []
  syntax:
    content: void AddEmailAddressToPerson(int personId, string emailAddress, bool setAsPrimaryEmail)
    parameters:
    - id: personId
      type: System.Int32
      description: Person id of the person
    - id: emailAddress
      type: System.String
      description: The email address to set as primary email address
    - id: setAsPrimaryEmail
      type: System.Boolean
      description: True if the address shall be primary email address (have rank == 1)
    content.vb: Sub AddEmailAddressToPerson(personId As Integer, emailAddress As String, setAsPrimaryEmail As Boolean)
  overload: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson*
  nameWithType.vb: IPersonAgent.AddEmailAddressToPerson(Integer, String, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson(Integer, String, Boolean)
  name.vb: AddEmailAddressToPerson(Integer, String, Boolean)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  id: CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryKey(TemporaryKeyDomain, int, int, DateTime)
  nameWithType: IPersonAgent.CreateTemporaryKey(TemporaryKeyDomain, int, int, DateTime)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain, int, int, System.DateTime)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create a temporary key in the database from the given parameters and return the key string. Used for temporary keys for accessing customer centric functionality, such as UpdateSubscriptions.
  example: []
  syntax:
    content: string CreateTemporaryKey(TemporaryKeyDomain domain, int targetId, int personId, DateTime expires)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain this key is for
    - id: targetId
      type: System.Int32
      description: The primary key of the entity this is for. Depends on domain.
    - id: personId
      type: System.Int32
      description: The person this key is for. May be null.
    - id: expires
      type: System.DateTime
      description: When the key will expire (servers local time)
    return:
      type: System.String
      description: The key as base64, ready to be used e.g. in a URL
    content.vb: Function CreateTemporaryKey(domain As TemporaryKeyDomain, targetId As Integer, personId As Integer, expires As Date) As String
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey*
  nameWithType.vb: IPersonAgent.CreateTemporaryKey(TemporaryKeyDomain, Integer, Integer, Date)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey(SuperOffice.Data.TemporaryKeyDomain, Integer, Integer, Date)
  name.vb: CreateTemporaryKey(TemporaryKeyDomain, Integer, Integer, Date)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String)
  id: CreateTemporaryKeyWithPayload(SuperOffice.Data.TemporaryKeyDomain,System.Int32,System.Int32,System.DateTime,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateTemporaryKeyWithPayload(TemporaryKeyDomain, int, int, DateTime, string)
  nameWithType: IPersonAgent.CreateTemporaryKeyWithPayload(TemporaryKeyDomain, int, int, DateTime, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload(SuperOffice.Data.TemporaryKeyDomain, int, int, System.DateTime, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Create a temporary key in the database from the given parameters and return the key string. Used for temporary keys for accessing customer centric functionality, such as UpdateSubscriptions.
  example: []
  syntax:
    content: string CreateTemporaryKeyWithPayload(TemporaryKeyDomain domain, int targetId, int personId, DateTime expires, string payload)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain this key is for
    - id: targetId
      type: System.Int32
      description: The primary key of the entity this is for. Depends on domain.
    - id: personId
      type: System.Int32
      description: The person this key is for. May be null.
    - id: expires
      type: System.DateTime
      description: When the key will expire (servers local time)
    - id: payload
      type: System.String
      description: The payload for the temporary key
    return:
      type: System.String
      description: The key as base64, ready to be used e.g. in a URL
    content.vb: Function CreateTemporaryKeyWithPayload(domain As TemporaryKeyDomain, targetId As Integer, personId As Integer, expires As Date, payload As String) As String
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload*
  nameWithType.vb: IPersonAgent.CreateTemporaryKeyWithPayload(TemporaryKeyDomain, Integer, Integer, Date, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload(SuperOffice.Data.TemporaryKeyDomain, Integer, Integer, Date, String)
  name.vb: CreateTemporaryKeyWithPayload(TemporaryKeyDomain, Integer, Integer, Date, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(System.String)
  id: CheckTemporaryKey(System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CheckTemporaryKey(string)
  nameWithType: IPersonAgent.CheckTemporaryKey(string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check a temporary key for validity, and in case it is valid, return its domain, targetId and personId
  example: []
  syntax:
    content: TemporaryKeyInfo CheckTemporaryKey(string temporaryKey)
    parameters:
    - id: temporaryKey
      type: System.String
      description: The base64 encoded key value, as returned by CreateTemporaryKey
    return:
      type: SuperOffice.CRM.Services.TemporaryKeyInfo
      description: The info about the temporary key. Domain will be Unknown if key is not valid.
    content.vb: Function CheckTemporaryKey(temporaryKey As String) As TemporaryKeyInfo
  overload: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey*
  nameWithType.vb: IPersonAgent.CheckTemporaryKey(String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey(String)
  name.vb: CheckTemporaryKey(String)
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  id: DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, int)
  nameWithType: IPersonAgent.DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Delete all temporary keys for a given domain and person
  example: []
  syntax:
    content: void DeleteTemporaryKeysOfDomain(TemporaryKeyDomain domain, int personId)
    parameters:
    - id: domain
      type: SuperOffice.Data.TemporaryKeyDomain
      description: The domain type to delete
    - id: personId
      type: System.Int32
      description: The person for which to delete the keys
    content.vb: Sub DeleteTemporaryKeysOfDomain(domain As TemporaryKeyDomain, personId As Integer)
  overload: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain*
  nameWithType.vb: IPersonAgent.DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain(SuperOffice.Data.TemporaryKeyDomain, Integer)
  name.vb: DeleteTemporaryKeysOfDomain(TemporaryKeyDomain, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
  id: DeleteExpired
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: DeleteExpired()
  nameWithType: IPersonAgent.DeleteExpired()
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Trigger deletion of persons that has been (soft) deleted and have timed out the expiry period (the SoftDeleteRetention preference).
  example: []
  syntax:
    content: void DeleteExpired()
    content.vb: Sub DeleteExpired()
  overload: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(System.Int32,System.Int32)
  id: GetPersonSummary(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonSummary(int, int)
  nameWithType: IPersonAgent.GetPersonSummary(int, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get summary of person and recent activity.
  example: []
  syntax:
    content: PersonSummary GetPersonSummary(int personId, int limit)
    parameters:
    - id: personId
      type: System.Int32
      description: The person id to summarize.
    - id: limit
      type: System.Int32
      description: Max number of items to include in summary lists.
    return:
      type: SuperOffice.CRM.Services.PersonSummary
      description: Summary of person, with recent requests, sales, follow-ups, chats.
    content.vb: Function GetPersonSummary(personId As Integer, limit As Integer) As PersonSummary
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary*
  nameWithType.vb: IPersonAgent.GetPersonSummary(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary(Integer, Integer)
  name.vb: GetPersonSummary(Integer, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounce(System.String)
  id: AddBounce(System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddBounce(string)
  nameWithType: IPersonAgent.AddBounce(string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounce(string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Add a bounce count on the email address if it exists
  example: []
  syntax:
    content: void AddBounce(string emailAddress)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add a bounce count to
    content.vb: Sub AddBounce(emailAddress As String)
  overload: SuperOffice.CRM.Services.IPersonAgent.AddBounce*
  nameWithType.vb: IPersonAgent.AddBounce(String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.AddBounce(String)
  name.vb: AddBounce(String)
- uid: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  id: ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ValidatePersonEntity(PersonEntity)
  nameWithType: IPersonAgent.ValidatePersonEntity(PersonEntity)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity(SuperOffice.CRM.Services.PersonEntity)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Check that entity is ready for saving, return error messages by field.
  example: []
  syntax:
    content: StringDictionary ValidatePersonEntity(PersonEntity personEntity)
    parameters:
    - id: personEntity
      type: SuperOffice.CRM.Services.PersonEntity
      description: Entity to be checked for errors.
    return:
      type: SuperOffice.CRM.Services.StringDictionary
      description: Error messages tagged by field.
    content.vb: Function ValidatePersonEntity(personEntity As PersonEntity) As StringDictionary
  overload: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity*
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(System.String,System.Int32)
  id: AddBounceWithCount(System.String,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddBounceWithCount(string, int)
  nameWithType: IPersonAgent.AddBounceWithCount(string, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(string, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Add a number of bounce counts on the email address if it exists
  example: []
  syntax:
    content: void AddBounceWithCount(string emailAddress, int counts)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add bounce counts to
    - id: counts
      type: System.Int32
      description: The number of bounce counts to add
    content.vb: Sub AddBounceWithCount(emailAddress As String, counts As Integer)
  overload: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount*
  nameWithType.vb: IPersonAgent.AddBounceWithCount(String, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount(String, Integer)
  name.vb: AddBounceWithCount(String, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  id: GetBestSoLanguageForTemplate(System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetBestSoLanguageForTemplate(int, int)
  nameWithType: IPersonAgent.GetBestSoLanguageForTemplate(int, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the best language for this person on this template
  example: []
  syntax:
    content: string GetBestSoLanguageForTemplate(int personId, int templateId)
    parameters:
    - id: personId
      type: System.Int32
      description: The id of the person
    - id: templateId
      type: System.Int32
      description: The id of the template to find languages on
    return:
      type: System.String
      description: The solang code for best language, empty string if no best language found
    content.vb: Function GetBestSoLanguageForTemplate(personId As Integer, templateId As Integer) As String
  overload: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate*
  nameWithType.vb: IPersonAgent.GetBestSoLanguageForTemplate(Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate(Integer, Integer)
  name.vb: GetBestSoLanguageForTemplate(Integer, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  id: AddBounceWithDetails(System.String,System.Int32,System.Int32,System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: AddBounceWithDetails(string, int, int, string)
  nameWithType: IPersonAgent.AddBounceWithDetails(string, int, int, string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(string, int, int, string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Add a number of bounce counts on the email address if it exists, and with possible bounce code and reason
  example: []
  syntax:
    content: void AddBounceWithDetails(string emailAddress, int counts, int code, string reason)
    parameters:
    - id: emailAddress
      type: System.String
      description: The email address which we want to add bounce counts to
    - id: counts
      type: System.Int32
      description: The number of bounce counts to add
    - id: code
      type: System.Int32
      description: A numeric code representing the bounce reason
    - id: reason
      type: System.String
      description: A textual tag representing the bounce reason
    content.vb: Sub AddBounceWithDetails(emailAddress As String, counts As Integer, code As Integer, reason As String)
  overload: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails*
  nameWithType.vb: IPersonAgent.AddBounceWithDetails(String, Integer, Integer, String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails(String, Integer, Integer, String)
  name.vb: AddBounceWithDetails(String, Integer, Integer, String)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImages(System.Int32[],System.Int32,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonImages(System.Int32[],System.Int32,System.Int32)
  id: GetPersonImages(System.Int32[],System.Int32,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonImages(int[], int, int)
  nameWithType: IPersonAgent.GetPersonImages(int[], int, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImages(int[], int, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the image for a set of persons scaled to a specific size. Returned images are in PNG format.
  example: []
  syntax:
    content: PersonImage[] GetPersonImages(int[] personIds, int scaledWidth, int scaledHeight)
    parameters:
    - id: personIds
      type: System.Int32[]
      description: List of persons to get images for.
    - id: scaledWidth
      type: System.Int32
      description: Returned images are scaled to this width
    - id: scaledHeight
      type: System.Int32
      description: Returned images are scaled to this height
    return:
      type: SuperOffice.CRM.Services.PersonImage[]
      description: List of person images. Persons without an image are not present in this list.
    content.vb: Function GetPersonImages(personIds As Integer(), scaledWidth As Integer, scaledHeight As Integer) As PersonImage()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonImages*
  nameWithType.vb: IPersonAgent.GetPersonImages(Integer(), Integer, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonImages(Integer(), Integer, Integer)
  name.vb: GetPersonImages(Integer(), Integer, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate(System.Int32,System.String,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate(System.Int32,System.String,System.Boolean)
  id: CreateOrUpdateUserCandidate(System.Int32,System.String,System.Boolean)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: CreateOrUpdateUserCandidate(int, string, bool)
  nameWithType: IPersonAgent.CreateOrUpdateUserCandidate(int, string, bool)
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate(int, string, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Creates a Customer Centre User (UserCandidate) for a given Contact (personId) with the supplied parameters. If the Customer Centre User already exists for a given Contact, the user is updated with the supplied parameters.
  example: []
  syntax:
    content: UserCandidate CreateOrUpdateUserCandidate(int personId, string username, bool accessAllRequests)
    parameters:
    - id: personId
      type: System.Int32
      description: Person to create UserCandidate for.
    - id: username
      type: System.String
      description: Desired username. Username must be unique. If the username is not unique, method will throw an error.
    - id: accessAllRequests
      type: System.Boolean
      description: Determines if Custom Center User has access to all requests created for all Contacts in the company.
    return:
      type: SuperOffice.CRM.Services.UserCandidate
      description: UserCandidate created or updated.
    content.vb: Function CreateOrUpdateUserCandidate(personId As Integer, username As String, accessAllRequests As Boolean) As UserCandidate
  overload: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate*
  nameWithType.vb: IPersonAgent.CreateOrUpdateUserCandidate(Integer, String, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate(Integer, String, Boolean)
  name.vb: CreateOrUpdateUserCandidate(Integer, String, Boolean)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson(System.Int32)
  id: GetUserCandidateByPerson(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetUserCandidateByPerson(int)
  nameWithType: IPersonAgent.GetUserCandidateByPerson(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets user candidate linked to a person.
  example: []
  syntax:
    content: UserCandidate GetUserCandidateByPerson(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: Person related to requested UserCandidate.
    return:
      type: SuperOffice.CRM.Services.UserCandidate
      description: UserCandidate linked to a person.
    content.vb: Function GetUserCandidateByPerson(personId As Integer) As UserCandidate
  overload: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson*
  nameWithType.vb: IPersonAgent.GetUserCandidateByPerson(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson(Integer)
  name.vb: GetUserCandidateByPerson(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate(System.Int32)
  id: GetCustomerCentrePasswordReplyTemplate(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetCustomerCentrePasswordReplyTemplate(int)
  nameWithType: IPersonAgent.GetCustomerCentrePasswordReplyTemplate(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets a parsed Customer Centre password reply template for a particular customer
  example: []
  syntax:
    content: ReplyTemplateParsed GetCustomerCentrePasswordReplyTemplate(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: Person/customer id to get the template for.
    return:
      type: SuperOffice.CRM.Services.ReplyTemplateParsed
      description: A parsed Customer Centre password reply template.
    content.vb: Function GetCustomerCentrePasswordReplyTemplate(personId As Integer) As ReplyTemplateParsed
  overload: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate*
  nameWithType.vb: IPersonAgent.GetCustomerCentrePasswordReplyTemplate(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate(Integer)
  name.vb: GetCustomerCentrePasswordReplyTemplate(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmail(System.String,System.String,System.String,System.String,System.String,System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendEmail(System.String,System.String,System.String,System.String,System.String,System.Int32[])
  id: SendEmail(System.String,System.String,System.String,System.String,System.String,System.Int32[])
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SendEmail(string, string, string, string, string, int[])
  nameWithType: IPersonAgent.SendEmail(string, string, string, string, string, int[])
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmail(string, string, string, string, string, int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Inserts into outbox an email with specified details.
  example: []
  syntax:
    content: void SendEmail(string from, string to, string subject, string plainBody, string htmlBody, int[] attachmentIds)
    parameters:
    - id: from
      type: System.String
      description: Sender's email address.
    - id: to
      type: System.String
      description: Recipient's email address.
    - id: subject
      type: System.String
      description: Email's subject.
    - id: plainBody
      type: System.String
      description: Email's plain body.
    - id: htmlBody
      type: System.String
      description: Email's html body.
    - id: attachmentIds
      type: System.Int32[]
      description: Ids of email's attachments.
    content.vb: Sub SendEmail(from As String, [to] As String, subject As String, plainBody As String, htmlBody As String, attachmentIds As Integer())
  overload: SuperOffice.CRM.Services.IPersonAgent.SendEmail*
  nameWithType.vb: IPersonAgent.SendEmail(String, String, String, String, String, Integer())
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SendEmail(String, String, String, String, String, Integer())
  name.vb: SendEmail(String, String, String, String, String, Integer())
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String)
  id: SendEmailWithEventName(System.String,System.String,System.String,System.String,System.String,System.Int32[],System.String)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SendEmailWithEventName(string, string, string, string, string, int[], string)
  nameWithType: IPersonAgent.SendEmailWithEventName(string, string, string, string, string, int[], string)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName(string, string, string, string, string, int[], string)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Inserts into outbox an email with specified details and event name.
  example: []
  syntax:
    content: void SendEmailWithEventName(string from, string to, string subject, string plainBody, string htmlBody, int[] attachmentIds, string eventName)
    parameters:
    - id: from
      type: System.String
      description: Sender's email address.
    - id: to
      type: System.String
      description: Recipient's email address.
    - id: subject
      type: System.String
      description: Email's subject.
    - id: plainBody
      type: System.String
      description: Email's plain body.
    - id: htmlBody
      type: System.String
      description: Email's html body.
    - id: attachmentIds
      type: System.Int32[]
      description: Ids of email's attachments.
    - id: eventName
      type: System.String
      description: Event name passed to outbound email trigger
    content.vb: Sub SendEmailWithEventName(from As String, [to] As String, subject As String, plainBody As String, htmlBody As String, attachmentIds As Integer(), eventName As String)
  overload: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName*
  nameWithType.vb: IPersonAgent.SendEmailWithEventName(String, String, String, String, String, Integer(), String)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName(String, String, String, String, String, Integer(), String)
  name.vb: SendEmailWithEventName(String, String, String, String, String, Integer(), String)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonList(System.Int32[])
  id: GetPersonList(System.Int32[])
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonList(int[])
  nameWithType: IPersonAgent.GetPersonList(int[])
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(int[])
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets an array of Person objects.
  example: []
  syntax:
    content: Person[] GetPersonList(int[] personIds)
    parameters:
    - id: personIds
      type: System.Int32[]
      description: The identifiers of the Person object
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: Array of Person objects
    content.vb: Function GetPersonList(personIds As Integer()) As Person()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonList*
  nameWithType.vb: IPersonAgent.GetPersonList(Integer())
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonList(Integer())
  name.vb: GetPersonList(Integer())
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(System.Int32)
  id: GetPersonsFromContact(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonsFromContact(int)
  nameWithType: IPersonAgent.GetPersonsFromContact(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns all the persons belonging to a contact.
  example: []
  syntax:
    content: Person[] GetPersonsFromContact(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: The project id
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: The persons belonging to a contact.
    content.vb: Function GetPersonsFromContact(contactId As Integer) As Person()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact*
  nameWithType.vb: IPersonAgent.GetPersonsFromContact(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact(Integer)
  name.vb: GetPersonsFromContact(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(System.Int32)
  id: GetPersonsFromProject(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetPersonsFromProject(int)
  nameWithType: IPersonAgent.GetPersonsFromProject(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Returns all the persons belonging to a project.
  example: []
  syntax:
    content: Person[] GetPersonsFromProject(int projectId)
    parameters:
    - id: projectId
      type: System.Int32
      description: The project id
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: The persons belonging to a project.
    content.vb: Function GetPersonsFromProject(projectId As Integer) As Person()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject*
  nameWithType.vb: IPersonAgent.GetPersonsFromProject(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject(Integer)
  name.vb: GetPersonsFromProject(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleagues
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleagues
  id: GetColleagues
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetColleagues()
  nameWithType: IPersonAgent.GetColleagues()
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleagues()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the persons working in the same company as the logged on user.
  example: []
  syntax:
    content: Person[] GetColleagues()
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: Colleagues.
    content.vb: Function GetColleagues() As Person()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetColleagues*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(System.Int32)
  id: GetColleaguesByDepartment(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetColleaguesByDepartment(int)
  nameWithType: IPersonAgent.GetColleaguesByDepartment(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the persons working in a specific department in the same company as the logged on user. Departments can be retrieved with the PhoneList.DepartmentList service.
  example: []
  syntax:
    content: Person[] GetColleaguesByDepartment(int departmentId)
    parameters:
    - id: departmentId
      type: System.Int32
      description: The department id.
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: PersonList with colleagues.
    content.vb: Function GetColleaguesByDepartment(departmentId As Integer) As Person()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment*
  nameWithType.vb: IPersonAgent.GetColleaguesByDepartment(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment(Integer)
  name.vb: GetColleaguesByDepartment(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  id: GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType,System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetColleaguesBySource(AssociateSourceType, int)
  nameWithType: IPersonAgent.GetColleaguesBySource(AssociateSourceType, int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType, int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Gets the persons working in the same company as the logged on user. The list of person could be retrieved from the history list, the diary view list, or from all sources.
  example: []
  syntax:
    content: Person[] GetColleaguesBySource(AssociateSourceType sourceType, int count)
    parameters:
    - id: sourceType
      type: SuperOffice.CRM.Services.Util.AssociateSourceType
      description: The “source” the colleagues should be retrieved from. &lt;see cref="AssociateSourceType"/&gt; for more information.
    - id: count
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.Person[]
      description: Colleagues.
    content.vb: Function GetColleaguesBySource(sourceType As AssociateSourceType, count As Integer) As Person()
  overload: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource*
  nameWithType.vb: IPersonAgent.GetColleaguesBySource(AssociateSourceType, Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource(SuperOffice.CRM.Services.Util.AssociateSourceType, Integer)
  name.vb: GetColleaguesBySource(AssociateSourceType, Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
  id: GetMyOwner
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetMyOwner()
  nameWithType: IPersonAgent.GetMyOwner()
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner()
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the owner of the logged in person.
  example: []
  syntax:
    content: Person GetMyOwner()
    return:
      type: SuperOffice.CRM.Services.Person
      description: Person
    content.vb: Function GetMyOwner() As Person
  overload: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner*
- uid: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(System.Int32)
  id: GetOwnerOnPersonId(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: GetOwnerOnPersonId(int)
  nameWithType: IPersonAgent.GetOwnerOnPersonId(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Get the owner of the person by id.
  example: []
  syntax:
    content: Person GetOwnerOnPersonId(int personId)
    parameters:
    - id: personId
      type: System.Int32
      description: ''
    return:
      type: SuperOffice.CRM.Services.Person
      description: Person
    content.vb: Function GetOwnerOnPersonId(personId As Integer) As Person
  overload: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId*
  nameWithType.vb: IPersonAgent.GetOwnerOnPersonId(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId(Integer)
  name.vb: GetOwnerOnPersonId(Integer)
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(System.Int32,System.Boolean)
  id: ChangePersonRank(System.Int32,System.Boolean)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: ChangePersonRank(int, bool)
  nameWithType: IPersonAgent.ChangePersonRank(int, bool)
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(int, bool)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Move one person up or down in the ranking in the Person Archive, if possible.&lt;para/&gt;The person record that has rank = 1 is the primary contact for a company, and is the one used in situations where no person has been explicitly chosen (such as in selections).&lt;para/&gt;This method corresponds to the move up/move down functions in the person archive in the contact panel.&lt;para/&gt;This method always affects two records.
  example: []
  syntax:
    content: int ChangePersonRank(int personId, bool moveUp)
    parameters:
    - id: personId
      type: System.Int32
      description: Primary key of person record to move up or down. You must have write access both to this record AND to whatever record is adjacent in the direction you want to move.
    - id: moveUp
      type: System.Boolean
      description: If true, the given person is moved to an earlier rank (lower numeric rank value, down to a limit of 1; up in the GUI if sorted by ascending rank). If false, movement is to later priority (higher numeric rank value).
    return:
      type: System.Int32
      description: If movement occurred, the return value will be the ID of the OTHER person that got moved. A GUI should switch the positions of the original person ID and this return value.&lt;para/&gt;If no movement occurred, for any reason,  0 is returned.
    content.vb: Function ChangePersonRank(personId As Integer, moveUp As Boolean) As Integer
  overload: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank*
  nameWithType.vb: IPersonAgent.ChangePersonRank(Integer, Boolean)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank(Integer, Boolean)
  name.vb: ChangePersonRank(Integer, Boolean)
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(System.Int32,System.Int16)
  id: SetPersonRank(System.Int32,System.Int16)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: SetPersonRank(int, short)
  nameWithType: IPersonAgent.SetPersonRank(int, short)
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(int, short)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Directly set the rank field of a person record, adjusting all other person records under the same contact as needed.&lt;para/&gt;This call may affect multiple records, potentially all person records belonging to one contact.&lt;para/&gt;You must have write access for to affected records for this method to succeed.
  example: []
  syntax:
    content: bool SetPersonRank(int personId, short desiredRank)
    parameters:
    - id: personId
      type: System.Int32
      description: Id of person to change
    - id: desiredRank
      type: System.Int16
      description: Desired rank to set, legal values are from 1 to the number of person records on this contact. Out of range values will be moved to the closest valid value and processed.
    return:
      type: System.Boolean
      description: If movement occurred, or the person already had exactly the desired rank value, then the return value will be true. If movement did not occur, for any other reason, the return value is false.
    content.vb: Function SetPersonRank(personId As Integer, desiredRank As Short) As Boolean
  overload: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank*
  nameWithType.vb: IPersonAgent.SetPersonRank(Integer, Short)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank(Integer, Short)
  name.vb: SetPersonRank(Integer, Short)
- uid: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
  commentId: M:SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(System.Int32)
  id: NormalizeRanks(System.Int32)
  parent: SuperOffice.CRM.Services.IPersonAgent
  langs:
  - csharp
  - vb
  name: NormalizeRanks(int)
  nameWithType: IPersonAgent.NormalizeRanks(int)
  fullName: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(int)
  type: Method
  assemblies:
  - SuperOffice.Services
  namespace: SuperOffice.CRM.Services
  summary: Nomralize the ranks for all persons that belong to a contact. This means that the persons will be sorted according to their current rank values, and the ranks will be made monotonically increasing from 1.
  example: []
  syntax:
    content: bool NormalizeRanks(int contactId)
    parameters:
    - id: contactId
      type: System.Int32
      description: Id of contact whose persons are to be rank normalized
    return:
      type: System.Boolean
      description: The reutrn value is true if the operation suceeded, either because all persons were already normalized, or because normalization was done. It is false if Sentry blocks any required changes.
    content.vb: Function NormalizeRanks(contactId As Integer) As Boolean
  overload: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks*
  nameWithType.vb: IPersonAgent.NormalizeRanks(Integer)
  fullName.vb: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks(Integer)
  name.vb: NormalizeRanks(Integer)
references:
- uid: SuperOffice.CRM.Services
  commentId: N:SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services
  nameWithType: SuperOffice.CRM.Services
  fullName: SuperOffice.CRM.Services
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateDefaultConsentPerson
  name: CreateDefaultConsentPerson
  nameWithType: IPersonAgent.CreateDefaultConsentPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultConsentPerson
- uid: SuperOffice.CRM.Services.ConsentPerson
  commentId: T:SuperOffice.CRM.Services.ConsentPerson
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.ConsentPerson.html
  name: ConsentPerson
  nameWithType: ConsentPerson
  fullName: SuperOffice.CRM.Services.ConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SaveConsentPerson_SuperOffice_CRM_Services_ConsentPerson_
  name: SaveConsentPerson
  nameWithType: IPersonAgent.SaveConsentPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.SaveConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_DeleteConsentPerson_System_Int32_
  name: DeleteConsentPerson
  nameWithType: IPersonAgent.DeleteConsentPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteConsentPerson
- uid: System.Int32
  commentId: T:System.Int32
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int
  nameWithType: int
  fullName: int
  nameWithType.vb: Integer
  fullName.vb: Integer
  name.vb: Integer
- uid: System
  commentId: N:System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System
  nameWithType: System
  fullName: System
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateDefaultPersonEntity
  name: CreateDefaultPersonEntity
  nameWithType: IPersonAgent.CreateDefaultPersonEntity
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonEntity
- uid: SuperOffice.CRM.Services.PersonEntity
  commentId: T:SuperOffice.CRM.Services.PersonEntity
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.PersonEntity.html
  name: PersonEntity
  nameWithType: PersonEntity
  fullName: SuperOffice.CRM.Services.PersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SavePersonEntity_SuperOffice_CRM_Services_PersonEntity_
  name: SavePersonEntity
  nameWithType: IPersonAgent.SavePersonEntity
  fullName: SuperOffice.CRM.Services.IPersonAgent.SavePersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_DeletePersonEntity_System_Int32_
  name: DeletePersonEntity
  nameWithType: IPersonAgent.DeletePersonEntity
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeletePersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateDefaultPersonImage
  name: CreateDefaultPersonImage
  nameWithType: IPersonAgent.CreateDefaultPersonImage
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultPersonImage
- uid: SuperOffice.CRM.Services.PersonImage
  commentId: T:SuperOffice.CRM.Services.PersonImage
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.PersonImage.html
  name: PersonImage
  nameWithType: PersonImage
  fullName: SuperOffice.CRM.Services.PersonImage
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetConsentPerson_System_Int32_
  name: GetConsentPerson
  nameWithType: IPersonAgent.GetConsentPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPerson_System_Int32_
  name: GetPerson
  nameWithType: IPersonAgent.GetPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPerson
- uid: SuperOffice.CRM.Services.Person
  commentId: T:SuperOffice.CRM.Services.Person
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.Person.html
  name: Person
  nameWithType: Person
  fullName: SuperOffice.CRM.Services.Person
- uid: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_TryAddPersonsToEmailFlow_System_Int32_System_Int32___
  name: TryAddPersonsToEmailFlow
  nameWithType: IPersonAgent.TryAddPersonsToEmailFlow
  fullName: SuperOffice.CRM.Services.IPersonAgent.TryAddPersonsToEmailFlow
- uid: System.Int32[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int32
  name: int[]
  nameWithType: int[]
  fullName: int[]
  nameWithType.vb: Integer()
  fullName.vb: Integer()
  name.vb: Integer()
  spec.csharp:
  - uid: System.Int32
    name: int
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Int32
    name: Integer
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.int32
  - name: (
  - name: )
- uid: System.Boolean[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool[]
  nameWithType: bool[]
  fullName: bool[]
  nameWithType.vb: Boolean()
  fullName.vb: Boolean()
  name.vb: Boolean()
  spec.csharp:
  - uid: System.Boolean
    name: bool
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.Boolean
    name: Boolean
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.boolean
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPersonEntity_System_Int32_
  name: GetPersonEntity
  nameWithType: IPersonAgent.GetPersonEntity
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonEntity
- uid: SuperOffice.CRM.Services.IPersonAgent.Undelete*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.Undelete
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_Undelete_System_Int32_
  name: Undelete
  nameWithType: IPersonAgent.Undelete
  fullName: SuperOffice.CRM.Services.IPersonAgent.Undelete
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetMyPerson
  name: GetMyPerson
  nameWithType: IPersonAgent.GetMyPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetSalesRep
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetSalesRep_System_String_System_String_System_String_System_String_System_String_
  name: GetSalesRep
  nameWithType: IPersonAgent.GetSalesRep
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetSalesRep
- uid: System.String
  commentId: T:System.String
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string
  nameWithType: string
  fullName: string
  nameWithType.vb: String
  fullName.vb: String
  name.vb: String
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPhones*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPhones
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPhones_System_Int32_
  name: GetPhones
  nameWithType: IPersonAgent.GetPhones
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPhones
- uid: SuperOffice.CRM.Services.EntityElement[]
  isExternal: true
  href: SuperOffice.CRM.Services.EntityElement.html
  name: EntityElement[]
  nameWithType: EntityElement[]
  fullName: SuperOffice.CRM.Services.EntityElement[]
  nameWithType.vb: EntityElement()
  fullName.vb: SuperOffice.CRM.Services.EntityElement()
  name.vb: EntityElement()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.EntityElement
    name: EntityElement
    isExternal: true
    href: SuperOffice.CRM.Services.EntityElement.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.EntityElement
    name: EntityElement
    isExternal: true
    href: SuperOffice.CRM.Services.EntityElement.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ChangeCountry
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_ChangeCountry_SuperOffice_CRM_Services_PersonEntity_System_Int32_
  name: ChangeCountry
  nameWithType: IPersonAgent.ChangeCountry
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangeCountry
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddress*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetAddress
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetAddress_System_Int32_
  name: GetAddress
  nameWithType: IPersonAgent.GetAddress
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddress
- uid: SuperOffice.CRM.Services.Address
  commentId: T:SuperOffice.CRM.Services.Address
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.Address.html
  name: Address
  nameWithType: Address
  fullName: SuperOffice.CRM.Services.Address
- uid: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetAddressByCountry_System_Int32_System_Int32_
  name: GetAddressByCountry
  nameWithType: IPersonAgent.GetAddressByCountry
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetAddressByCountry
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonImage
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPersonImage_System_Int32_
  name: GetPersonImage
  nameWithType: IPersonAgent.GetPersonImage
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImage
- uid: System.Drawing.Image
  commentId: T:System.Drawing.Image
  parent: System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.drawing.image
  name: Image
  nameWithType: Image
  fullName: System.Drawing.Image
- uid: System.Drawing
  commentId: N:System.Drawing
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system
  name: System.Drawing
  nameWithType: System.Drawing
  fullName: System.Drawing
  spec.csharp:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
  spec.vb:
  - uid: System
    name: System
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system
  - name: .
  - uid: System.Drawing
    name: Drawing
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.drawing
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SetPersonImage
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SetPersonImage_System_Int32_System_Drawing_Image_
  name: SetPersonImage
  nameWithType: IPersonAgent.SetPersonImage
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonImage
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateDefaultByContactId_System_Int32_
  name: CreateDefaultByContactId
  nameWithType: IPersonAgent.CreateDefaultByContactId
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultByContactId
- uid: SuperOffice.CRM.Services.IPersonAgent.Move*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.Move
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_Move_System_Int32_System_Int32_System_DateTime_
  name: Move
  nameWithType: IPersonAgent.Move
  fullName: SuperOffice.CRM.Services.IPersonAgent.Move
- uid: System.DateTime
  commentId: T:System.DateTime
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.datetime
  name: DateTime
  nameWithType: DateTime
  fullName: System.DateTime
  nameWithType.vb: Date
  fullName.vb: Date
  name.vb: Date
- uid: SuperOffice.CRM.Services.IPersonAgent.Merge*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.Merge
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_Merge_System_Int32_System_Int32_System_DateTime_System_Boolean_System_Boolean_
  name: Merge
  nameWithType: IPersonAgent.Merge
  fullName: SuperOffice.CRM.Services.IPersonAgent.Merge
- uid: System.Boolean
  commentId: T:System.Boolean
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.boolean
  name: bool
  nameWithType: bool
  fullName: bool
  nameWithType.vb: Boolean
  fullName.vb: Boolean
  name.vb: Boolean
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateDefaultFromCredential_System_Int32_System_String_System_String_System_String_
  name: CreateDefaultFromCredential
  nameWithType: IPersonAgent.CreateDefaultFromCredential
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateDefaultFromCredential
- uid: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.IsNumberValid
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_IsNumberValid_System_Int32_System_String_
  name: IsNumberValid
  nameWithType: IPersonAgent.IsNumberValid
  fullName: SuperOffice.CRM.Services.IPersonAgent.IsNumberValid
- uid: SuperOffice.CRM.Services.IPersonAgent.SetConsent*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SetConsent
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SetConsent_System_Int32_System_String_System_String_System_String_System_String_
  name: SetConsent
  nameWithType: IPersonAgent.SetConsent
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetConsent
- uid: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.RemoveConsent
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_RemoveConsent_System_Int32_System_String_
  name: RemoveConsent
  nameWithType: IPersonAgent.RemoveConsent
  fullName: SuperOffice.CRM.Services.IPersonAgent.RemoveConsent
- uid: SuperOffice.CRM.Services.IPersonAgent.HasConsent*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.HasConsent
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_HasConsent_System_Int32_System_String_
  name: HasConsent
  nameWithType: IPersonAgent.HasConsent
  fullName: SuperOffice.CRM.Services.IPersonAgent.HasConsent
- uid: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetConsentInfos_System_Int32_
  name: GetConsentInfos
  nameWithType: IPersonAgent.GetConsentInfos
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetConsentInfos
- uid: SuperOffice.CRM.Services.ConsentInfo[]
  isExternal: true
  href: SuperOffice.CRM.Services.ConsentInfo.html
  name: ConsentInfo[]
  nameWithType: ConsentInfo[]
  fullName: SuperOffice.CRM.Services.ConsentInfo[]
  nameWithType.vb: ConsentInfo()
  fullName.vb: SuperOffice.CRM.Services.ConsentInfo()
  name.vb: ConsentInfo()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.ConsentInfo
    name: ConsentInfo
    isExternal: true
    href: SuperOffice.CRM.Services.ConsentInfo.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.ConsentInfo
    name: ConsentInfo
    isExternal: true
    href: SuperOffice.CRM.Services.ConsentInfo.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SendConsentConfirmationEmail_System_Int32_System_String_System_Int32_System_Int32_System_String_
  name: SendConsentConfirmationEmail
  nameWithType: IPersonAgent.SendConsentConfirmationEmail
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendConsentConfirmationEmail
- uid: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_ResolvePersonFromInfo_System_Int32_System_String_System_String___System_String___
  name: ResolvePersonFromInfo
  nameWithType: IPersonAgent.ResolvePersonFromInfo
  fullName: SuperOffice.CRM.Services.IPersonAgent.ResolvePersonFromInfo
- uid: System.String[]
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.string
  name: string[]
  nameWithType: string[]
  fullName: string[]
  nameWithType.vb: String()
  fullName.vb: String()
  name.vb: String()
  spec.csharp:
  - uid: System.String
    name: string
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: '['
  - name: ']'
  spec.vb:
  - uid: System.String
    name: String
    isExternal: true
    href: https://learn.microsoft.com/dotnet/api/system.string
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.ResolvedPerson
  commentId: T:SuperOffice.CRM.Services.ResolvedPerson
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.ResolvedPerson.html
  name: ResolvedPerson
  nameWithType: ResolvedPerson
  fullName: SuperOffice.CRM.Services.ResolvedPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_AddEmailAddressToPerson_System_Int32_System_String_System_Boolean_
  name: AddEmailAddressToPerson
  nameWithType: IPersonAgent.AddEmailAddressToPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddEmailAddressToPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateTemporaryKey_SuperOffice_Data_TemporaryKeyDomain_System_Int32_System_Int32_System_DateTime_
  name: CreateTemporaryKey
  nameWithType: IPersonAgent.CreateTemporaryKey
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKey
- uid: SuperOffice.Data.TemporaryKeyDomain
  isExternal: true
  name: TemporaryKeyDomain
  nameWithType: TemporaryKeyDomain
  fullName: SuperOffice.Data.TemporaryKeyDomain
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateTemporaryKeyWithPayload_SuperOffice_Data_TemporaryKeyDomain_System_Int32_System_Int32_System_DateTime_System_String_
  name: CreateTemporaryKeyWithPayload
  nameWithType: IPersonAgent.CreateTemporaryKeyWithPayload
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateTemporaryKeyWithPayload
- uid: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CheckTemporaryKey_System_String_
  name: CheckTemporaryKey
  nameWithType: IPersonAgent.CheckTemporaryKey
  fullName: SuperOffice.CRM.Services.IPersonAgent.CheckTemporaryKey
- uid: SuperOffice.CRM.Services.TemporaryKeyInfo
  commentId: T:SuperOffice.CRM.Services.TemporaryKeyInfo
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.TemporaryKeyInfo.html
  name: TemporaryKeyInfo
  nameWithType: TemporaryKeyInfo
  fullName: SuperOffice.CRM.Services.TemporaryKeyInfo
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_DeleteTemporaryKeysOfDomain_SuperOffice_Data_TemporaryKeyDomain_System_Int32_
  name: DeleteTemporaryKeysOfDomain
  nameWithType: IPersonAgent.DeleteTemporaryKeysOfDomain
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteTemporaryKeysOfDomain
- uid: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_DeleteExpired
  name: DeleteExpired
  nameWithType: IPersonAgent.DeleteExpired
  fullName: SuperOffice.CRM.Services.IPersonAgent.DeleteExpired
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPersonSummary_System_Int32_System_Int32_
  name: GetPersonSummary
  nameWithType: IPersonAgent.GetPersonSummary
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonSummary
- uid: SuperOffice.CRM.Services.PersonSummary
  commentId: T:SuperOffice.CRM.Services.PersonSummary
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.PersonSummary.html
  name: PersonSummary
  nameWithType: PersonSummary
  fullName: SuperOffice.CRM.Services.PersonSummary
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounce*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddBounce
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_AddBounce_System_String_
  name: AddBounce
  nameWithType: IPersonAgent.AddBounce
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounce
- uid: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_ValidatePersonEntity_SuperOffice_CRM_Services_PersonEntity_
  name: ValidatePersonEntity
  nameWithType: IPersonAgent.ValidatePersonEntity
  fullName: SuperOffice.CRM.Services.IPersonAgent.ValidatePersonEntity
- uid: SuperOffice.CRM.Services.StringDictionary
  isExternal: true
  name: StringDictionary
  nameWithType: StringDictionary
  fullName: SuperOffice.CRM.Services.StringDictionary
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_AddBounceWithCount_System_String_System_Int32_
  name: AddBounceWithCount
  nameWithType: IPersonAgent.AddBounceWithCount
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithCount
- uid: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetBestSoLanguageForTemplate_System_Int32_System_Int32_
  name: GetBestSoLanguageForTemplate
  nameWithType: IPersonAgent.GetBestSoLanguageForTemplate
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetBestSoLanguageForTemplate
- uid: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_AddBounceWithDetails_System_String_System_Int32_System_Int32_System_String_
  name: AddBounceWithDetails
  nameWithType: IPersonAgent.AddBounceWithDetails
  fullName: SuperOffice.CRM.Services.IPersonAgent.AddBounceWithDetails
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonImages*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonImages
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPersonImages_System_Int32___System_Int32_System_Int32_
  name: GetPersonImages
  nameWithType: IPersonAgent.GetPersonImages
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonImages
- uid: SuperOffice.CRM.Services.PersonImage[]
  isExternal: true
  href: SuperOffice.CRM.Services.PersonImage.html
  name: PersonImage[]
  nameWithType: PersonImage[]
  fullName: SuperOffice.CRM.Services.PersonImage[]
  nameWithType.vb: PersonImage()
  fullName.vb: SuperOffice.CRM.Services.PersonImage()
  name.vb: PersonImage()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.PersonImage
    name: PersonImage
    isExternal: true
    href: SuperOffice.CRM.Services.PersonImage.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.PersonImage
    name: PersonImage
    isExternal: true
    href: SuperOffice.CRM.Services.PersonImage.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_CreateOrUpdateUserCandidate_System_Int32_System_String_System_Boolean_
  name: CreateOrUpdateUserCandidate
  nameWithType: IPersonAgent.CreateOrUpdateUserCandidate
  fullName: SuperOffice.CRM.Services.IPersonAgent.CreateOrUpdateUserCandidate
- uid: SuperOffice.CRM.Services.UserCandidate
  commentId: T:SuperOffice.CRM.Services.UserCandidate
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.UserCandidate.html
  name: UserCandidate
  nameWithType: UserCandidate
  fullName: SuperOffice.CRM.Services.UserCandidate
- uid: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetUserCandidateByPerson_System_Int32_
  name: GetUserCandidateByPerson
  nameWithType: IPersonAgent.GetUserCandidateByPerson
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetUserCandidateByPerson
- uid: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetCustomerCentrePasswordReplyTemplate_System_Int32_
  name: GetCustomerCentrePasswordReplyTemplate
  nameWithType: IPersonAgent.GetCustomerCentrePasswordReplyTemplate
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetCustomerCentrePasswordReplyTemplate
- uid: SuperOffice.CRM.Services.ReplyTemplateParsed
  commentId: T:SuperOffice.CRM.Services.ReplyTemplateParsed
  parent: SuperOffice.CRM.Services
  isExternal: true
  href: SuperOffice.CRM.Services.ReplyTemplateParsed.html
  name: ReplyTemplateParsed
  nameWithType: ReplyTemplateParsed
  fullName: SuperOffice.CRM.Services.ReplyTemplateParsed
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmail*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SendEmail
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SendEmail_System_String_System_String_System_String_System_String_System_String_System_Int32___
  name: SendEmail
  nameWithType: IPersonAgent.SendEmail
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmail
- uid: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SendEmailWithEventName_System_String_System_String_System_String_System_String_System_String_System_Int32___System_String_
  name: SendEmailWithEventName
  nameWithType: IPersonAgent.SendEmailWithEventName
  fullName: SuperOffice.CRM.Services.IPersonAgent.SendEmailWithEventName
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonList*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonList
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPersonList_System_Int32___
  name: GetPersonList
  nameWithType: IPersonAgent.GetPersonList
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonList
- uid: SuperOffice.CRM.Services.Person[]
  isExternal: true
  href: SuperOffice.CRM.Services.Person.html
  name: Person[]
  nameWithType: Person[]
  fullName: SuperOffice.CRM.Services.Person[]
  nameWithType.vb: Person()
  fullName.vb: SuperOffice.CRM.Services.Person()
  name.vb: Person()
  spec.csharp:
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    isExternal: true
    href: SuperOffice.CRM.Services.Person.html
  - name: '['
  - name: ']'
  spec.vb:
  - uid: SuperOffice.CRM.Services.Person
    name: Person
    isExternal: true
    href: SuperOffice.CRM.Services.Person.html
  - name: (
  - name: )
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPersonsFromContact_System_Int32_
  name: GetPersonsFromContact
  nameWithType: IPersonAgent.GetPersonsFromContact
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromContact
- uid: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetPersonsFromProject_System_Int32_
  name: GetPersonsFromProject
  nameWithType: IPersonAgent.GetPersonsFromProject
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetPersonsFromProject
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleagues*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetColleagues
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetColleagues
  name: GetColleagues
  nameWithType: IPersonAgent.GetColleagues
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleagues
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetColleaguesByDepartment_System_Int32_
  name: GetColleaguesByDepartment
  nameWithType: IPersonAgent.GetColleaguesByDepartment
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesByDepartment
- uid: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetColleaguesBySource_SuperOffice_CRM_Services_Util_AssociateSourceType_System_Int32_
  name: GetColleaguesBySource
  nameWithType: IPersonAgent.GetColleaguesBySource
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetColleaguesBySource
- uid: SuperOffice.CRM.Services.Util.AssociateSourceType
  commentId: T:SuperOffice.CRM.Services.Util.AssociateSourceType
  parent: SuperOffice.CRM.Services.Util
  isExternal: true
  href: SuperOffice.CRM.Services.Util.AssociateSourceType.html
  name: AssociateSourceType
  nameWithType: AssociateSourceType
  fullName: SuperOffice.CRM.Services.Util.AssociateSourceType
- uid: SuperOffice.CRM.Services.Util
  commentId: N:SuperOffice.CRM.Services.Util
  isExternal: true
  href: SuperOffice.html
  name: SuperOffice.CRM.Services.Util
  nameWithType: SuperOffice.CRM.Services.Util
  fullName: SuperOffice.CRM.Services.Util
  spec.csharp:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  - name: .
  - uid: SuperOffice.CRM.Services.Util
    name: Util
    isExternal: true
    href: SuperOffice.CRM.Services.Util.html
  spec.vb:
  - uid: SuperOffice
    name: SuperOffice
    isExternal: true
    href: SuperOffice.html
  - name: .
  - uid: SuperOffice.CRM
    name: CRM
    isExternal: true
    href: SuperOffice.CRM.html
  - name: .
  - uid: SuperOffice.CRM.Services
    name: Services
    isExternal: true
    href: SuperOffice.CRM.Services.html
  - name: .
  - uid: SuperOffice.CRM.Services.Util
    name: Util
    isExternal: true
    href: SuperOffice.CRM.Services.Util.html
- uid: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetMyOwner
  name: GetMyOwner
  nameWithType: IPersonAgent.GetMyOwner
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetMyOwner
- uid: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_GetOwnerOnPersonId_System_Int32_
  name: GetOwnerOnPersonId
  nameWithType: IPersonAgent.GetOwnerOnPersonId
  fullName: SuperOffice.CRM.Services.IPersonAgent.GetOwnerOnPersonId
- uid: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_ChangePersonRank_System_Int32_System_Boolean_
  name: ChangePersonRank
  nameWithType: IPersonAgent.ChangePersonRank
  fullName: SuperOffice.CRM.Services.IPersonAgent.ChangePersonRank
- uid: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.SetPersonRank
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_SetPersonRank_System_Int32_System_Int16_
  name: SetPersonRank
  nameWithType: IPersonAgent.SetPersonRank
  fullName: SuperOffice.CRM.Services.IPersonAgent.SetPersonRank
- uid: System.Int16
  commentId: T:System.Int16
  parent: System
  isExternal: true
  href: https://learn.microsoft.com/dotnet/api/system.int16
  name: short
  nameWithType: short
  fullName: short
  nameWithType.vb: Short
  fullName.vb: Short
  name.vb: Short
- uid: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks*
  commentId: Overload:SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks
  isExternal: true
  href: SuperOffice.CRM.Services.IPersonAgent.html#SuperOffice_CRM_Services_IPersonAgent_NormalizeRanks_System_Int32_
  name: NormalizeRanks
  nameWithType: IPersonAgent.NormalizeRanks
  fullName: SuperOffice.CRM.Services.IPersonAgent.NormalizeRanks
